Pattern changes caused by commit: e9de80e5da2d3ab8d4f7771eb95bbc038baa145e

From: Mediator-1
To:   Mediator-0


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-359.txt 

commit e9de80e5da2d3ab8d4f7771eb95bbc038baa145e
Author: Konstantin I Boudnik <cos@apache.org>

    HDFS-880. TestNNLeaseRecovery fails on windows. Contributed by Konstantin Boudnik, Konstantin Shvachko.



==================================
 Issue HDFS-880 Description 
=======================================

Project: Hadoop HDFS
-----------------

-----------------
Title: [HDFS-880] TestNNLeaseRecovery fails on windows
-----------------

-----------------
Summary: TestNNLeaseRecovery fails on windows
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Closed
-----------------

-----------------
Created at: Thu, 7 Jan 2010 21:46:04 +0000
-----------------

-----------------
Resolved at: Mon, 11 Jan 2010 18:21:05 +0000
-----------------

-----------------
Assigned to: Konstantin I Boudnik
-----------------

-----------------
Description: 

TestNNLeaseRecovery fails on windows trying to delete name-node storage directory.
 

-----------------

-----------------
Comments: 

New Comment: 
The attached patch is not a fix for the problem. But it helps to see where the problem
is.<ul class="alternate" type="square">	<li>In the patch I set explicitly name-node
storage directories. In the original code it is supposed that directories are in
/tmp/hadoop-shv/dfs, but if you run it in eclipse it may not be (and usually is not) the
case.</li>	<li>There is no need to separately close the FSImage and then FSNamesystem.
FSNamesystem.close() will also close FSImage.</li>	<li>Use FSUtil.fullyDelete() it is
standard.</li></ul> 


New Comment: 
Looks like the problem is in <tt>TestNNLeaseRecovery.mockFileBlocks()</tt>. FSNamesystem
constructor creates FSImage, which opens image and edits files. Then
<tt>mockFileBlocks()</tt> creates a mocked <tt>FSDirectory</tt>, where FSImage is null,
and assigns it to <tt>FSNamesystem.dir</tt>. Now when FSNamesystem closes it will keep the
original files open since it does not have access to them (the original FSImage was
replaced by null).<br/>This does not effect the test in Unix, because it lets remove
opened files. NTFS does not allow it. 


New Comment: 
The updated version of Konstantin's patch does make sure that there's no unclosed instance
of FSDirectory is laying around: I'm simply closing it before the change of the
reference.The reason why it has to be a mocked reference to FSDirectory is that mocked
INodeFileUnderConstruction has to be returned for the purpose having properly set blocks
and so on. In fact, with having <em>real</em> FSDirectory's instance being properly closed
the whole business of removing the <tt>NAME_DIR</tt> isn't needed any more, but I'll leave
for a sanity sake. 


New Comment: 
I ran the test. It worked on my windows box.<br/>Is it possible to instantiate
FSNamesystem using the constructor that takes FSImage as a parameter. Just a thought to
verify, if it is not easy please submit the patch as it is. I remember Eli was working on
mocking FSNamesystem, may he knows how to it better. 


New Comment: 
<blockquote>Is it possible to instantiate FSNamesystem using the constructor that takes
FSImage as a parameter. </blockquote>I think it makes little difference because no matter
what constructor is used FSDirectory member will be initialized (currently through
<tt>initialize(Configuration conf, FSImage fsImage)</tt> call where fsImage equals
<tt>null</tt>; or through direct {{    this.dir = new FSDirectory(fsImage, this, conf);}}
in your case. It still leave us with two FSDirectory objects and so on.I'll gonna commit
the latest (combined) version of the patch. Thanks for finding and debugging this issue:
hard to find problem indeed! 


New Comment: 
I've committed it to the trunk and 0.21 branch. 


New Comment: 
Integrated in Hadoop-Hdfs-trunk-Commit #165 (See <a
href="http://hudson.zones.apache.org/hudson/job/Hadoop-Hdfs-trunk-Commit/165/"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hadoop-Hdfs-trunk-Commit/165/</a>)<br/>
   . TestNNLeaseRecovery fails on windows. Contributed by Konstantin Boudnik, Konstantin
Shvachko. 


New Comment: 
<blockquote>Is it possible to instantiate FSNamesystem using the constructor that takes
FSImage as a parameter. Just a thought to verify, if it is not easy please submit the
patch as it is. I remember Eli was working on mocking FSNamesystem, may he knows how to it
better.</blockquote>My first patch for <a
href="https://issues.apache.org/jira/browse/HDFS-669" title="Add unit tests framework
(Mockito)" class="issue-link" data-issue-key="HDFS-669"><del>HDFS-669</del></a> mocked up
FSNamesystem, it's doable. Per our discussion a while back we decided to some unit tests
directly against NameNode. Working on finishing up the symlink patches first. 


New Comment: 
Yes, pure mocking of FSNamesystem is doable, but clearly for this testing's scope it seems
to be much easier to spy on it and replace some references with mocks. 


New Comment: 
Integrated in Hdfs-Patch-h2.grid.sp2.yahoo.net #94 (See <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h2.grid.sp2.yahoo.net/94/"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h2.grid.sp2.yahoo.net/94/</a>)<br/>
   . TestNNLeaseRecovery fails on windows. Contributed by Konstantin Boudnik, Konstantin
Shvachko. 


New Comment: 
Integrated in Hdfs-Patch-h5.grid.sp2.yahoo.net #183 (See <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/183/"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/183/</a>) 


New Comment: 
Integrated in Hadoop-Hdfs-trunk #198 (See <a
href="http://hudson.zones.apache.org/hudson/job/Hadoop-Hdfs-trunk/198/"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hadoop-Hdfs-trunk/198/</a>)<br/> 
  . TestNNLeaseRecovery fails on windows. Contributed by Konstantin Boudnik, Konstantin
Shvachko. 


