Pattern changes caused by commit: ceb1c08a784b22fd0b1eb25cc303458b37de74a9

From: Mediator-1
To:   Mediator-0


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-151.txt 

commit ceb1c08a784b22fd0b1eb25cc303458b37de74a9
Author: Konstantin Shvachko <shv@apache.org>

    HDFS-576. Block report includes under-construction replicas. Contributed by Konstantin Shvachko.



==================================
 Issue HDFS-576 Description 
=======================================

Project: Hadoop HDFS
-----------------

-----------------
Title: [HDFS-576] Extend Block report to include under-construction replicas
-----------------

-----------------
Summary: Extend Block report to include under-construction replicas
-----------------

-----------------
Issue type: Sub-task
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Thu, 27 Aug 2009 21:00:48 +0000
-----------------

-----------------
Resolved at: Tue, 8 Sep 2009 22:48:36 +0000
-----------------

-----------------
Assigned to: Konstantin Shvachko
-----------------

-----------------
Description: 

Current data-node block reports report only finalized (in append terminology) blocks.
Data-nodes should report all block replicas except for the temporary ones so that clients
could read from incomplete replicas and to make block recovery possible.<br/>The attached
design document goes into more details of the new block reports.
 

-----------------

-----------------
Comments: 

New Comment: 
This patch introduces <ol>	<li><tt>ReplicaUnderConstruction</tt> as a storage for
non-finalized replicas in <tt>BlockUnderConstruction</tt>.</li>	<li>New block-report
structure. According to the specs it contains (logically) two arrays of longs: one for 
finalized replicas and another for uc-replicas.</li>	<li>The two logical arrays are
physically implemented as one array of longs that has a header, containing the lengths of
the two logical arrays. The logical arrays are delimited by an illegal
block.</li>	<li>Data-nodes send the new block report with all finalized and uc-replicas,
but not the temporary ones.</li>	<li>The preport processing logic on the name-node is not
fully implemented. It is restricted to process finalized and rwr blocks exactly as the
current implementation does. The block report processing will be implemented in the
subsequent patch.</li></ol> 


New Comment: 
1. we should bump up DatanodeProtocol's version not ClientProtocol's.<br/>2. The original
replica of RUR may in finalized state. In this case, should we add the original replica
into finalized version.<br/>3. Would the change be simpler if we change blockReport to
take two lists: finalizedReplicas and ucReplicas? In ucReplicas, we use positive length to
represent rbw replicas and negative length to represent rwr replicas or make blockReport
to take three lists. In this way we do not need to change BlockListAsLongs. In the server
side, there is no need to break the report into 2 lists either. 


New Comment: 
&gt; The original replica of RUR may in finalized state. In this case, should we add the
original replica into finalized version.<br/>I meant adding this to the finalized list. 


New Comment: 
&gt; 1. we should bump up DatanodeProtocol's version not ClientProtocol's.Oops, fixed
it.&gt; 2. The original replica of RUR may in finalized state. In this case, should we add
the original replica into finalized version.Good point. I didn't think about it. Now that
I did, it looks that from data-node viewpoint rur blocks are not finalized, <br/>so it
should not  put them into the finalized list. But you are right this should be taken care
of while processing the report on the name-node. <br/>This should go naturally, because
the processing is based on the replica state not the list it belongs to.&gt; 3. Would the
change be simpler if we change blockReport to take two lists: finalizedReplicas and
ucReplicas?My implementation exactly follows the specs attached to this jira and on which
we agreed upon. The spec says two logical lists packed in an array of longs. Besides, I
don't think this makes things easier overall. The BlockListAsLongs will remain unchanged,
but all places that use getBlockReport will have to handle three arrays. Also if we go
your path it will be hard to send complete replica states as well as we will have to
increase the number of arrays every time the number of state changes. Not mentioning that
re-implementation would take another 3 days. 


New Comment: 
I merged the branch with th trunk and updated the patch accordingly. Ran test-core and
test-patch. All seccessful.<div class="code panel" style="border-width: 1px;"><div
class="codeContent panelContent"><pre class="code-java">.    [exec] There appear to be 150
release audit warnings before the patch and 150 release audit warnings after applying the
patch.     [exec] +1 overall.       [exec]     +1 @author.  The patch does not contain any
@author tags.     [exec]     +1 tests included.  The patch appears to include 30 <span
class="code-keyword">new</span> or modified tests.     [exec]     +1 javadoc.  The javadoc
tool did not generate any warning messages.     [exec]     +1 javac.  The applied patch
does not increase the total number of javac compiler warnings.     [exec]     +1 findbugs.
 The patch does not introduce any <span class="code-keyword">new</span> Findbugs warnings.
    [exec]     +1 release audit.  The applied patch does not increase the total number of
release audit warnings.     [exec]
======================================================================     [exec]
======================================================================     [exec]    
Finished build.     [exec]
======================================================================     [exec]
======================================================================BUILD
SUCCESSFUL</pre></div></div> 


