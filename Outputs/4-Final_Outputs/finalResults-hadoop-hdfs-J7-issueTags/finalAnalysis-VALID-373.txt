Pattern changes caused by commit: 2c59cd75414df9a18de1047be41e8379a0995c04

From: Mediator-0
To:   Mediator-1


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-373.txt 

commit 2c59cd75414df9a18de1047be41e8379a0995c04
Author: Hairong Kuang <hairong@apache.org>

    HDFS-800. The last block of a file under construction may change to the COMPLETE state in response to getAdditionalBlock or completeFileInternal. Contributed by Hairong Kuang.



==================================
 Issue HDFS-800 Description 
=======================================

Project: Hadoop HDFS
-----------------

-----------------
Title: [HDFS-800] The last block of a file under construction may change to the COMPLETE state in response to getAdditionalBlock or completeFileInternal
-----------------

-----------------
Summary: The last block of a file under construction may change to the COMPLETE state in response to getAdditionalBlock or completeFileInternal
-----------------

-----------------
Issue type: Improvement
-----------------

-----------------
Current status: Closed
-----------------

-----------------
Created at: Wed, 2 Dec 2009 18:01:01 +0000
-----------------

-----------------
Resolved at: Sat, 23 Jan 2010 01:35:33 +0000
-----------------

-----------------
Assigned to: Hairong Kuang
-----------------

-----------------
Description: 

Currently the last block changes to be the COMMITTED state. However, if the block already
has a valid finalizeded replica, it should be changed to be the COMPLETE state.
 

-----------------

-----------------
Comments: 

New Comment: 
This is a patch for fixing the problem.With this patch, we could change the method
FSNamesystem#checkFileProgress from counting live valid replicas to be checking if every
block is a complete block. 


New Comment: 
Hello Hairong,In this patch, commitBlock() invokes commitBlock.getNumBytes() but did
remove the null check, is this matter? Or it could make sure anyone (seems only
commitOrCompleteLastBlock() calls it) calls this method will check it in advance. 


New Comment: 
commitBlock is a private method and currently is called only by commitOrCompleteLastBlock.
So I think that no checking is ok.Also this patch does not have a unit test. HDFS already
has a unit test  TestBlockUnderConstruction#testBlockCreation that verifies the state of
each block of a file. 


New Comment: 
In <tt>addStoredBlock()</tt> you COMPLETE block only if there is enough valid replicas.
Otherwise it will still be in COMMITTED state. Therefore, we still need logic that will
COMPLETE penultimate blocks after checking the file progress. I don't think you can remove
it. Do I miss anything here?<br/>The same with <tt>closeFileInternal()</tt>. Both the last
and the penultimate blocks can be in COMMITTED state, because
<tt>commitOrCompleteLastBlock()</tt> does not guarantee that the block is completed. 


New Comment: 
The idea is that a block may become COMPLETE in commitOrCompleteLastBlock. Otherwise, it
will become COMPLETE in addStoredBlock. If a block is in COMMITTED state, check progress
won't return true. That's why I suggest with my change, check progress does not need to
count live replicas, instead it just check if each block is in COMPLETE state or not. 


New Comment: 
Hi Hairong, can you pl explain (again) what causes a block to move the COMPLETE state and
what else causes it to move to the COMPLETE state? Thanks. 


New Comment: 
COMPLETE = COMMITTE + #(valid finalized replicas) meets the min_replication requirement.
So there is two cases that a blocks becomes COMPLETE:<br/>1. When finalizing a block's
length &amp; GS (in getAdditionalBlock and completeFileInternal), if the block has already
met the min replication, change it to be COMPLETE. This is the change that I propose in
this jira. Current code changes it to only COMMITTED.<br/>2.When a block is in COMMITTED
state and addStoredBlock finds that it meets the min replication, change its state to
COMPLETE. 


New Comment: 
Just want to make it clear. When I filed this jira, I thought it was a bug. But while I
worked on this, I realize that my proposed change is more like an optimization. Current
trunk does not do case 1. However if a block missed the state change in (1), the block's
state will be changed to be COMPLETE at a later time after a check if its replicas# meets
the min replication factor returns true. 


New Comment: 
This new patch additionally changed checkFileProgress to check if a block is complete
instead of checking if it meets the min replication requirement. 


New Comment: 
-1 overall.  Here are the results of testing the latest attachment <br/>  <a
href="http://issues.apache.org/jira/secure/attachment/12430461/HDFS-800.patch"
class="external-link"
rel="nofollow">http://issues.apache.org/jira/secure/attachment/12430461/HDFS-800.patch</a><br/>
 against trunk revision 902232.    +1 @author.  The patch does not contain any @author
tags.    -1 tests included.  The patch doesn't appear to include any new or modified
tests.<br/>                        Please justify why no new tests are needed for this
patch.<br/>                        Also please list what manual steps were performed to
verify this patch.    +1 javadoc.  The javadoc tool did not generate any warning messages.
   +1 javac.  The applied patch does not increase the total number of javac compiler
warnings.    +1 findbugs.  The patch does not introduce any new Findbugs warnings.    +1
release audit.  The applied patch does not increase the total number of release audit
warnings.    -1 core tests.  The patch failed core unit tests.    +1 contrib tests.  The
patch passed contrib unit tests.Test results: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/199/testReport/"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/199/testReport/</a><br/>Findbugs
warnings: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/199/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/199/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/>Checkstyle
results: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/199/artifact/trunk/build/test/checkstyle-errors.html"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/199/artifact/trunk/build/test/checkstyle-errors.html</a><br/>Console
output: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/199/console"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/199/console</a>This
message is automatically generated. 


New Comment: 
<div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent
panelContent"><pre>java.lang.NoClassDefFoundError: org/apache/hadoop/conf/Configuration	at
java.lang.Class.forName0(Native Method)	...</pre></div></div>Many tests failed with
NoClassDefFoundError.  The Hudson machine definitely has problems.  We got similar failure
in <a href="https://issues.apache.org/jira/browse/HDFS-630" title="In
DFSOutputStream.nextBlockOutputStream(), the client can exclude specific datanodes when
locating the next block." class="issue-link"
data-issue-key="HDFS-630"><del>HDFS-630</del></a>. 


New Comment: 
All unit tests are passed on my local machine.<br/>BUILD SUCCESSFUL<br/>Total time: 49
minutes 14 secondsNo unit test is included because HDFS already has a unit test
TestBlockUnderConstruction#testBlockCreation that verifies the state of each block of a
file. 


New Comment: 
Your last change was critical for both understanding and improving the performance of this
code.<br/>+1 


New Comment: 
I've just committed this. 


New Comment: 
Integrated in Hadoop-Hdfs-trunk-Commit #177 (See <a
href="http://hudson.zones.apache.org/hudson/job/Hadoop-Hdfs-trunk-Commit/177/"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hadoop-Hdfs-trunk-Commit/177/</a>)<br/>
   . The last block of a file under construction may change to the COMPLETE state in
response to getAdditionalBlock or completeFileInternal. Contributed by Hairong Kuang. 


New Comment: 
Integrated in Hadoop-Hdfs-trunk #210 (See <a
href="http://hudson.zones.apache.org/hudson/job/Hadoop-Hdfs-trunk/210/"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hadoop-Hdfs-trunk/210/</a>) 


New Comment: 
Integrated in Hdfs-Patch-h2.grid.sp2.yahoo.net #101 (See <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h2.grid.sp2.yahoo.net/101/"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h2.grid.sp2.yahoo.net/101/</a>)<br/>
   . The last block of a file under construction may change to the COMPLETE state in
response to getAdditionalBlock or completeFileInternal. Contributed by Hairong Kuang. 


