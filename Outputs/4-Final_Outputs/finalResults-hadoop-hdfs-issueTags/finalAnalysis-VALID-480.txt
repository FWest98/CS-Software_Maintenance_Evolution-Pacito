Pattern changes caused by commit: 32af1b3779d4a035a9976c32c9414d9d8fdb48b2

From: Mediator-1
To:   Mediator-0


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-480.txt 

commit 32af1b3779d4a035a9976c32c9414d9d8fdb48b2
Author: Hairong Kuang <hairong@apache.org>

    HDFS-1112. Edit log buffer should not grow unboundedly. Contributed by Hairong Kuang.



==================================
 Issue HDFS-1112 Description 
=======================================

Project: Hadoop HDFS
-----------------

-----------------
Title: [HDFS-1112] Edit log buffer should not grow unboundedly
-----------------

-----------------
Summary: Edit log buffer should not grow unboundedly
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Closed
-----------------

-----------------
Created at: Tue, 27 Apr 2010 20:32:51 +0000
-----------------

-----------------
Resolved at: Fri, 21 May 2010 18:12:32 +0000
-----------------

-----------------
Assigned to: Hairong Kuang
-----------------

-----------------
Description: 

Currently HDFS does not impose an upper limit on the edit log buffer. In case there are a
large number of open operations coming in with access time update on, since open does not
call sync automatically, there is a possibility that the buffer grow to a large size,
therefore causes memory leak and full GC in extreme cases as described in <a
href="https://issues.apache.org/jira/browse/HDFS-1104" title="Fsck triggers full GC on
NameNode" class="issue-link" data-issue-key="HDFS-1104"><del>HDFS-1104</del></a>. 

The
edit log buffer should be automatically flushed when the buffer becomes full.
 

-----------------

-----------------
Comments: 

New Comment: 
We need to be a little bit careful of this, since we've made assumptions in some places
that logSync() won't be called while the NN is in safe mode.Dhruba, do you have an opinion
on this? I know the contracts regarding safemode are important for your HA work. 


New Comment: 
The best bet is that the Nn should not allow any transactions while in safemode. This
means that any operation that needs to do transactions should fail if the namenode is in
safemode. Hairong is already proposing changing fsck to not update access times via <a
href="https://issues.apache.org/jira/browse/HDFS-1104" title="Fsck triggers full GC on
NameNode" class="issue-link" data-issue-key="HDFS-1104"><del>HDFS-1104</del></a>.I think
we should also try to solve the general case where the NN does not update access time of
files if the NN is in safemode.  Do you agree? 


New Comment: 
I think so... it's just sort of strange semantics to say that access times are enabled but
don't get updated if the NN is in safe mode. It's almost as if safemode should be called
"recovery mode" or "readonly mode" where these ideas would be more explicit. 


New Comment: 
&gt; I think we should also try to solve the general case where the NN does not update
access time of files if the NN is in safemode. Do you agree?It may update the access
times. It should not persist them though. 


New Comment: 
If access time is enabled, open should not be allowed in safemode. Safemode is really a
"readonly mode". 


New Comment: 
Here is the proposal:<ol>	<li>Add a method getUnflushedDataLen() to EditLogOutputStream
that returns the length of buffered edit logs that need to be flushed.</li>	<li>After each
edit log entry is written (FSEditLog#logEdit), check the length of the unflushed edit
logs. If it is bigger than or equal to the initial buffer size, which is 512K for now, all
edit log streams are automatically flushed and synced to disks.</li></ol>This proposal
does allow edit log buffer to grow beyond the initial buffer size, but the max buffer size
is really bounded the max length of an edit log entry. In most cases, I believe that the
buffer can grow up to 1M bytes. The advantage of not shrinking the edit log buffer is that
it won't cause frequent buffer allocations &amp; deallocations, so avoiding frequent GCs
if a large amount of open hits NameNode in a short time. 


New Comment: 
sounds like the best approach! 


New Comment: 
It turns out that the edit output stream for backup NN does not serialize edit logs when
an edit log entry is written. So there is no way to implement getUnflushedDataLen(). Here
is a minor change to the proposal. Instead, add a method boolean isTimeToSync() to
EditLogOutputStream. isTimeToSync() allows each edit stream to implement its own automatic
sync policy, either by size or by time. By default, no automatic sync is supported.
EditLogOutputStream returns true when the buffered data length is greater than the initial
size. 


New Comment: 
Here is a patch for review. It's tricky to get the synchronization right. In the patch, a
flag isAutoSyncScheduled is introduced to make sure that no one can write the edit log
buffer once it is determined that an automatic sync should be done and before double
buffer is swapped, 


New Comment: 
Some comments:<ul class="alternate" type="square">	<li>timeToSync() method name implies
that it's a time based condition, perhaps better to rename to something like
isBufferFull() since that's the policy currently implemented. Or more generically
shouldForceSync()</li>	<li>why the notifyAll calls inside logSync, since that's done
already inside doneWithAutoSyncScheduling?</li>	<li>the changes to add IOException thrown
seems messy - isn't our contract always that failing to append to the edit log is a fatal
error for the NN and thus a checked exception won't be thrown?</li>	<li>the patch doesn't
apply to trunk anymore</li></ul>Aside from that, think this looks good. I edited
TestFSEditLogRace to run for a couple minutes with 16 threads making edits simultaneously,
and no deadlocks or anything. 


New Comment: 
Thank Todd for reviewing and testing the patch. This patch addresses your comments except
for IOException. I agree that IOException change is messy. But unfortunately logSync
throws IOException so now logEdit has to throw IOException. 


New Comment: 
A couple of somments.<ol>	<li><tt>FSEditLog.isTimeToSync()</tt> should be
<tt>shouldForceSync()</tt> with reversed boolean return value, to make it consistent with
the EditLogOutputStream method.</li>	<li>Is it possible to reuse the flag
<tt>isSyncRunning</tt> instead of new <tt>isAutoSyncScheduled</tt>? The problem is that we
<tt>waitForSyncToFinish()</tt> in many operations, which makes sure that <tt>isSyncRunning
== false</tt>. We should probably do the same with <tt>isAutoSyncScheduled</tt> if there
is no way to use one flag for both conditions.</li>	<li>This is the main concern. If
<tt>logSync()</tt> fails, then <tt>isAutoSyncScheduled</tt> will remain set. Nobody will
be able to unset it, and everybody will be waiting for the sync to finish when nobody is
syncing.</li>	<li>I see you had to add throwing IOException in a bunch of methods. The
reason is that <tt>logSync()</tt> throws IOEception, and therefore now the
<tt>logEdit()</tt> should do it too. I think we should fix <tt>logSync()</tt>, because it
should not throw IOException. The only reason <tt>logSync()</tt> throws is
<tt>setReadyToFlush()</tt>. But call to <tt>setReadyToFlush()</tt> should be treated the
same way as the call to <tt>flush()</tt>, that is it should catch the exception and
<tt>processIOError()</tt>. I think current treatment of <tt>setReadyToFlush()</tt> is
incorrect.</li></ol> 


New Comment: 
Konstantin, I really like your comment 4. This patch makes sure that the errors occurred
during setReadyFlush are handled the same as the ones during the sync phase. So logSync
does not throw IOException. This eliminate many unnecessary IOException related changes
and also makes comment 3 no longer a concern. This patch also incorporates comment 1. But
comment 2 is not able to be addressed. 


New Comment: 
-1 overall.  Here are the results of testing the latest attachment <br/>  <a
href="http://issues.apache.org/jira/secure/attachment/12444964/editLogBuf2.patch"
class="external-link"
rel="nofollow">http://issues.apache.org/jira/secure/attachment/12444964/editLogBuf2.patch</a><br/>
 against trunk revision 944566.    +1 @author.  The patch does not contain any @author
tags.    +1 tests included.  The patch appears to include 6 new or modified tests.    +1
javadoc.  The javadoc tool did not generate any warning messages.    +1 javac.  The
applied patch does not increase the total number of javac compiler warnings.    +1
findbugs.  The patch does not introduce any new Findbugs warnings.    +1 release audit. 
The applied patch does not increase the total number of release audit warnings.    -1 core
tests.  The patch failed core unit tests.    -1 contrib tests.  The patch failed contrib
unit tests.Test results: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/369/testReport/"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/369/testReport/</a><br/>Findbugs
warnings: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/369/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/369/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/>Checkstyle
results: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/369/artifact/trunk/build/test/checkstyle-errors.html"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/369/artifact/trunk/build/test/checkstyle-errors.html</a><br/>Console
output: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/369/console"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/369/console</a>This
message is automatically generated. 


New Comment: 
Hairong, the patch looks good. Two more things<ol>	<li>You should not remove the large try
{} finally section. This prevents from other runtime exception blocking syncing by not
resetting isSyncRunning flag. This was discussed in <a
href="https://issues.apache.org/jira/browse/HDFS-119" title="logSync() may block NameNode
forever." class="issue-link"
data-issue-key="HDFS-119"><del>HDFS-119</del></a>.</li>	<li>With respect to my previous
comment 2. I understand it is impossible to join the two variables. But do we still need
to add the condition on <tt>isAutoSyncScheduled</tt> in
<tt>waitForSyncToFinish()</tt>?<div class="code panel" style="border-width: 1px;"><div
class="codeContent panelContent"><pre class="code-java">- <span
class="code-keyword">while</span> (isSyncRunning) {+ <span
class="code-keyword">while</span> (isSyncRunning &amp;&amp; isAutoSyncScheduled)
{</pre></div></div></li></ol> 


New Comment: 
This patch addresses Konstantin's comment 1. I do not think that we need comment 2. 


New Comment: 
Per discussion with Hairong, since logEdits() happens under FSNamesystem lock,
isAutoSyncScheduled should be set and reset by the same thread within one name-node
operation, therefore other threads do not need to wait on isAutoSyncScheduled  as they
will wait on FSNamesystem lock.+1 code looks good. 


New Comment: 
Resubmitting just in case. 


New Comment: 
-1 overall.  Here are the results of testing the latest attachment <br/>  <a
href="http://issues.apache.org/jira/secure/attachment/12445114/editLogBuf3.patch"
class="external-link"
rel="nofollow">http://issues.apache.org/jira/secure/attachment/12445114/editLogBuf3.patch</a><br/>
 against trunk revision 946488.    +1 @author.  The patch does not contain any @author
tags.    +1 tests included.  The patch appears to include 6 new or modified tests.    +1
javadoc.  The javadoc tool did not generate any warning messages.    +1 javac.  The
applied patch does not increase the total number of javac compiler warnings.    +1
findbugs.  The patch does not introduce any new Findbugs warnings.    +1 release audit. 
The applied patch does not increase the total number of release audit warnings.    +1 core
tests.  The patch passed core unit tests.    -1 contrib tests.  The patch failed contrib
unit tests.Test results: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/372/testReport/"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/372/testReport/</a><br/>Findbugs
warnings: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/372/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/372/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/>Checkstyle
results: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/372/artifact/trunk/build/test/checkstyle-errors.html"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/372/artifact/trunk/build/test/checkstyle-errors.html</a><br/>Console
output: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/372/console"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/372/console</a>This
message is automatically generated. 


New Comment: 
-1 overall.  Here are the results of testing the latest attachment <br/>  <a
href="http://issues.apache.org/jira/secure/attachment/12445114/editLogBuf3.patch"
class="external-link"
rel="nofollow">http://issues.apache.org/jira/secure/attachment/12445114/editLogBuf3.patch</a><br/>
 against trunk revision 946488.    +1 @author.  The patch does not contain any @author
tags.    +1 tests included.  The patch appears to include 6 new or modified tests.    +1
javadoc.  The javadoc tool did not generate any warning messages.    +1 javac.  The
applied patch does not increase the total number of javac compiler warnings.    +1
findbugs.  The patch does not introduce any new Findbugs warnings.    +1 release audit. 
The applied patch does not increase the total number of release audit warnings.    +1 core
tests.  The patch passed core unit tests.    -1 contrib tests.  The patch failed contrib
unit tests.Test results: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h2.grid.sp2.yahoo.net/179/testReport/"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h2.grid.sp2.yahoo.net/179/testReport/</a><br/>Findbugs
warnings: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h2.grid.sp2.yahoo.net/179/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h2.grid.sp2.yahoo.net/179/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/>Checkstyle
results: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h2.grid.sp2.yahoo.net/179/artifact/trunk/build/test/checkstyle-errors.html"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h2.grid.sp2.yahoo.net/179/artifact/trunk/build/test/checkstyle-errors.html</a><br/>Console
output: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h2.grid.sp2.yahoo.net/179/console"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h2.grid.sp2.yahoo.net/179/console</a>This
message is automatically generated. 


New Comment: 
The failed test was caused by a known bug: <a
href="https://issues.apache.org/jira/browse/HDFS-1164" title="TestHdfsProxy is failing"
class="issue-link" data-issue-key="HDFS-1164"><del>HDFS-1164</del></a>. 


New Comment: 
I've just committed this! 


New Comment: 
Integrated in Hadoop-Hdfs-trunk-Commit #278 (See <a
href="http://hudson.zones.apache.org/hudson/job/Hadoop-Hdfs-trunk-Commit/278/"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hadoop-Hdfs-trunk-Commit/278/</a>)<br/>
   <a href="https://issues.apache.org/jira/browse/HDFS-1112" title="Edit log buffer should
not grow unboundedly" class="issue-link"
data-issue-key="HDFS-1112"><del>HDFS-1112</del></a>. Edit log buffer should not grow
unboundedly. Contributed by Hairong Kuang. 


