Pattern changes caused by commit: 107d16741315792b48f1b9a0ec5920f1df95ae13

From: Decorator-1
To:   Decorator-0

From: Flyweight-4
To:   Flyweight-5


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-4757.txt 

commit 107d16741315792b48f1b9a0ec5920f1df95ae13
Author: T Jake Luciani <jake@apache.org>

    Optionally skip log4j configuration
    Patch by tjake; reviewed by Aaron Morton for CASSANDRA-3061



==================================
 Issue CASSANDRA-3061 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-3061] Optionally skip log4j configuration
-----------------

-----------------
Summary: Optionally skip log4j configuration
-----------------

-----------------
Issue type: Improvement
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Fri, 19 Aug 2011 04:16:15 +0000
-----------------

-----------------
Resolved at: Wed, 31 Aug 2011 18:30:09 +0000
-----------------

-----------------
Assigned to: T Jake Luciani
-----------------

-----------------
Description: 

from this thread <a
href="http://groups.google.com/group/brisk-users/browse_thread/thread/3a18f4679673bea8"
class="external-link"
rel="nofollow">http://groups.google.com/group/brisk-users/browse_thread/thread/3a18f4679673bea8</a>

When
brisk accesses cassandra classes inside of a Hadoop Task JVM the AbstractCassandraDaemon
uses a log4j PropertyConfigurator to setup cassandra logging. This closes all the existing
appenders, including the TaskLogAppender for the hadoop task. They are not opened again
because they are not in the config. 

log4j has Logger Repositories to handle multiple
configs in the same process, but there is a bit of suck involved in making a
RepositorySelector. 

Two examples...<br/><a
href="http://www.mail-archive.com/log4j-dev@jakarta.apache.org/msg02972.html"
class="external-link"
rel="nofollow">http://www.mail-archive.com/log4j-dev@jakarta.apache.org/msg02972.html</a><br/><a
href="http://docs.redhat.com/docs/en-US/JBoss_Enterprise_Application_Platform/4.2/html/Getting_Started_Guide/logging.log4j.reposelect.html"
class="external-link"
rel="nofollow">http://docs.redhat.com/docs/en-US/JBoss_Enterprise_Application_Platform/4.2/html/Getting_Started_Guide/logging.log4j.reposelect.html</a>

Basically
all the selector has access to thread local storage, and it looks like normally people get
the class loader from the current thread. A thread will inherit it's class loader from the
thread that created it, unless otherwise specified. 

We have code in the same thread the
uses hadoop and cassandra classes, so this could be a dead end.  

As a work around i've
added cassandra.log4j.configure JVM param and made the AbstractCassandraServer skip the
log4j config if it's false. My job completes and I can see the cassandra code logging an
extra message I put in into the Hadoop task log file...

2011-08-19 15:56:06,442 WARN
org.apache.hadoop.metrics2.impl.MetricsSystemImpl: Metrics system not started: Cannot
locate configuration: tried hadoop-metrics2-maptask.properties,
hadoop-metrics2.properties<br/>2011-08-19 15:56:06,776 INFO
org.apache.cassandra.service.AbstractCassandraDaemon: Logging initialized
externally<br/>2011-08-19 15:56:07,332 INFO org.apache.hadoop.mapred.MapTask:
numReduceTasks: 0

The param has to be passed to the task JVM, so need to modify Haddop
mapred-site.xml as follows 

&lt;property&gt;<br/> 
&lt;name&gt;mapred.child.java.opts&lt;/name&gt;<br/>  &lt;value&gt;-Xmx256m
-Dcassandra.log4j.configure=false&lt;/value&gt;<br/>  &lt;description&gt;<br/>    Tune
your mapred jvm arguments for best performance. <br/>    Also see documentation from jvm
vendor.<br/>  &lt;/description&gt;<br/>&lt;/property&gt;

It's not pretty but it works. In
my extra log4j logging I can see the second reset() call is gone.  

Change the to Hadoop
TaskLogAppender also stops the NPE but there may also be some lost log messages <br/><a
href="https://issues.apache.org/jira/browse/HADOOP-7556" class="external-link"
rel="nofollow">https://issues.apache.org/jira/browse/HADOOP-7556</a>
 

-----------------

-----------------
Comments: 

New Comment: 
Yeah this is a pain.I think it would be easier to check for log4j.defaultInitOverride=true
(we set it in bin/cassandra) before we apply our log4j setup.  That way in hadoop it would
not be loaded by default. 


New Comment: 
version that checks iflog4j.defaultInitOverride=true before executing our custom setup 


New Comment: 
Thanks, will try it out in the next few days. 


New Comment: 
Aaron any update here? this is working fine for me. 


New Comment: 
I tried to run it with the current cassandra-0.8 branch and brisk beta 2 but ran into this
problem <a
href="http://groups.google.com/group/brisk-users/browse_thread/thread/75c9f39d4c1859a9"
class="external-link"
rel="nofollow">http://groups.google.com/group/brisk-users/browse_thread/thread/75c9f39d4c1859a9</a>What
I can see looks good to me though. 


New Comment: 
For me the log4j problem is solved with this patchI ran into the same problem as Aaron did
(which is fixed in <a href="https://issues.apache.org/jira/browse/CASSANDRA-3044"
title="Hector NodeAutoDiscoverService fails to resolve hosts due to / being part of the IP
address" class="issue-link"
data-issue-key="CASSANDRA-3044"><del>CASSANDRA-3044</del></a>), but worked around it by
attaching a debugger and manually changing the endpoint to be correct. In Brisk there is
another issue, because rpc_address is set to "0.0.0.0" which is not a valid endpoint to
connect to. Also posted that here: <a
href="http://www.datastax.com/support-forums/topic/building-brisk-from-source-to-update-cassandra-to-082?replies=1#post-409"
class="external-link"
rel="nofollow">http://www.datastax.com/support-forums/topic/building-brisk-from-source-to-update-cassandra-to-082?replies=1#post-409</a> 


New Comment: 
committed 


