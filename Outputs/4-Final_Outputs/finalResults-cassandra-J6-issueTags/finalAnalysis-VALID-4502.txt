Pattern changes caused by commit: 8efd3688645abcc24422713350022f32a0c664f4

From: Mediator-2
To:   Mediator-1


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-4502.txt 

commit 8efd3688645abcc24422713350022f32a0c664f4
Author: Jonathan Ellis <jbellis@apache.org>

    log Java classpath on startup
    patch by Jackson Chung; reviewed by jbellis for CASSANDRA-2895



==================================
 Issue CASSANDRA-2895 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-2895] add java classpath to cassandra startup logging
-----------------

-----------------
Summary: add java classpath to cassandra startup logging
-----------------

-----------------
Issue type: Improvement
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Wed, 13 Jul 2011 00:24:42 +0000
-----------------

-----------------
Resolved at: Tue, 26 Jul 2011 18:44:45 +0000
-----------------

-----------------
Assigned to: Jackson Chung
-----------------

-----------------
Description: 

this is helpful to determine/verify if the Cassandra is started with the expected
classpath

it's a simple 1-liner addon that are useful... will submit a patch later.
 

-----------------

-----------------
Comments: 

New Comment: 
svn diff ./src/java/org/apache/cassandra/service/AbstractCassandraDaemon.java <br/>Index:
src/java/org/apache/cassandra/service/AbstractCassandraDaemon.java<br/>===================================================================<br/>&#8212;
src/java/org/apache/cassandra/service/AbstractCassandraDaemon.java  (revision
1147350)<br/>+++ src/java/org/apache/cassandra/service/AbstractCassandraDaemon.java 
(working copy)<br/>@@ -101,6 +101,7 @@<br/>     {<br/>        logger.info("JVM
vendor/version: {}/{}", System.getProperty("java.vm.name"),
System.getProperty("java.version") );<br/>         logger.info("Heap size: {}/{}",
Runtime.getRuntime().totalMemory(), Runtime.getRuntime().maxMemory());<br/>+              
logger.info("Classpath: {}", System.getProperty("java.class.path"));<br/>       
CLibrary.tryMlockall();         listenPort = DatabaseDescriptor.getRpcPort();<div
class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent
panelContent"><pre> INFO [main] 2011-07-15 18:02:04,110 AbstractCassandraDaemon.java (line
104) Classpath:
/home/jackson/work/cassandra-trunk/conf:/home/jackson/work/cassandra-trunk/build/classes/main:/home/jackson/work/cassandra-trunk/build/classes/thrift:/home/jackson/work/cassandra-trunk/lib/antlr-3.2.jar:/home/jackson/work/cassandra-trunk/lib/apache-cassandra-0.8.0-SNAPSHOT.jar:/home/jackson/work/cassandra-trunk/lib/apache-cassandra-cql-1.0.3.jar:/home/jackson/work/cassandra-trunk/lib/apache-cassandra-thrift-0.8.0-SNAPSHOT.jar:/home/jackson/work/cassandra-trunk/lib/avro-1.4.0-fixes.jar:/home/jackson/work/cassandra-trunk/lib/avro-1.4.0-sources-fixes.jar:/home/jackson/work/cassandra-trunk/lib/commons-cli-1.1.jar:/home/jackson/work/cassandra-trunk/lib/commons-codec-1.2.jar:/home/jackson/work/cassandra-trunk/lib/commons-lang-2.4.jar:/home/jackson/work/cassandra-trunk/lib/concurrentlinkedhashmap-lru-1.2.jar:/home/jackson/work/cassandra-trunk/lib/guava-r08.jar:/home/jackson/work/cassandra-trunk/lib/high-scale-lib-1.1.2.jar:/home/jackson/work/cassandra-trunk/lib/jackson-core-asl-1.4.0.jar:/home/jackson/work/cassandra-trunk/lib/jackson-mapper-asl-1.4.0.jar:/home/jackson/work/cassandra-trunk/lib/jamm-0.2.2.jar:/home/jackson/work/cassandra-trunk/lib/jline-0.9.94.jar:/home/jackson/work/cassandra-trunk/lib/jna.jar:/home/jackson/work/cassandra-trunk/lib/json-simple-1.1.jar:/home/jackson/work/cassandra-trunk/lib/libthrift-0.6.jar:/home/jackson/work/cassandra-trunk/lib/log4j-1.2.16.jar:/home/jackson/work/cassandra-trunk/lib/maven-ant-tasks-2.1.3.jar:/home/jackson/work/cassandra-trunk/lib/servlet-api-2.5-20081211.jar:/home/jackson/work/cassandra-trunk/lib/slf4j-api-1.6.1.jar:/home/jackson/work/cassandra-trunk/lib/slf4j-log4j12-1.6.1.jar:/home/jackson/work/cassandra-trunk/lib/snakeyaml-1.6.jar:/home/jackson/work/cassandra-trunk/lib/jamm-0.2.2.jar</pre></div></div> 


New Comment: 
trunk 


New Comment: 
INFO means "this is important for someone to understand what Cassandra is doing."  I don't
think this meets that threshold.  Can you make the case for why this shouldn't be DEBUG? 


New Comment: 
sure. First off, I will start by saying it is absolutely possible to still obtain the
classpath from other techniques, such as jconsole, jinfo, ps, /proc/&lt;pid&gt;/cmdline,
etc. All these are doable providing using it properly. Some common typical challenges on
these "other techniques": PATH is difference for the user who starts cassandra vs user who
ssh into the machine and check, resulting in cannot attach the jvm due to jvm mismatched.
Cannot attach remotely due to permission. ps result truncated. /proc/&lt;pid&gt;cmdline
result is ugly (no separator).We need to know the classpath info to identify which jars
contains the classes. Granted knowing "just" the classpath is not enough as one would
still need to verify that actual path/jar exists (and with proper permission). Down the
road when hotfixes accumulated (and for the sake of arguments in a scenario where the
hotfix only contains fixed classes, but not the whole build), we would need to identify if
a hotfix (jar) is properly set in the classpath to validate the java process is running
with the hotfix.a real (small) example: <br/> INFO <span
class="error">&#91;main&#93;</span> 2011-07-22 11:34:10,113 CLibrary.java (line 61) JNA
not found. Native methods will be disabled.well from a end-user perspective, not found
"where"? Of course a java-experienced user would most likely intuitively think of class
path. But for others it may not be obvious. Further support analysts will need to do
his/her own analysis to determine if the jna.jar is on the classpath and in the
said-location. (ie jna.jar is in /path/to/ but classpath said /path/to/others/). This
could be further challenged if it needs to be done remotely or the analyst has no direct
access to the machine. Hence the classpath info is one of the more important info for
someone who understand not just Cassandra, but java in general of what it is doing.As to
oppose using DEBUG: currently the logging does not have a "header" sets. Ie the log is
logged once and wouldn't appear again. Logging at DEBUG for some that only logged once at
startup means one would have to restart the jvm to see the log. That seems overkill for
just simply get a log. One may as well learn/try to use jinfo/jconsole/ps/cmdline to get
that info. I agree we wouldn't want every bit of details (that say available via jinfo) to
be logged, that would noise the log quite a bit. On the other hand, the classpath itselfs
provides a quick and strong validation to properly identify any misconfiguration on
classpath settings. 


New Comment: 
This will only be logged once at startup. Why not just put:<tt>echo "CLASSPATH      = "
$CLASSPATH</tt>after the definition of <tt>CLASSPATH</tt> in the
"<tt>cassandra.in.sh</tt>" file in the <tt>/bin</tt> directory? 


New Comment: 
Jackson: Okay, I'll buy that.  Committed to 0.7.8, 0.8.3, and 1.0.Rick: that relies on
stdout being captured, which isn't always the case.  (And even when it is, I'd prefer to
avoid having to explain why that's in a separate file than system.log...) 


