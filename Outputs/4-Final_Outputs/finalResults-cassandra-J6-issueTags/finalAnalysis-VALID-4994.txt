Pattern changes caused by commit: 6a8b904dd8868adb4daeb48e6f82e845f6fa192d

From: Decorator-0
To:   Decorator-1

From: Flyweight-5
To:   Flyweight-4

From: Strategy-0
To:   Strategy-1


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-4994.txt 

commit 6a8b904dd8868adb4daeb48e6f82e845f6fa192d
Author: Sylvain Lebresne <slebresne@apache.org>

    Fix streamOutSession keeping sstables references forever if the remote end dies
    patch by slebresne; reviewed by jbellis for CASSANDRA-3216



==================================
 Issue CASSANDRA-3216 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-3216] A streamOutSession keeps sstables references forever if the remote end dies
-----------------

-----------------
Summary: A streamOutSession keeps sstables references forever if the remote end dies
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Fri, 16 Sep 2011 13:36:46 +0000
-----------------

-----------------
Resolved at: Mon, 19 Sep 2011 15:32:20 +0000
-----------------

-----------------
Assigned to: Sylvain Lebresne
-----------------

-----------------
Description: 

A streamOutSession acquire a reference on the sstable it will stream and release them as
soon as each sstable has been fully streamed. However, since a stream session has
currently no means to know when it failed, we'll keep references indefinitely (meaning
until next restart) if their is a failure. One way a stream session could very easily fail
is if the remote end dies. We must make sure we correctly release sstable references when
that happens.

Note that it won't be bulletproof, there is probably other means by which a
streaming could fail: a bug in the code throwing an exception, no space left on the
receiving end, etc... But those are unlikely enough that I propose to care only for the
case of a node dying for now and leave the bullet-proofing to <a
href="https://issues.apache.org/jira/browse/CASSANDRA-3112" title="Make repair fail when
an unexpected error occurs" class="issue-link"
data-issue-key="CASSANDRA-3112"><del>CASSANDRA-3112</del></a>. 
 

-----------------

-----------------
Comments: 

New Comment: 
Couldn't this cause false positives if a GC pause marks a node as "down" but really the
stream would finish normally afterwards? 


New Comment: 
It would, it's the same problem than with <a
href="https://issues.apache.org/jira/browse/CASSANDRA-2433" title="Failed Streams Break
Repair" class="issue-link" data-issue-key="CASSANDRA-2433"><del>CASSANDRA-2433</del></a>.
But the patch the technique we've use there to wait to reach twice the normal phi convict
threshold to hopefully make sure this won't happen. But we can increase the threshold even
higher if we think that doubling doesn't put us enough on the safe side. 


New Comment: 
+1 


