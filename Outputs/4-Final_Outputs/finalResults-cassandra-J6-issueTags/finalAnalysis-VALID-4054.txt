Pattern changes caused by commit: 50b490e046bdc23b23fbb268400abcc41a0de72c

From: Abstract Factory-3
To:   Abstract Factory-2

From: Factory Method-3
To:   Factory Method-2

From: Mediator-2
To:   Mediator-1


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-4054.txt 

commit 50b490e046bdc23b23fbb268400abcc41a0de72c
Author: Jonathan Ellis <jbellis@apache.org>

    add quote-escaping via backslash to CLI
    patch by pyaskevich; reviewed by jbellis for CASSANDRA-2623



==================================
 Issue CASSANDRA-2623 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-2623] CLI escaped single quote parsing gives errors
-----------------

-----------------
Summary: CLI escaped single quote parsing gives errors
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Sat, 7 May 2011 21:21:52 +0000
-----------------

-----------------
Resolved at: Thu, 12 May 2011 15:31:23 +0000
-----------------

-----------------
Assigned to: Pavel Yaskevich
-----------------

-----------------
Description: 

Escaping quotes in cli commands causes parsing errors.

some examples::::<br/>No need to
create columns etc, it doesn't get through parsing the expression::

cassandra-cli

1.
<br/>set column<span class="error">&#91;&#39;KEY+vals&#39;&#93;</span><span
class="error">&#91;VALUE&#93;</span> = 'VAL\'' ;<br/>Syntax error at position 41:
mismatched character '&lt;EOF&gt;' expecting '''

2.<br/>set column<span
class="error">&#91;&#39;KEY+val\&#39;s&#39;&#93;</span><span
class="error">&#91;VALUE&#93;</span> = 'VAL' ;<br/>Syntax error at position 41: mismatched
character '&lt;EOF&gt;' expecting '''

3.<br/>set column<span
class="error">&#91;&#39;KEY+vals\&#39;&#39;&#93;</span><span
class="error">&#91;VALUE&#93;</span> = 'VAL\'' ;<br/>Syntax error at position 38:
unexpected "\" for `set column<span
class="error">&#91;&#39;KEY+vals\&#39;&#39;&#93;</span><span
class="error">&#91;VALUE&#93;</span> = 'VAL\'' ;`.
 

-----------------

-----------------
Comments: 

New Comment: 
In the Cli.g file the string literal does not allow for escaped single quote.<a
href="http://svn.apache.org/repos/asf/cassandra/trunk/src/java/org/apache/cassandra/cli/Cli.g"
class="external-link"
rel="nofollow">http://svn.apache.org/repos/asf/cassandra/trunk/src/java/org/apache/cassandra/cli/Cli.g</a>StringLiteral<br/>
   :<br/>    '\'' (<sub>'\'')* '\'' ( '\'' (</sub>'\'')* '\'' )*<br/>    ;I'm not sure yet
what is the purpose of the repeating last half of the expression.<br/>First Attempt to
allow escaped characters seemed to cause other problems, still investigating that. 


New Comment: 
single quotes are escaped by doubling them, as in SQL:<div class="preformatted panel"
style="border-width: 1px;"><div class="preformattedContent panelContent"><pre>'aren''t you
glad you can escape quotes this way'</pre></div></div> 


New Comment: 
Unforuntately using 2 single quotes causes insertions of both quotes in to the data
set,create keyspace KEYS with<br/>   placement_strategy =
'org.apache.cassandra.locator.SimpleStrategy' and<br/>   replication_factor = 1;<br/>use
KEYS;create column family CF with<br/>  comparator=UTF8Type and<br/>  rows_cached=1.0
and<br/>  memtable_throughput=128 and<br/>  min_compaction_threshold=10 and<br/> 
column_metadata =<br/>  [<br/>    {column_name:VERSION, validation_class:LongType},   
{column_name:VALUE, validation_class:UTF8Type}  ];  set CF<span
class="error">&#91;&#39;key&#39;&#39;1&#39;&#93;</span><span
class="error">&#91;VERSION&#93;</span> = 'aren''t happy' ; <br/>  set CF<span
class="error">&#91;&#39;key&#39;&#39;1&#39;&#93;</span><span
class="error">&#91;VALUE&#93;</span> = 'aren''t happy' ;   list CFRowKey: key''1<br/>=&gt;
(column=VALUE, value=aren''t happy, timestamp=1304952103638000)<br/>=&gt; (column=VERSION,
value=1, timestamp=1304952057641000)Through a thrift java client insert we are able to
insert and find single quote keys,<br/>But if data is inserted via CLI,  the java thrift
single quote lookups do not match. 


New Comment: 
You're right. That's a bug. 


New Comment: 
Possibly the unescapeSQLString in CliUtils.java<br/>can do something to get rid of the
single quotes.<br/>The unit test doesn't cover escaping via 2 single quotes.    public
static String unescapeSQLString(String b)    {        if (b.charAt(0) == '\'' &amp;&amp;
b.charAt(b.length()-1) == '\'')            b = b.substring(1, b.length()-1);        return
StringEscapeUtils.unescapeJava(b);    }also method escapeSQLString which <br/>(only used
in the unit test but public ) <br/>is assuming a backslash to escape single quotes.   
public static String escapeSQLString(String b)    {        // single quotes are not
escaped in java, need to be for cli        return
StringEscapeUtils.escapeJava(b).replace("\'", "\\'");    }The StringLiteral Definition
makes sense for using 2 single quotes escaping since it should always have an even number
of quotes so just the backing code needs to be enlightened. 


New Comment: 
Just replacing the 2 quotes with one seems to work for the simple case in 7.5.<div
class="code panel" style="border-style: solid;border-width: 1px;"><div class="codeHeader
panelHeader" style="border-bottom-width: 1px;border-bottom-style:
solid;"><b>CliUtils.java</b></div><div class="codeContent panelContent"><pre
class="code-java">    <span class="code-keyword">public</span> <span
class="code-keyword">static</span> <span class="code-object">String</span>
unescapeSQLString(<span class="code-object">String</span> b)     {         <span
class="code-keyword">if</span> (b.charAt(0) == <span class="code-quote">'\'</span><span
class="code-quote">' &amp;&amp; b.charAt(b.length()-1) == '</span>\'')             b =
b.substring(1, b.length()-1);         b = b.replaceAll(<span class="code-quote">"<span
class="code-quote">''"</span>,<span class="code-quote">"'</span>"</span>);         <span
class="code-keyword">return</span> StringEscapeUtils.unescapeJava(b);     }
</pre></div></div> 


New Comment: 
fix for CLI grammar to support escaped quotes + tests. 


New Comment: 
you really like the backslash approach better than the SQL quote-doubling one? 


New Comment: 
Yes, I personally don't like SQL way of dealing with string interpolation. 


New Comment: 
committed 


