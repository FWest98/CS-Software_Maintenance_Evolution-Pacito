Pattern changes caused by commit: 5b151f3b3607494f67f502bae1d59e86ab7ceae8

From: Decorator-2
To:   Decorator-1

From: Flyweight-2
To:   Flyweight-1

From: Mediator-3
To:   Mediator-1

From: Strategy-0
To:   Strategy-1


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-7615.txt 

commit 5b151f3b3607494f67f502bae1d59e86ab7ceae8
Author: Jonathan Ellis <jbellis@apache.org>

    add cqlVersion to things ClientState.reset cleans up
    patch by jbellis; reviewed by dbrosius for CASSANDRA-4657



==================================
 Issue CASSANDRA-4657 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-4657] cql version race condition with rpc_server_type: sync
-----------------

-----------------
Summary: cql version race condition with rpc_server_type: sync
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Wed, 12 Sep 2012 15:10:15 +0000
-----------------

-----------------
Resolved at: Mon, 8 Oct 2012 16:05:40 +0000
-----------------

-----------------
Assigned to: Jonathan Ellis
-----------------

-----------------
Description: 

If clients connect to a cassandra cluster configured with rpc_server_type: sync with
heterogeneous cql versions (2 and 3), the cql version used for execution on the server
changes seemingly randomly.<br/>It's due to the fact that CustomTThreadPoolServer.java
does not set the remoteSocket anytime, or does not clear the cql version in the
ThreadLocal clientState object.<br/>When CassandraServer.java calls state() it gets the
ThreadLocal object clientState, which has its cqlversion already changed by a previous
socket that was using the same thread.

The easiest fix is probably to do a
SocketSessionManagementService.instance.set when accepting a new client and
SocketSessionManagementService.instance.remove when the client is closed, but if you
really want to use the ThreadLocal clientState and not alloc/destroy a ClientState
everytime, then you should clear this clientState on accept of a new client.

The problem
can be reproduced with cqlsh -3 on one side and a client that does not set the cql
version, expecting to get version 2 by default, but actually gettingv v2/v3 depending on
which thread it connects to.

The problem does not happen with other rpc_server_types, nor
with clients that set their cql version at connection.
 

-----------------

-----------------
Comments: 

New Comment: 
Patch with set and remove 


New Comment: 
Thanks Emmanuel!Your patch will work, but I'd like to do a deeper cleanup.I've pushed this
to <a href="https://github.com/jbellis/cassandra/branches/4657" class="external-link"
rel="nofollow">https://github.com/jbellis/cassandra/branches/4657</a>.In order these
commits<ol>	<li>fix cql version reset under the existing regime of
CassandraServer.clientState threadlocal</li>	<li>centralizes all session management into
ThriftSessionManager</li>	<li>removes the threadlocal approach in favor of standardizing
on the socket-based approach everywhere</li></ol> 


New Comment: 
+1 patch lgtm. 


