Pattern changes caused by commit: 6ad7d45ad56482707ecd541984894e4e2a278cfb

From: Decorator-2
To:   Decorator-1

From: Flyweight-2
To:   Flyweight-1

From: Mediator-3
To:   Mediator-1

From: Strategy-0
To:   Strategy-1


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-7474.txt 

commit 6ad7d45ad56482707ecd541984894e4e2a278cfb
Author: Jonathan Ellis <jbellis@apache.org>

    Automatic fixing of overlapping leveled sstables
    patch by jbellis; reviewed by slebresne for CASSANDRA-4644



==================================
 Issue CASSANDRA-4644 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-4644] Compaction error with Cassandra 1.1.4 and LCS
-----------------

-----------------
Summary: Compaction error with Cassandra 1.1.4 and LCS
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Tue, 11 Sep 2012 14:48:00 +0000
-----------------

-----------------
Resolved at: Mon, 17 Sep 2012 17:38:25 +0000
-----------------

-----------------
Assigned to: Jonathan Ellis
-----------------

-----------------
Description: 

In our 1.1.4 testcluster of 3 nodes with RF=3, KS=1, and CF=5, we are getting an
asserting error when running 'nodetool compact highscores leaderboard'. This stops
compactions on the 'leaderboard' CF summing up to 11835 pending compactions. This error is
seen only one one node. 

The SSTables have originally been created on a 1.1.2 cluster
with STCS and then copied to the testcluster also with 1.1.2. Repair, cleanup, compact
were OK with STCS. Next, we changed to LCS and did again repair, cleanup, compact with
success. 

Then we started to use this LCS-based testcluster intensively and created lots
of data and also large keys with millions of columns. 

The assertion error in system.log
:<br/> INFO <span class="error">&#91;CompactionExecutor:8&#93;</span> 2012-09-11
14:20:45,043 CompactionController.java (line 172) Compacting large row
highscores/leaderboard:4c422d64626331353166372d363464612d343235342d396130322d6535616365343337373532332d676c6f62616c2d30
(72589650 bytes) incrementally<br/>ERROR <span
class="error">&#91;CompactionExecutor:8&#93;</span> 2012-09-11 14:20:50,336
AbstractCassandraDaemon.java (line 135) Exception in thread Thread<span
class="error">&#91;CompactionExecutor:8,1,RMI
Runtime&#93;</span><br/>java.lang.AssertionError<br/>        at
org.apache.cassandra.db.compaction.LeveledManifest.promote(LeveledManifest.java:214)<br/> 
      at
org.apache.cassandra.db.compaction.LeveledCompactionStrategy.handleNotification(LeveledCompactionStrategy.java:158)<br/>
       at
org.apache.cassandra.db.DataTracker.notifySSTablesChanged(DataTracker.java:531)<br/>      
 at
org.apache.cassandra.db.DataTracker.replaceCompactedSSTables(DataTracker.java:254)<br/>   
    at
org.apache.cassandra.db.ColumnFamilyStore.replaceCompactedSSTables(ColumnFamilyStore.java:992)<br/>
       at
org.apache.cassandra.db.compaction.CompactionTask.execute(CompactionTask.java:200)<br/>   
    at
org.apache.cassandra.db.compaction.LeveledCompactionTask.execute(LeveledCompactionTask.java:50)<br/>
       at
org.apache.cassandra.db.compaction.CompactionManager$6.runMayThrow(CompactionManager.java:288)<br/>
       at org.apache.cassandra.utils.WrappedRunnable.run(WrappedRunnable.java:30)<br/>    
   at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)<br/>       
at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)<br/>        at
java.util.concurrent.FutureTask.run(FutureTask.java:138)<br/>        at
java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)<br/>  
     at
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)<br/>      
 at java.lang.Thread.run(Thread.java:662)
 

-----------------

-----------------
Comments: 

New Comment: 
<blockquote>The SSTables have originally been created on a 1.1.2 cluster with STCS and
then copied to the testcluster also with 1.1.2. Repair, cleanup, compact were OK with
STCS. <em>Next, we changed to LCS</em> and did again repair, cleanup, compact with
success.</blockquote>Just to double-check, as you mentioned in the mailing list, you
upgraded to 1.1.4 before changing to LCS, right? 


New Comment: 
Sorry, I forgot to mention the 1.1.4 upgrade step. It should read: <br/>(1) The SSTables
have originally been created on a 1.1.2 cluster with STCS and then copied to the
testcluster also with 1.1.2. Repair, cleanup, compact were OK with STCS. <br/>(2) Upgrade
to 1.1.4<br/>(3) We changed to LCS and did again repair, cleanup, compact, also with
success. 


New Comment: 
Maybe, the following debug lines help to find the cause:<br/>DEBUG 20:59:47,207 Deleted
/mnt/cassandra/data/highscores/leaderboard/highscores-leaderboard-he-18148<br/>DEBUG
20:59:47,207 L0 contains 4422 SSTables (62004030662 bytes) in Manifest@451835319<br/>DEBUG
20:59:47,207 L1 contains 14 SSTables (258039196 bytes) in Manifest@451835319<br/>DEBUG
20:59:47,208 L2 contains 33 SSTables (508660830 bytes) in Manifest@451835319<br/>DEBUG
20:59:47,208 L3 contains 360 SSTables (3536343071 bytes) in Manifest@451835319<br/>DEBUG
20:59:47,209 L4 contains 1813 SSTables (32410447712 bytes) in Manifest@451835319<br/>DEBUG
20:59:47,209 Replacing <span class="error">&#91;leaderboard-18148(L1),
&#93;</span><br/>DEBUG 20:59:47,209 Adding <span
class="error">&#91;leaderboard-21505(L-1), &#93;</span> at L2<br/>ERROR 20:59:47,209
Exception in thread Thread<span class="error">&#91;CompactionExecutor:5,1,RMI
Runtime&#93;</span><br/>java.lang.AssertionError 


New Comment: 
You need to run the <b>offline</b> scrub (<tt>bin/sstablescrub</tt>) to fix the sstable
overlapping problem from early 1.1 releases.  (Running with -m to just check for overlaps
between sstables should be fine, since you already scrubbed online which will catch
out-of-order within an sstable.) 


New Comment: 
Attachment adds sendBackToL0 code to promote, to fix this transparently instead of
requiring offline scrub.Not really a huge win since you still need scrub (off-or-online)
to catch out-of-order rows within an sstable, but may help with some of the confusion
around this. 


New Comment: 
@Jonathan: compaction strategy was changed to LCS after upgrading to 1.1.4 so it looks
like even with <a href="https://issues.apache.org/jira/browse/CASSANDRA-4321"
title="stackoverflow building interval tree &amp; possible sstable corruptions"
class="issue-link" data-issue-key="CASSANDRA-4321"><del>CASSANDRA-4321</del></a>/<a
href="https://issues.apache.org/jira/browse/CASSANDRA-4411" title="Assertion with LCS
compaction" class="issue-link"
data-issue-key="CASSANDRA-4411"><del>CASSANDRA-4411</del></a> fixes, sstables are wrongly
leveled. The patch will temporarily work around the problem though.<blockquote>since you
already scrubbed online which will catch out-of-order within an sstable</blockquote>Online
scrub can't fix out-of-order sstables since they won't be loaded in the first place,
unless it has somehow has escaped from IntervalTree's assumption that sstables are sorted.
<span class="error">&#91;1&#93;</span><span class="error">&#91;1&#93;</span> <a
href="https://issues.apache.org/jira/browse/CASSANDRA-4321?focusedCommentId=13295704&amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13295704"
class="external-link"
rel="nofollow">https://issues.apache.org/jira/browse/CASSANDRA-4321?focusedCommentId=13295704&amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13295704</a> 


New Comment: 
<blockquote>Online scrub can't fix out-of-order sstables </blockquote>No, but it fixes
rows that are out of order <b>within</b> a given sstable.<blockquote>compaction strategy
was changed to LCS after upgrading to 1.1.4 so it looks like even with <a
href="https://issues.apache.org/jira/browse/CASSANDRA-4321" title="stackoverflow building
interval tree &amp; possible sstable corruptions" class="issue-link"
data-issue-key="CASSANDRA-4321"><del>CASSANDRA-4321</del></a>/<a
href="https://issues.apache.org/jira/browse/CASSANDRA-4411" title="Assertion with LCS
compaction" class="issue-link"
data-issue-key="CASSANDRA-4411"><del>CASSANDRA-4411</del></a> fixes, sstables are wrongly
leveled</blockquote>I see. 


New Comment: 
Following the hint of Johathan I did the following:(1) nodetool scrub  (online)  ==&gt;
(3h:36m) OK<br/>(2) sstablescrub -m (offline) ==&gt; (5m)  For 5 SSTables there is a
message like:<br/>    Sending SSTableReader(path='XXX-Data.db') back to L0 to fix
intra-level overlapping<br/>(3) nodetool compact  ==&gt; (10h:15m) OKResult: All 11737
SSTables have been successfully compacted to 4357 files.<br/>(I did NOT install the
patch).It looks like everything is fine now. Thanks for your help! 


New Comment: 
Regarding Jonathan's patch: that's a good idea though the condition in the patch is
reversed. It should be:<div class="preformatted panel" style="border-width: 1px;"><div
class="preformattedContent panelContent"><pre>if (previous != null &amp;&amp;
current.first.compareTo(previous.last) &lt;= 0)</pre></div></div>(i.e. we send back if the
new start is smaller than that the previous end).Other than that, lgtm. 


