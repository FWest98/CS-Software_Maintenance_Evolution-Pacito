Pattern changes caused by commit: edfc06fdd0794831cf7d1401fa98ff38bb4e4210

From: Decorator-2
To:   Decorator-1

From: Facade-1
To:   Facade-0

From: Flyweight-2
To:   Flyweight-4

From: Mediator-3
To:   Mediator-2

From: Strategy-0
To:   Strategy-1

From: Template Method-3
To:   Template Method-2


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-6912.txt 

commit edfc06fdd0794831cf7d1401fa98ff38bb4e4210
Author: Dave Brosius <dbrosius@apache.org>

    Oversize integer in CQL throws NumberFormatException
    patch by dbrosius reviewed by pyaskevich for CASSANDRA-4291



==================================
 Issue CASSANDRA-4291 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-4291] Oversize integer in CQL throws NumberFormatException
-----------------

-----------------
Summary: Oversize integer in CQL throws NumberFormatException
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Sun, 27 May 2012 06:08:04 +0000
-----------------

-----------------
Resolved at: Thu, 31 May 2012 00:40:03 +0000
-----------------

-----------------
Assigned to: David Brosius
-----------------

-----------------
Description: 

In CQL, the parser does not handle an oversize Integer, the client socket get closed and
an exception is output in the log.
<div class="preformatted panel" style="border-width:
1px;"><div class="preformattedContent panelContent"><pre>cqlsh:TEST1&gt; select count(*)
from Items limit 10000000000000;TSocket read 0 bytescqlsh:TEST1&gt; select count(*) from
Items limit 1;TSocket read 0 bytes</pre></div></div><div class="preformatted panel"
style="border-width: 1px;"><div class="preformattedContent panelContent"><pre>ERROR
02:51:28,600 Error occurred during processing of message.java.lang.NumberFormatException:
For input string: "10000000000"	at
java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)	at
java.lang.Integer.parseInt(Integer.java:461)	at
java.lang.Integer.parseInt(Integer.java:499)	at
org.apache.cassandra.cql.CqlParser.selectStatement(CqlParser.java:631)	at
org.apache.cassandra.cql.CqlParser.query(CqlParser.java:221)	at
org.apache.cassandra.cql.QueryProcessor.getStatement(QueryProcessor.java:951)	at
org.apache.cassandra.cql.QueryProcessor.process(QueryProcessor.java:873)	at
org.apache.cassandra.thrift.CassandraServer.execute_cql_query(CassandraServer.java:1234)	at
org.apache.cassandra.thrift.Cassandra$Processor$execute_cql_query.getResult(Cassandra.java:3542)	at
org.apache.cassandra.thrift.Cassandra$Processor$execute_cql_query.getResult(Cassandra.java:3530)	at
org.apache.thrift.ProcessFunction.process(ProcessFunction.java:32)	at
org.apache.thrift.TBaseProcessor.process(TBaseProcessor.java:34)	at
org.apache.cassandra.thrift.CustomTThreadPoolServer$WorkerProcess.run(CustomTThreadPoolServer.java:184)	at
java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)	at
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)	at
java.lang.Thread.run(Thread.java:662)</pre></div></div>
The INTEGER type in Cql.g matches
digits but not to any particular limit.
 

-----------------

-----------------
Comments: 

New Comment: 
catch misc runtime exceptions from cql.getStatement and return InvalidRequestExceptions
with 'useful messages' for these so that the connection from cql to the server doesn't get
into a bad state.against trunk 


New Comment: 
This one is related to 1.0 CQL(2) and also CQL3 in 1.1. +1, so just add a patch for cql3
and you are good to go commit it to 1.0 and 1.1 


