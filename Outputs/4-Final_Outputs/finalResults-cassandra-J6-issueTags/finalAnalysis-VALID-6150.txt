Pattern changes caused by commit: 1ed6065b5b9d87ef6223683e1d45bebbf0463283

From: Abstract Factory-3
To:   Abstract Factory-2

From: Factory Method-3
To:   Factory Method-2

From: Facade-1
To:   Facade-0

From: Flyweight-3
To:   Flyweight-4


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-6150.txt 

commit 1ed6065b5b9d87ef6223683e1d45bebbf0463283
Author: Brandon Williams <brandonwilliams@apache.org>

    Pig: correctly compose the key from the marshaller
    Patch by brandonwilliams, reviewed by xedin for CASSANDRA-3962



==================================
 Issue CASSANDRA-3962 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-3962] CassandraStorage can't cast fields from a CF correctly
-----------------

-----------------
Summary: CassandraStorage can't cast fields from a CF correctly
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Sun, 26 Feb 2012 20:51:08 +0000
-----------------

-----------------
Resolved at: Mon, 27 Feb 2012 17:04:36 +0000
-----------------

-----------------
Assigned to: Brandon Williams
-----------------

-----------------
Description: 

Included scripts demonstrate the problem.  Regardless of whether the key is cast as a
chararray or not, the Pig scripts fail with 
<div class="code panel" style="border-width:
1px;"><div class="codeContent panelContent"><pre
class="code-java">java.lang.ClassCastException: org.apache.pig.data.DataByteArray cannot
be <span class="code-keyword">cast</span> to java.lang.<span
class="code-object">String</span>	at
org.apache.pig.backend.hadoop.HDataType.getWritableComparableTypes(HDataType.java:72)	at
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapReduce$Map.collect(PigGenericMapReduce.java:117)	at
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapBase.runPipeline(PigGenericMapBase.java:269)	at
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapBase.map(PigGenericMapBase.java:262)	at
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapBase.map(PigGenericMapBase.java:64)	at
org.apache.hadoop.mapreduce.Mapper.run(Mapper.java:144)	at
org.apache.hadoop.mapred.MapTask.runNewMapper(MapTask.java:764)	at
org.apache.hadoop.mapred.MapTask.run(MapTask.java:370)	at
org.apache.hadoop.mapred.LocalJobRunner$Job.run(LocalJobRunner.java:212)</pre></div></div> 

-----------------

-----------------
Comments: 

New Comment: 
Generate the test CFs. 


New Comment: 
The test pig script for both cases, you might want to comment out the "dump a" to let it
continue. 


New Comment: 
Relevant IRC log from #cassandra<div class="code panel" style="border-width: 1px;"><div
class="codeContent panelContent"><pre class="code-java">[22:26] driftx: hmm, I think <span
class="code-keyword">this</span> is the udfcontext signature reuse problem[22:26] driftx:
jeromatron: what's the workaround <span class="code-keyword">for</span> that again?[22:26]
Ecyrd: Is there an open bug?[22:28] driftx: #2869, but we fixed it. hmm.[22:28] CassBotJr:
https:<span class="code-comment">//issues.apache.org/jira/browse/CASSANDRA-2869 :
CassandraStorage does not function properly when used multiple times in a single pig
script due to UDFContext sharing issues</span>[22:34] driftx:         <span
class="code-keyword">case</span> DataType.CHARARRAY:[22:34] driftx:             <span
class="code-keyword">return</span> <span class="code-keyword">new</span>
NullableText((<span class="code-object">String</span>)o);[22:34] driftx: so it thinks it
has a chararray, but it still has a bytearray[22:42] driftx: I think we have to implement
a LoadCaster to get around <span class="code-keyword">this</span>[22:43] Ecyrd: So I'm not
insane, <span class="code-keyword">this</span> is a real bug </pre></div></div> 


New Comment: 
I think implementing LoadCaster will fix this, but it's strange to me that pig doesn't
allow going to the other way, casting a chararray to a bytearray since that's the only
thing guaranteed to work here, in case the Bytes CF has keys that won't map to UTF8. 


New Comment: 
Patch to add a LoadCaster.  It does get used and converts the byte[] to String, but the
join still fails with the same error <img class="emoticon"
src="https://issues.apache.org/jira/images/icons/emoticons/sad.png" height="16" width="16"
align="absmiddle" alt="" border="0"/> 


New Comment: 
Could the fact that these are row keys, not columns, have something to do with the issue?
Looking at CassandraStorage.getNext(), there's a line    // set the key<br/>   
tuple.append(new DataByteArray(ByteBufferUtil.getArray(key)));So it looks to me like the
key is <b>always</b> added as a DataByteArray, regardless of it's actual type? getSchema()
does seem to read the value from CfDef correctly tho'. 


New Comment: 
You're totally right.  It wasn't a problem casting the key from Bytes, but trying to use
the one from U8.  Patch to compose the key from the marshaller. 


New Comment: 
+1 


