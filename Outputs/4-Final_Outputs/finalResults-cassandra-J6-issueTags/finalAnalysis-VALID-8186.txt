Pattern changes caused by commit: 5b511b62136d3bcb230a282fa433a122d061ee22

From: Abstract Factory-1
To:   Abstract Factory-2

From: Factory Method-1
To:   Factory Method-2

From: Decorator-2
To:   Decorator-1

From: Facade-0
To:   Facade-1

From: Flyweight-2
To:   Flyweight-1

From: Mediator-3
To:   Mediator-1

From: Strategy-0
To:   Strategy-1


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-8186.txt 

commit 5b511b62136d3bcb230a282fa433a122d061ee22
Author: Jonathan Ellis <jbellis@apache.org>

    reduce log spam from invalid counter shards
    patch by slebresne and jbellis for CASSANDRA-5026



==================================
 Issue CASSANDRA-5026 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-5026] Reduce log spam from counter shard warnings
-----------------

-----------------
Summary: Reduce log spam from counter shard warnings
-----------------

-----------------
Issue type: Improvement
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Tue, 4 Dec 2012 21:56:30 +0000
-----------------

-----------------
Resolved at: Sat, 8 Dec 2012 16:21:29 +0000
-----------------

-----------------
Assigned to: Sylvain Lebresne
-----------------

-----------------
Description: 

The invalid counter shard warning we can get after unclean shutdown in periodic commitlog
mode or after node movement (<a
href="https://issues.apache.org/jira/browse/CASSANDRA-4071" title="Topology changes can
lead to bad counters (at RF=1)" class="issue-link"
data-issue-key="CASSANDRA-4071"><del>CASSANDRA-4071</del></a>) can spam the log hard since
it is logged once per read until compaction merges it away.
 

-----------------

-----------------
Comments: 

New Comment: 
Possible fixes include: <ol>	<li>forcing compaction when we see the
problem</li>	<li>keeping a Map of shards we've logged it for and shutting up about it
after the first time</li>	<li>only logging it during compaction instead of the read
path</li></ol>(1) is conceptually simple but problematic for LCS.  (2) intertwines logging
w/ server logic at a level that makes me uncomfortable.  Which leaves (3) as the best
option IMO. 


New Comment: 
<blockquote>only logging it during compaction</blockquote>Agreed that it's the best
option. It'll also make the message more true in the sense that the message says "will
pick highest to self-heal", but we only "self-heal" things on compaction.Patch attached
for that. 


New Comment: 
Can we just assume that any CompactionManager thread will want to log and not have to
worry about trying to turn it on and off constantly? 


New Comment: 
That wouldn't be crazy but where else do you propose to set it to true? I suppose we could
avoid to turn it off each time, but at the same time it's not like it's costing anything
and it has the vague advantages that we can control which operation actually triggers it
(for instance the patch don't trigger it with validation compaction (that don't "repair"
the shard either)). 


New Comment: 
v2 sets in beforeExecute.  (would prefer to set in the ThreadFactory but that doesn't seem
possible, since there is no api to set a ThreadLocal for an arbitrary Thread object.) 


New Comment: 
I'm good with v2, though as said before it sets the flag for anything that is executed by
the compactionExecutor (validation, cleanup, scrub, ...) not just actual compaction, so
maybe we can rename it from "isCompacting"? 


