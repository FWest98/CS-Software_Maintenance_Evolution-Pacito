Pattern changes caused by commit: d74103735126658d64cb92a16f4bb40f63d5e2e8

From: Decorator-1
To:   Decorator-2

From: Flyweight-1
To:   Flyweight-2

From: Mediator-1
To:   Mediator-3

From: Strategy-1
To:   Strategy-0

From: Template Method-2
To:   Template Method-3


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-7171.txt 

commit d74103735126658d64cb92a16f4bb40f63d5e2e8
Author: Yuki Morishita <yukim@apache.org>

    fix incorrect hasIrrelevantData result for live CF; patch by yukim, reviewed by jbellis/slebresne for CASSANDRA-3855



==================================
 Issue CASSANDRA-3855 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-3855] RemoveDeleted dominates compaction time for large sstable counts
-----------------

-----------------
Summary: RemoveDeleted dominates compaction time for large sstable counts
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Sun, 5 Feb 2012 21:52:07 +0000
-----------------

-----------------
Resolved at: Fri, 20 Jul 2012 22:35:23 +0000
-----------------

-----------------
Assigned to: Yuki Morishita
-----------------

-----------------
Description: 

With very large numbers of sstables (2000+ generated by a `bin/stress -n 100,000,000` run
with LeveledCompactionStrategy), PrecompactedRow.removeDeletedAndOldShards dominates
compaction runtime, such that commenting it out takes compaction throughput from 200KB/s
to 12MB/s.

Stack attached.
 

-----------------

-----------------
Comments: 

New Comment: 
Yuki, can you benchmark trunk and see if this is still a bottleneck?  I think we want to
bench both LCS and STCS. 


New Comment: 
I'll precise that I try to do a quick test to see if I could reproduce "back in the days"
but wasn't really able to reproduce something similar to the attached hprof log. I didn't
wait up to 100,000,000 keys though. 


New Comment: 
I ran cpu profile on trunk and 1.1 with LCS and about 1000 sstables. On 1.1 branch, there
is no indication of dominating removeDeletedAndOldShards. But for trunk, I noticed that it
seemed unnecessary CompactionController#shouldPurge is called inside
removeDeletedAndOldShards, where shouldPurge is supposed to be called only when CF has
tombstones. So I looked up the code and I'm not sure if this line(<a
href="https://github.com/apache/cassandra/blob/trunk/src/java/org/apache/cassandra/db/AbstractColumnContainer.java#L201"
class="external-link"
rel="nofollow">https://github.com/apache/cassandra/blob/trunk/src/java/org/apache/cassandra/db/AbstractColumnContainer.java#L201</a>)
is correct. If CF is live, returning false for hasIrrelevantData seems right. Sylvain,
what do you think? 


New Comment: 
That's definitely wrong...  I think it should be <tt>if (info != LIVE) return false</tt> 


New Comment: 
Agreed that it is wrong, but I think that it's more than the first line that is wrong. I
think that method should be:<div class="preformatted panel" style="border-width:
1px;"><div class="preformattedContent panelContent"><pre>public boolean
hasIrrelevantData(int gcBefore){    if (deletionInfo().isLive())        return false;   
// Do we have gcable deletion infos?    if
(!deletionInfo().purge(gcbefore).equals(deletionInfo()))        return true;    // Do we
have colums that are either deleted by the container or gcable tombstone?    for (IColumn
column : columns)        if (deletionInfo().isDeleteted(column) ||
column.hasIrrelevantData(gcBefore))            return true;    return
false;}</pre></div></div> 


New Comment: 
We definitely don't want "if row is live, nothing to do here" behavior, otherwise we'll
never purge column-level tombstones without a full row deletion. 


New Comment: 
Your right, that's a broken optimization, the 2 first lines should be removed. 


New Comment: 
+1 for proposed method w/ first 2 lines removed 


New Comment: 
So I summarized and attached patch. Tested on trunk and confirmed it fixed. 


New Comment: 
+1 


New Comment: 
Committed to trunk. 


