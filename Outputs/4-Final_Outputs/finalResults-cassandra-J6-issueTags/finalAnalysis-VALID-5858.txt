Pattern changes caused by commit: 671a0c9631e9fcf5310ac904f554647d2c7e0280

From: Abstract Factory-2
To:   Abstract Factory-3

From: Factory Method-2
To:   Factory Method-3

From: Facade-0
To:   Facade-1

From: Flyweight-4
To:   Flyweight-3


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-5858.txt 

commit 671a0c9631e9fcf5310ac904f554647d2c7e0280
Author: Jonathan Ellis <jbellis@apache.org>

    Return InvalidRequest when using a keyspace that doesn't exist
    patch by jbellis; reviewed by pcannon for CASSANDRA-3764



==================================
 Issue CASSANDRA-3764 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-3764] cqlsh doesn't error out immediately for use of invalid keyspace
-----------------

-----------------
Summary: cqlsh doesn't error out immediately for use of invalid keyspace
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Sat, 21 Jan 2012 05:54:30 +0000
-----------------

-----------------
Resolved at: Thu, 26 Jan 2012 01:30:33 +0000
-----------------

-----------------
Assigned to: Jonathan Ellis
-----------------

-----------------
Description: 
<div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent
panelContent"><pre>cqlsh&gt; use wordcoun;cqlsh:wordcoun&gt; select * from input_words;Bad
Request: Keyspace wordcoun does not exist</pre></div></div> 

-----------------

-----------------
Comments: 

New Comment: 
Looks like this is a server bug, not cqlsh's fault:<div class="code panel"
style="border-width: 1px;"><div class="codeContent panelContent"><pre class="code-java">. 
 <span class="code-keyword">public</span> void setKeyspace(<span
class="code-object">String</span> ks)    {        keyspace = ks;    }</pre></div></div> 


New Comment: 
quick fix attached. 


New Comment: 
I always thought this was expected behavior. Is there any chance this might break some
existing code? I guess probably not. 


New Comment: 
+1 


