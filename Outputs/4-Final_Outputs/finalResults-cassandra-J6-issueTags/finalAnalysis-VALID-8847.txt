Pattern changes caused by commit: ba06e4128b4cc66edb3e8e3ea02ce5cb5eae211c

From: Abstract Factory-1
To:   Abstract Factory-2

From: Factory Method-1
To:   Factory Method-2

From: Decorator-2
To:   Decorator-1

From: Facade-0
To:   Facade-1

From: Flyweight-2
To:   Flyweight-1

From: Mediator-3
To:   Mediator-1

From: Strategy-0
To:   Strategy-1


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-8847.txt 

commit ba06e4128b4cc66edb3e8e3ea02ce5cb5eae211c
Author: Jonathan Ellis <jbellis@apache.org>

    add tmp flag to Descriptor hashcode
    patch by Boris Yen; reviewed by jbellis for CASSANDRA-4021



==================================
 Issue CASSANDRA-4021 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-4021] CFS.scrubDataDirectories tries to delete nonexistent orphans
-----------------

-----------------
Summary: CFS.scrubDataDirectories tries to delete nonexistent orphans
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Thu, 8 Mar 2012 17:22:50 +0000
-----------------

-----------------
Resolved at: Mon, 11 Mar 2013 23:16:32 +0000
-----------------

-----------------
Assigned to: Boris Yen
-----------------

-----------------
Description: 

The check only looks for a missing data file, then deletes all other components, however
it's possible for the data file and another component to be missing, causing an
error:
<div class="preformatted panel" style="border-width: 1px;"><div
class="preformattedContent panelContent"><pre> WARN 17:19:28,765 Removing orphans for
/var/lib/cassandra/data/system/HintsColumnFamily/system-HintsColumnFamily-hd-24492:
[Index.db, Filter.db, Digest.sha1, Statistics.db, Data.db]ERROR 17:19:28,766 Exception
encountered during startupjava.lang.AssertionError: attempted to delete non-existing file
system-HintsColumnFamily-hd-24492-Index.db        at
org.apache.cassandra.io.util.FileUtils.deleteWithConfirm(FileUtils.java:49)        at
org.apache.cassandra.io.util.FileUtils.deleteWithConfirm(FileUtils.java:44)        at
org.apache.cassandra.db.ColumnFamilyStore.scrubDataDirectories(ColumnFamilyStore.java:357)
       at
org.apache.cassandra.service.AbstractCassandraDaemon.setup(AbstractCassandraDaemon.java:167)
       at
org.apache.cassandra.service.AbstractCassandraDaemon.activate(AbstractCassandraDaemon.java:352)
       at
org.apache.cassandra.thrift.CassandraDaemon.main(CassandraDaemon.java:105)java.lang.AssertionError:
attempted to delete non-existing file system-HintsColumnFamily-hd-24492-Index.db        at
org.apache.cassandra.io.util.FileUtils.deleteWithConfirm(FileUtils.java:49)        at
org.apache.cassandra.io.util.FileUtils.deleteWithConfirm(FileUtils.java:44)        at
org.apache.cassandra.db.ColumnFamilyStore.scrubDataDirectories(ColumnFamilyStore.java:357)
       at
org.apache.cassandra.service.AbstractCassandraDaemon.setup(AbstractCassandraDaemon.java:167)
       at
org.apache.cassandra.service.AbstractCassandraDaemon.activate(AbstractCassandraDaemon.java:352)
       at
org.apache.cassandra.thrift.CassandraDaemon.main(CassandraDaemon.java:105)Exception
encountered during startup: attempted to delete non-existing file
system-HintsColumnFamily-hd-24492-Index.db</pre></div></div> 

-----------------

-----------------
Comments: 

New Comment: 
Apparently this goes all the way back to <a
href="https://issues.apache.org/jira/browse/CASSANDRA-1471" title="Improve SSTable
discovery and allow for more components" class="issue-link"
data-issue-key="CASSANDRA-1471"><del>CASSANDRA-1471</del></a> but occurs very rarely. 
Patch to attempt deletion without caring about success. 


New Comment: 
The reasoning is that since the data component is written (renamed) last, the others
should be there too if the data is. 


New Comment: 
Aren't we actually firing this when the data does not exist, though?<div class="code
panel" style="border-width: 1px;"><div class="codeContent panelContent"><pre
class="code-java">            <span class="code-keyword">if</span>
(components.contains(Component.DATA) &amp;&amp; dataFile.length() &gt; 0)               
<span class="code-comment">// everything appears to be in order... moving on.</span>      
         <span class="code-keyword">continue</span>;            <span
class="code-comment">// missing the DATA file! all components are
orphaned</span></pre></div></div> 


New Comment: 
Not sure what you mean &#8211; since data file is renamed last, it's normal (if the
process was killed mid-flush) for components to exist without a data file.  But I can't
think of a situation that would cause the inverse.  Are we perhaps deleting things
asynchronously somewhere? 


New Comment: 
I'm not sure how this happened, I tried to repro artificially and wasn't able to. 
Originally what happened is I was testing a patch that threw a TON of errors (all time was
spent in logging), and after a ctrl-c and restart this happened.Is it really important to
confirm the deletion here?  Being unable to start rather sucks. 


New Comment: 
What's weird is that the INDEX component was clearly found at the beginning of
scrubDataDirectories, but didn't existed anymore when we tried the deletion. However, this
happens during AbstractDaemon.setup() so I don't think there can be any concurrent process
deleting the file. Anyway, I don't thing the delete confirmation is very important but I'm
not fond of changing code when we don't understand what's going on. At least as long as
nobody have reproduced without using a buggy patch initially. 


New Comment: 
FWIW, there has been another case of this reported, but it was on Windows. 


New Comment: 
I don't suppose you have a log file for that case? 


New Comment: 
Trival repro case for something similar :1) create file named
something-that-looks-like-a-sstable-but-isn't, for example the tablesnap-created filename
"ObfuscatedCF-hd-8813-Statistics.db-listdir.json", which users of tablesnap are relatively
likely to accidentally have in their datadir.2) stop node.3) start.This case seems like an
issue with the sstable identifying code, real sstables names don't end with random strings
like "-listdir.json". <img class="emoticon"
src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16"
width="16" align="absmiddle" alt="" border="0"/> 


New Comment: 
My mind boggles that you appear to expect Cassandra to cope with arbitrary user-created
files in the directories it is supposed to have control over. 


New Comment: 
I don't especially "expect" Cassandra to cope with arbitrary user-created files in the
directories it is supposed to have control over. The purpose of my comment was primarily
to assist any other operator who might have accidentally created such a file, who would
then google the exception and be confused because this ticket was marked
no-repro.However.. the comment for scrubDataDirectories says the following
:<br/>"<ul>	<li>Removes unnecessary files from the cf directory at startup: these include
temp files, orphans, zero-length files</li>	<li>and compacted sstables. Files that cannot
be recognized will be ignored.<br/>"</li></ul>So it is a goal to "recognize" files
properly, and to "ignore" files that are not "recognized" properly.Further in the code we
see..<br/>"<br/>if (!"snapshots".equals(name) &amp;&amp; !"backups".equals(name)
&amp;&amp; !name.contains(".json"))<br/>"Which suggests that had my file not happened to
have had suffix .json, it would have been "recognized" and at least logged an error about
being an invalid file, even if it were not "ignored," I would have had a chance of reading
a relevant log message ...I agree that the practice of creating arbitrary files named like
sstables, but with an additional "-" in them should be considered hazardous!But as we can
easily "recognize" that any file with more "-" delimited elements in them than possible
are not sstables, I continue to suggest that the user might prefer to discover this before
Cassandra has tried and failed to treat such a file as a sstable, and refused to start as
a result of trying to scrub the broken sstable. <img class="emoticon"
src="https://issues.apache.org/jira/images/icons/emoticons/biggrin.png" height="16"
width="16" align="absmiddle" alt="" border="0"/> 


New Comment: 
We also see similar error message, but it is not about the 'index'. We are using
1.0.10.WARN <span class="error">&#91;main&#93;</span> 2012-09-05 08:32:01,804
ColumnFamilyStore.java (line 383) Removing orphans for
/opt/ruckuswireless/wsg/db/data/wsg/inventorySummary-hd-91: <span
class="error">&#91;Statistics.db, Filter.db, Digest.sha1, Data.db,
Index.db&#93;</span><br/>ERROR <span class="error">&#91;main&#93;</span> 2012-09-05
08:32:01,805 AbstractCassandraDaemon.java (line 373) Exception encountered during
startup<br/>java.lang.AssertionError: attempted to delete non-existing file
inventorySummary-hd-91-Digest.sha1<br/>	at
org.apache.cassandra.io.util.FileUtils.deleteWithConfirm(FileUtils.java:49)<br/>	at
org.apache.cassandra.io.util.FileUtils.deleteWithConfirm(FileUtils.java:44)<br/>	at
org.apache.cassandra.db.ColumnFamilyStore.scrubDataDirectories(ColumnFamilyStore.java:388)<br/>	at
org.apache.cassandra.service.AbstractCassandraDaemon.setup(AbstractCassandraDaemon.java:193)<br/>	at
org.apache.cassandra.service.AbstractCassandraDaemon.activate(AbstractCassandraDaemon.java:356)<br/>	at
org.apache.cassandra.thrift.CassandraDaemon.main(CassandraDaemon.java:107)I was wondering
if anyone could confirm that this is the same issue. 


New Comment: 
It looks similar, what kind of environment was this in? 


New Comment: 
OS:<br/>Linux TEST1 2.6.32.24 #1 SMP Wed Oct 3 14:51:26 CST 2012 x86_64
GNU/LinuxHardware:<br/>24 cores, 48G memory, 12G for heap. The first time we saw this was
after the server was shutdown abruptly (due to the hardware issue). We have not seen the
same issue for a while. However, it happened again just a few days ago. Unfortunately, we
could not find a consistent way to reproduce it. 


New Comment: 
dtestbot managed to randomly reproduce this morning.  It looks like a race between
compaction cleanup and forcible shutdown, then startup.  Log attached. 


New Comment: 
I might be wrong. From the log, it looks like C* is started twice in a row. Is this a
possible cause? Anyway to workaround this? 


New Comment: 
That's odd, because here's the code causing that assertion:<div class="code panel"
style="border-width: 1px;"><div class="codeContent panelContent"><pre class="code-java">. 
         File dataFile = <span class="code-keyword">new</span>
File(desc.filenameFor(Component.DATA));            <span class="code-keyword">if</span>
(components.contains(Component.DATA) &amp;&amp; dataFile.length() &gt; 0)               
<span class="code-comment">// everything appears to be in order... moving on.</span>      
         <span class="code-keyword">continue</span>;            <span
class="code-comment">// missing the DATA file! all components are orphaned</span>         
  logger.warn(<span class="code-quote">"Removing orphans <span
class="code-keyword">for</span> {}: {}"</span>, desc, components);            <span
class="code-keyword">for</span> (Component component : components)            {           
    FileUtils.deleteWithConfirm(desc.filenameFor(component));           
}</pre></div></div>I must be missing something because these are the possibilities I
see:<ol>	<li>.db exists and is non-empty.  we don't try to delete it.</li>	<li>.db exists
and is empty.  we delete it, and do not get a "file does not exist" failure</li>	<li>.db
does not exist (is not part of components), so we do not try to delete it</li></ol> 


New Comment: 
Saw this in the wild again.  It was encountered multiple times on the same component set
preventing startup, in the following order: CompressionInfo, CompressionInfo, Index,
CompressionInfo, CompressionInfo.  After that, it was finally able to startup so we
weren't able to see which components existed or did not, but it looks like it does make
incremental progress on the deletions with each restart.  I don't want to paper over
something without understanding what's going on here, but it's highly annoying and visible
when this error is fatal.  We aren't making progress here too quickly, so maybe in the
interim we should add more logging around this and log something at ERROR instead of
dying. 


New Comment: 
Saw this today on one of our test machine. Windows box with Cassandra 1.1.5. It would be
nice to have it log and continue instead of puking. <img class="emoticon"
src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16"
width="16" align="absmiddle" alt="" border="0"/> On the bright side, it does make progress
every time upon startup and eventually starts fine. Haven't been able to reproduce it
since. Log:WARN <span class="error">&#91;main&#93;</span> 2013-01-24 13:01:50,480
ColumnFamilyStore.java (line 393) Removing orphans for C:\Program Files\Quest
Software\MessageStats Business
Insights\Storage\data\Doradus\MS_1_MessageParticipantPair_Terms\Doradus-MS_1_MessageParticipantPair_Terms-he-31:
<span class="error">&#91;Statistics.db, Filter.db, Digest.sha1, Data.db,
Index.db&#93;</span><br/>ERROR <span class="error">&#91;main&#93;</span> 2013-01-24
13:01:50,480 AbstractCassandraDaemon.java (line 406) Exception encountered during
startup<br/>java.lang.AssertionError: attempted to delete non-existing file
Doradus-MS_1_MessageParticipantPair_Terms-he-31-Filter.db<br/>                at
org.apache.cassandra.io.util.FileUtils.deleteWithConfirm(FileUtils.java:68)<br/>          
     at org.apache.cassandra.io.util.FileUtils.deleteWithConfirm(FileUtils.java:63)<br/>  
             at
org.apache.cassandra.db.ColumnFamilyStore.scrubDataDirectories(ColumnFamilyStore.java:398)<br/>
               at
org.apache.cassandra.service.AbstractCassandraDaemon.setup(AbstractCassandraDaemon.java:196)<br/>
               at
org.apache.cassandra.service.AbstractCassandraDaemon.activate(AbstractCassandraDaemon.java:389)<br/>
               at
org.apache.cassandra.thrift.CassandraDaemon.main(CassandraDaemon.java:106)<br/>WARN <span
class="error">&#91;main&#93;</span> 2013-01-24 13:35:32,656 ColumnFamilyStore.java (line
393) Removing orphans for C:\Program Files\Quest Software\MessageStats Business
Insights\Storage\data\Doradus\MS_1_MessageParticipantPair_Terms\Doradus-MS_1_MessageParticipantPair_Terms-he-31:
<span class="error">&#91;Data.db, Digest.sha1, Filter.db, Index.db&#93;</span><br/>ERROR
<span class="error">&#91;main&#93;</span> 2013-01-24 13:35:32,656
AbstractCassandraDaemon.java (line 406) Exception encountered during
startup<br/>java.lang.AssertionError: attempted to delete non-existing file
Doradus-MS_1_MessageParticipantPair_Terms-he-31-Data.db<br/>                at
org.apache.cassandra.io.util.FileUtils.deleteWithConfirm(FileUtils.java:68)<br/>          
     at org.apache.cassandra.io.util.FileUtils.deleteWithConfirm(FileUtils.java:63)<br/>  
             at
org.apache.cassandra.db.ColumnFamilyStore.scrubDataDirectories(ColumnFamilyStore.java:398)<br/>
               at
org.apache.cassandra.service.AbstractCassandraDaemon.setup(AbstractCassandraDaemon.java:196)<br/>
               at
org.apache.cassandra.service.AbstractCassandraDaemon.activate(AbstractCassandraDaemon.java:389)<br/>
               at
org.apache.cassandra.thrift.CassandraDaemon.main(CassandraDaemon.java:106)<br/>WARN <span
class="error">&#91;main&#93;</span> 2013-01-24 13:35:44,559 ColumnFamilyStore.java (line
393) Removing orphans for C:\Program Files\Quest Software\MessageStats Business
Insights\Storage\data\Doradus\MS_1_MessageParticipantPair_Terms\Doradus-MS_1_MessageParticipantPair_Terms-he-31:
<span class="error">&#91;Index.db, Digest.sha1, Data.db, Filter.db&#93;</span><br/>ERROR
<span class="error">&#91;main&#93;</span> 2013-01-24 13:35:44,559
AbstractCassandraDaemon.java (line 406) Exception encountered during
startup<br/>java.lang.AssertionError: attempted to delete non-existing file
Doradus-MS_1_MessageParticipantPair_Terms-he-31-Data.db<br/>                at
org.apache.cassandra.io.util.FileUtils.deleteWithConfirm(FileUtils.java:68)<br/>          
     at org.apache.cassandra.io.util.FileUtils.deleteWithConfirm(FileUtils.java:63)<br/>  
             at
org.apache.cassandra.db.ColumnFamilyStore.scrubDataDirectories(ColumnFamilyStore.java:398)<br/>
               at
org.apache.cassandra.service.AbstractCassandraDaemon.setup(AbstractCassandraDaemon.java:196)<br/>
               at
org.apache.cassandra.service.AbstractCassandraDaemon.activate(AbstractCassandraDaemon.java:389)<br/>
               at
org.apache.cassandra.thrift.CassandraDaemon.main(CassandraDaemon.java:106) 


New Comment: 
We saw this issue again on 1.0.10. It seems this happens when the file-name-change after
compaction is not completed. The following are the sstables on our file system and the
error we saw (the -ea option is removed):<del>rw-r</del><del>r</del>-   1 byan admin 66305
Mar  5 10:07 indexBytes-hd-111-Data.db<br/><del>rw-r</del><del>r</del>-   1 byan admin   
67 Mar  5 10:07 indexBytes-hd-111-Digest.sha1<br/><del>rw-r</del><del>r</del>-   1 byan
admin  1936 Mar  5 10:07 indexBytes-hd-111-Filter.db<br/><del>rw-r</del><del>r</del>-   1
byan admin   333 Mar  5 10:07 indexBytes-hd-111-Index.db<br/><del>rw-r</del><del>r</del>- 
 1 byan admin  4336 Mar  5 10:07
indexBytes-hd-111-Statistics.db<br/><del>rw-r</del><del>r</del>-   1 byan admin   240 Mar 
5 12:50 indexBytes-hd-112-Data.db<br/><del>rw-r</del><del>r</del>-   1 byan admin    67
Mar  5 12:50 indexBytes-hd-112-Digest.sha1<br/><del>rw-r</del><del>r</del>-   1 byan admin
   16 Mar  5 12:50 indexBytes-hd-112-Filter.db<br/><del>rw-r</del><del>r</del>-   1 byan
admin    32 Mar  5 12:50 indexBytes-hd-112-Index.db<br/><del>rw-r</del><del>r</del>-   1
byan admin  4336 Mar  5 12:50
indexBytes-hd-112-Statistics.db<br/><del>rw-r</del><del>r</del>-   1 byan admin   240 Mar 
5 15:18 indexBytes-hd-113-Data.db<br/><del>rw-r</del><del>r</del>-   1 byan admin    67
Mar  5 15:18 indexBytes-hd-113-Digest.sha1<br/><del>rw-r</del><del>r</del>-   1 byan admin
   16 Mar  5 15:18 indexBytes-hd-113-Filter.db<br/><del>rw-r</del><del>r</del>-   1 byan
admin    32 Mar  5 15:18 indexBytes-hd-113-Index.db<br/><del>rw-r</del><del>r</del>-   1
byan admin  4336 Mar  5 15:18
indexBytes-hd-113-Statistics.db<br/><del>rw-r</del><del>r</del>-   1 byan admin   120 Mar 
5 15:26 indexBytes-hd-114-Data.db<br/><del>rw-r</del><del>r</del>-   1 byan admin    67
Mar  5 15:26 indexBytes-hd-114-Digest.sha1<br/><del>rw-r</del><del>r</del>-   1 byan admin
   16 Mar  5 15:26 indexBytes-hd-114-Filter.db<br/><del>rw-r</del><del>r</del>-   1 byan
admin    16 Mar  5 15:26 indexBytes-hd-114-Index.db<br/><del>rw-r</del><del>r</del>-   1
byan admin  4336 Mar  5 15:26
indexBytes-hd-114-Statistics.db<br/><del>rw-r</del><del>r</del>-   1 byan admin   333 Mar 
5 15:26 indexBytes-hd-115-Index.db<br/><del>rw-r</del><del>r</del>-   1 byan admin 66305
Mar  5 15:26 indexBytes-tmp-hd-115-Data.db<br/><del>rw-r</del><del>r</del>-   1 byan admin
   67 Mar  5 15:26 indexBytes-tmp-hd-115-Digest.sha1<br/><del>rw-r</del><del>r</del>-   1
byan admin  1936 Mar  5 15:26 indexBytes-tmp-hd-115-Filter.dbWARN <span
class="error">&#91;main&#93;</span> 2013-03-05 10:43:22,494 ColumnFamilyStore.java (line
383) Removing orphans for /opt/test/tt/indexBytes-hd-115: <span
class="error">&#91;Digest.sha1, Index.db, Filter.db, Data.db&#93;</span><br/>ERROR <span
class="error">&#91;main&#93;</span> 2013-03-05 10:43:22,494 AbstractCassandraDaemon.java
(line 373) Exception encountered during startup<br/>java.io.IOError: java.io.IOException:
Failed to delete /opt/test/tt/indexBytes-hd-115-Digest.sha1<br/>	at
org.apache.cassandra.db.ColumnFamilyStore.scrubDataDirectories(ColumnFamilyStore.java:392)<br/>	at
org.apache.cassandra.service.AbstractCassandraDaemon.setup(AbstractCassandraDaemon.java:193)<br/>	at
org.apache.cassandra.service.AbstractCassandraDaemon.activate(AbstractCassandraDaemon.java:356)<br/>	at
org.apache.cassandra.thrift.CassandraDaemon.main(CassandraDaemon.java:107)<br/>Caused by:
java.io.IOException: Failed to delete
/opt/ruckuswireless/wsg/db/data/wsg/indexBytes-hd-115-Digest.sha1<br/>	at
org.apache.cassandra.io.util.FileUtils.deleteWithConfirm(FileUtils.java:54)<br/>	at
org.apache.cassandra.io.util.FileUtils.deleteWithConfirm(FileUtils.java:44)<br/>	at
org.apache.cassandra.db.ColumnFamilyStore.scrubDataDirectories(ColumnFamilyStore.java:388)<br/>	...
3 moreIt seems the "Descriptor" does not take the "temporary" flag into account in the
"hash" and "equals" function. I was wondering if anyone could confirm this. 


