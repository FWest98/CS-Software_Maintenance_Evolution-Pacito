Pattern changes caused by commit: 262e006eb76ca7fce366fd51310a980fd5312837

From: Abstract Factory-2
To:   Abstract Factory-1

From: Factory Method-2
To:   Factory Method-1

From: Decorator-1
To:   Decorator-2

From: Facade-1
To:   Facade-0

From: Flyweight-1
To:   Flyweight-2

From: Mediator-1
To:   Mediator-3

From: Strategy-1
To:   Strategy-0


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-9143.txt 

commit 262e006eb76ca7fce366fd51310a980fd5312837
Author: Jason Brown <jasedbrown@gmail.com>

    Add retry mechanism to OTC for non-droppable_verbs
    patch by jasobrown; reviewed by jbellis for CASSANDRA-5393



==================================
 Issue CASSANDRA-5393 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-5393] Add retry mechanism to OTC for non-droppable_verbs
-----------------

-----------------
Summary: Add retry mechanism to OTC for non-droppable_verbs
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Wed, 27 Mar 2013 17:59:48 +0000
-----------------

-----------------
Resolved at: Thu, 18 Apr 2013 20:56:25 +0000
-----------------

-----------------
Assigned to: Jason Brown
-----------------

-----------------
Description: 

Can we add an Ack/Retry around passing merle tree's around in repair?  If the following
fails, the repair hangs for ever on the coordinating node.

<a
href="https://github.com/apache/cassandra/blob/cassandra-1.1.10/src/java/org/apache/cassandra/service/AntiEntropyService.java#L242"
class="external-link"
rel="nofollow">https://github.com/apache/cassandra/blob/cassandra-1.1.10/src/java/org/apache/cassandra/service/AntiEntropyService.java#L242</a>
<div
class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent
panelContent"><pre>            Message message = TreeResponseVerbHandler.makeVerb(local,
validator);            if
(!validator.request.endpoint.equals(FBUtilities.getBroadcastAddress()))               
logger.info(String.format("[repair #%s] Sending completed merkle tree to %s for %s",
validator.request.sessionid, validator.request.endpoint, validator.request.cf));          
 ms.sendOneWay(message, validator.request.endpoint);</pre></div></div>
If the message
asking for merkle tree's gets lost, coordinating node hangs for ever as well.
 

-----------------

-----------------
Comments: 

New Comment: 
We've got an idea we're testing out here, and will hopefully post a patch in a day or so. 


New Comment: 
Yuki's ticket is more comprehensive than this one 


New Comment: 
At the end of the day, this is what I see happening:<div class="code panel"
style="border-width: 1px;"><div class="codeContent panelContent"><pre
class="code-java">INFO [AntiEntropyStage:1] 2013-03-27 22:48:55,390
AntiEntropyService.java (line 239) repair #80fe25a0-9730-11e2-0000-ebe7011631ff Sending
completed merkle tree to /54.246.XXX.YYY <span class="code-keyword">for</span>
(Geo,GeoCountryMetadata)DEBUG [WRITE-/54.246.XXX.YYY] 2013-03-27 22:48:55,392
OutboundTcpConnection.java (line 165) error writing to
ec2-54-246-XXX.YYY.eu-west-1.compute.amazonaws.com/54.246.XXX.YYYjava.net.SocketException:
Connection timed outat java.net.SocketOutputStream.socketWrite0(Native Method)at
java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)at
java.net.SocketOutputStream.write(SocketOutputStream.java:136)at
com.sun.net.ssl.internal.ssl.OutputRecord.writeBuffer(OutputRecord.java:358)at
com.sun.net.ssl.internal.ssl.OutputRecord.write(OutputRecord.java:346)at
com.sun.net.ssl.internal.ssl.SSLSocketImpl.writeRecordInternal(SSLSocketImpl.java:781)at
com.sun.net.ssl.internal.ssl.SSLSocketImpl.writeRecord(SSLSocketImpl.java:753)at
com.sun.net.ssl.internal.ssl.AppOutputStream.write(AppOutputStream.java:100)at
java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:65)at
java.io.BufferedOutputStream.write(BufferedOutputStream.java:104)at
java.io.DataOutputStream.write(DataOutputStream.java:90)at
java.io.FilterOutputStream.write(FilterOutputStream.java:80)at
org.apache.cassandra.net.OutboundTcpConnection.write(OutboundTcpConnection.java:200)at
org.apache.cassandra.net.OutboundTcpConnection.writeConnected(OutboundTcpConnection.java:152)at
org.apache.cassandra.net.OutboundTcpConnection.run(OutboundTcpConnection.java:126)</pre></div></div>The
interesting thing is the "Connection timed out" exception message, rather than socket
reset (or something similar). So, I'm thinking this might be to keepalive timing out after
the connection is broken. I was able to reproduce this exception several times by having
my test cluster setup in three ec2 regions (us-west-2, us-east-1, eu-west-1 - three nodes
in each), and not sending any traffic for multiple hours. Basically, I'm waiting for the
connection to get dropped. Thus, when I went to triggered repair on one of the nodes (usu.
starting with us-west-2), I could see where the eu-west-1 nodes would get the request to
build the merkle tree, but then failed on sending the tree response with the above
exception. I was able to get similar problems when trying a schema update after many hours
of cluster idleness.The attached patch catches the exception when the socket is dead (for
whatever reason), and attempts a simple retry by requeueing the message at the end of the
backlog queue, with the hope that the next pass will successfully recreate the socket.
Note that I'm excluding MessagingService.DROPPABLE_VERBS from retries as it's OK to drop
reads/mutates, but it's really those AES and other schema-related messages that I think
we'd want to retry.Admittedly this is a simple mechanism that doesn't try to do anything
fancy like exponential backoff, n-levels of configurable retrys, and so on. I'm open to
discussion on that, but I'm not sure how much complexity we'd want to build in for that at
this point. I think an incremental improvement would go a long way here as we're currently
obscuring when messages can't be sent (which is OK for DROPPABLE_VERBS, but those other
ones are ones are really important), so added visibility and a retry mechanism will help. 


New Comment: 
v2 addresses a potential race condition between disconnecting the bad socket and
re-enqueueing the failed message. 


New Comment: 
+1 


New Comment: 
Can we make an Entry subclass instead of saddling each Entry with an extra field that will
mostly be unused?Also, space before open paren. <img class="emoticon"
src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16"
width="16" align="absmiddle" alt="" border="0"/> 


New Comment: 
v3 includes Jonathan's suggestions. Created RetryableEntry as a subclass of Entry. Added
method shouldRetry() to Entry; Entry will always return false, and RetryableEntry will
check it's member boolean. 


New Comment: 
v4 attached &#8211; easier to show than explain what I meant in English. <img
class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png"
height="16" width="16" align="absmiddle" alt="" border="0"/> 


New Comment: 
sorry for the attachment churn, decided to improve the comments too <img class="emoticon"
src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16"
width="16" align="absmiddle" alt="" border="0"/> 


New Comment: 
I think your patch and my patch are rather similar, but I'm game either way <img
class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png"
height="16" width="16" align="absmiddle" alt="" border="0"/>. However, there is a small
bug in Entry.shouldRetry(); you have<div class="code panel" style="border-width:
1px;"><div class="codeContent panelContent"><pre class="code-java"><span
class="code-keyword">return</span>
MessagingService.DROPPABLE_VERBS.contains(message.getVerb());</pre></div></div>but should
be<div class="code panel" style="border-width: 1px;"><div class="codeContent
panelContent"><pre class="code-java"><span class="code-keyword">return</span>
!MessagingService.DROPPABLE_VERBS.contains(message.getVerb());</pre></div></div>Otherwise
we would retry the DROPPABLE_VERBS, which we want to drop.With that small fix, lgtm. 


New Comment: 
Ship it! 


