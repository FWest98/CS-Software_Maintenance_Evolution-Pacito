Pattern changes caused by commit: fbdf7b03c7a8138ae9621bf9bacaada906a2530d

From: Facade-1
To:   Facade-0

From: Flyweight-3
To:   Flyweight-4


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-6345.txt 

commit fbdf7b03c7a8138ae9621bf9bacaada906a2530d
Author: Pavel Yaskevich <xedin@apache.org>

    ensure that directory is selected for compaction
    patch by Aaron Morton; reviewed by Pavel Yaskevich for CASSANDRA-3985



==================================
 Issue CASSANDRA-3985 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-3985] Ensure a directory is selected for Compaction
-----------------

-----------------
Summary: Ensure a directory is selected for Compaction
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Thu, 1 Mar 2012 10:38:56 +0000
-----------------

-----------------
Resolved at: Thu, 3 May 2012 23:02:50 +0000
-----------------

-----------------
Assigned to: Jonathan Ellis
-----------------

-----------------
Description: 

From <a href="http://www.mail-archive.com/user@cassandra.apache.org/msg20757.html"
class="external-link"
rel="nofollow">http://www.mail-archive.com/user@cassandra.apache.org/msg20757.html</a>

CompactionTask.execute()
checks if there is a valid compactionFileLocation only if partialCompactionsAcceptable() .
upgradesstables results in a CompactionTask with userdefined set, so the valid location
check is not performed. 

The result is a NPE, partial stack 
<div class="code panel"
style="border-width: 1px;"><div class="codeContent panelContent"><pre class="code-java">$
nodetool -h localhost upgradesstablesError occured <span class="code-keyword">while</span>
upgrading the sstables <span class="code-keyword">for</span> keyspace
MyKeySpacejava.util.concurrent.ExecutionException: java.lang.NullPointerException       
at java.util.concurrent.FutureTask$Sync.innerGet(FutureTask.java:222)        at
java.util.concurrent.FutureTask.get(FutureTask.java:83)        at
org.apache.cassandra.db.compaction.CompactionManager.performAllSSTableOperation(CompactionManager.java:203)
       at
org.apache.cassandra.db.compaction.CompactionManager.performSSTableRewrite(CompactionManager.java:219)
       at
org.apache.cassandra.db.ColumnFamilyStore.sstablesRewrite(ColumnFamilyStore.java:995)     
  at
org.apache.cassandra.service.StorageService.upgradeSSTables(StorageService.java:1648)&lt;snip&gt;Caused
by: java.lang.NullPointerException        at java.io.File.&lt;init&gt;(File.java:222)     
  at
org.apache.cassandra.db.ColumnFamilyStore.getTempSSTablePath(ColumnFamilyStore.java:641)  
     at
org.apache.cassandra.db.ColumnFamilyStore.getTempSSTablePath(ColumnFamilyStore.java:652)  
     at
org.apache.cassandra.db.ColumnFamilyStore.createCompactionWriter(ColumnFamilyStore.java:1888)
       at
org.apache.cassandra.db.compaction.CompactionTask.execute(CompactionTask.java:151)       
at
org.apache.cassandra.db.compaction.CompactionManager$4.perform(CompactionManager.java:229)
       at
org.apache.cassandra.db.compaction.CompactionManager$2.call(CompactionManager.java:182)   
    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)        at
java.util.concurrent.FutureTask.run(FutureTask.java:138)</pre></div></div>
(night time
here, will fix tomorrow, anyone else feel free to fix it.)
 

-----------------

-----------------
Comments: 

New Comment: 
Modified DatabaseDescriptor.getDataFileLocationForTable() to add
ensureFreeSpace.Reformatted getDataFileLocationForTable() as it was small. Removed unused
DatabaseDescriptor.getNextAvailableDataLocation() 


New Comment: 
Question - what is the reason why we only return "true" from "ensureFreeSpace" if action
is not user defined?Few styling issues:<div class="code panel" style="border-width:
1px;"><div class="codeContent panelContent"><pre class="code-java"><span
class="code-keyword">public</span> <span class="code-keyword">synchronized</span> <span
class="code-keyword">static</span> <span class="code-object">String</span>
getDataFileLocationForTable(<span class="code-object">String</span> table, <span
class="code-object">long</span> expectedCompactedFileSize,                                
                                 <span class="code-object">boolean</span> ensureFreeSpace
)</pre></div></div>should be changed to <div class="code panel" style="border-width:
1px;"><div class="codeContent panelContent"><pre class="code-java"><span
class="code-keyword">public</span> <span class="code-keyword">synchronized</span> <span
class="code-keyword">static</span> <span class="code-object">String</span>
getDataFileLocationForTable(<span class="code-object">String</span> table,                
                                              <span class="code-object">long</span>
expectedCompactedFileSize,                                                             
<span class="code-object">boolean</span> ensureFreeSpace)</pre></div></div>or all
arguments written on the same line.Also we don't use spaces to delimit operands e.g.<div
class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"><pre
class="code-java"><span class="code-keyword">for</span> ( <span
class="code-object">int</span> i = 0 ; i &lt; dataDirectoryForTable.length ; i++
)</pre></div></div>I can see those styling problems inside of
getDataFileLocationForTable(...) method. 


New Comment: 
Figured out answer to my stupid question <img class="emoticon"
src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16"
width="16" align="absmiddle" alt="" border="0"/>Committed with code-style cleanup and
removed "currentIndex" static variable from DatabaseDescriptor which is unused after
getNextAvailableDataLocation() was dropped. 


New Comment: 
Sorry for not getting back.<br/>Thanks. 


New Comment: 
I don't understand this.  This will still return null for user defined compactions under
the same conditions it would have before, with no log message, since ensureFreeSpace ==
!isUserDefined. 


New Comment: 
It seems to me that the real fix we need is to turn the assert in CompactionTask into an
if statement so it can't be turned off.  Patch attached. 


New Comment: 
(All the other callers of <tt>getDataFileLocation</tt> and
<tt>getDataFileLocationForTable</tt> already check for null correctly.) 


New Comment: 
+1, right now we won't try to return the directory with the biggest empty space and would
abort compaction if there is no sufficient space left. 


