Pattern changes caused by commit: fd4fe5c8b3794b29684b132b298b73c32217b3ab

From: Facade-0
To:   Facade-1


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-5565.txt 

commit fd4fe5c8b3794b29684b132b298b73c32217b3ab
Author: Sylvain Lebresne <slebresne@apache.org>

    Remove columns shadowed by a deleted container even when we cannot purge
    patch by slebresne; reviewed by jbellis for CASSANDRA-3538



==================================
 Issue CASSANDRA-3538 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-3538] Remove columns shadowed by a deleted container even when we cannot purge
-----------------

-----------------
Summary: Remove columns shadowed by a deleted container even when we cannot purge
-----------------

-----------------
Issue type: Improvement
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Tue, 29 Nov 2011 10:47:59 +0000
-----------------

-----------------
Resolved at: Fri, 2 Dec 2011 15:31:00 +0000
-----------------

-----------------
Assigned to: Sylvain Lebresne
-----------------

-----------------
Description: 

During compaction, if shouldPurge == false, we don't do anything with the column family.
It is however ok to remove columns for with their container is deleted with a timestamp
greater than their own.
 

-----------------

-----------------
Comments: 

New Comment: 
gcBefore of MAX_VALUE means "collect <b>all</b> tombstones," don't you want MIN_VALUE
here?  And if so, it sounds like we should add a test that catches the difference. 


New Comment: 
You're right, I meant MIN_VALUE. Patch updated. Turns out I was a bit quick and my
previous patch wasn't passing all unit tests because we already have a test that verify
that we don't purge tombstones when it shouldn't. As for testing this patch, it's actually
tricky because normal query already remove columns that are shadowed by a tombstones,
making it hard to test. 


New Comment: 
Taking a step back...  what about LCR and EchoedRow?  Is it worth doing this if it's only
a "sometimes" behavior? 


New Comment: 
It is definitively only an optimization, which LCR does use because it calls
Precompacted.removeDeletedAndOldShards, but not EchoedRow indeed. And even if not a life
changer, it's still an optimization. But I would be very fine with putting this in trunk
only if we don't want to take any risks. 


New Comment: 
+1 trunk only. 


New Comment: 
Committed (trunk only) 


