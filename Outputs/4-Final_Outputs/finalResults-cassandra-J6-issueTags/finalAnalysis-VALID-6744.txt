Pattern changes caused by commit: 4e2e547d2e4cee403a4ff68a86f52a7cf898f6ef

From: Decorator-2
To:   Decorator-1

From: Flyweight-2
To:   Flyweight-1

From: Mediator-3
To:   Mediator-1

From: Template Method-3
To:   Template Method-2


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-6744.txt 

commit 4e2e547d2e4cee403a4ff68a86f52a7cf898f6ef
Author: Jonathan Ellis <jbellis@apache.org>

    remove [Freeable]Memory finalizers
    patch by Marcus Eriksson; reviewed by jbellis for CASSANDRA-4222



==================================
 Issue CASSANDRA-4222 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-4222] Improve serializing off-heap cache by not using finalizers
-----------------

-----------------
Summary: Improve serializing off-heap cache by not using finalizers
-----------------

-----------------
Issue type: Improvement
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Fri, 4 May 2012 19:49:20 +0000
-----------------

-----------------
Resolved at: Fri, 4 May 2012 23:11:32 +0000
-----------------

-----------------
Assigned to: Marcus Eriksson
-----------------

-----------------
Description: 

We have a cluster that takes alot of reads and we have some issues with the off-heap
caching, seeing several G of Finalizer objects on the heap

My conclusion is that the
finalizer thread is too slow to run the finalize method on the FreeableMemory (and Memory)
objects.

Simply removing the finalize() methods improves performance <em>alot</em> (using
finalizers is 50% slower in my micro benchmarks) and does not leak memory during "normal"
use as far as i can see

im not sure about the implications for other use cases though
 

-----------------

-----------------
Comments: 

New Comment: 
it shouldnt leak memory right? given that the cache eviction listener in SerializingCache
unreferences everything that gets evicted from the cache 


