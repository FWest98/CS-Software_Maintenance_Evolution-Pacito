Pattern changes caused by commit: f6937766a283389a28ddddb5e6320cac9b605a8b

From: Decorator-1
To:   Decorator-0

From: Flyweight-4
To:   Flyweight-5

From: Strategy-1
To:   Strategy-0


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-4785.txt 

commit f6937766a283389a28ddddb5e6320cac9b605a8b
Author: Sylvain Lebresne <slebresne@apache.org>

    Don't try to build secondary indexes when there is none
    patch by slebresne; reviewed by jbellis for CASSANDRA-3123



==================================
 Issue CASSANDRA-3123 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-3123] Don't try to build secondary indexes when there is none
-----------------

-----------------
Summary: Don't try to build secondary indexes when there is none
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Fri, 2 Sep 2011 12:01:58 +0000
-----------------

-----------------
Resolved at: Fri, 2 Sep 2011 17:20:56 +0000
-----------------

-----------------
Assigned to: Sylvain Lebresne
-----------------

-----------------
Description: 

buildSecondaryIndexes() is sometimes called without checking the cfs has secondary
indexes. Has a result, it prints a useless message and will trigger a bunch of useless
action (among which, a full scan of the indexed column family). This is not a huge problem
in 0.8 because only the fairly new loadNewSSTables() call does this (which doesn't mean we
should fix it). But in trunk, it does this after every streamIn session. 
 

-----------------

-----------------
Comments: 

New Comment: 
Attaching patch against 0.8. It makes buildSecondaryIndexes just return if there is no
indexed columns. 


New Comment: 
If we're going to change to relying on the build method to recognize it was asked to
perform a no-op and bail early, we should call it "maybeBuild..." or similar and add
javadoc so it's clear that it might be a no-op. 


New Comment: 
Updated patch with proposed changes 


New Comment: 
+11111111 


New Comment: 
Committed, thanks 


