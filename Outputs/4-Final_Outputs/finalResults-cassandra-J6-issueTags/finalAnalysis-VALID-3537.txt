Pattern changes caused by commit: 4ef269d017db15ddf83466fa71e2bdb35ee98ab5

From: Abstract Factory-3
To:   Abstract Factory-2

From: Factory Method-3
To:   Factory Method-2


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-3537.txt 

commit 4ef269d017db15ddf83466fa71e2bdb35ee98ab5
Author: Jonathan Ellis <jbellis@apache.org>

    add memtable_flush_queue_size defaulting to 4
    patch by jbellis; reviewed by brandonwilliams for CASSANDRA-2333



==================================
 Issue CASSANDRA-2333 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-2333] Clean up thread pool and queue sizes
-----------------

-----------------
Summary: Clean up thread pool and queue sizes
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Tue, 15 Mar 2011 18:11:38 +0000
-----------------

-----------------
Resolved at: Wed, 23 Mar 2011 16:22:41 +0000
-----------------

-----------------
Assigned to: Jonathan Ellis
-----------------

-----------------
Description: 

Most of Cassandra assumes that ThreadPoolExecutor handles tasks by starting with Core
threads, adding threads up to Max as tasks arrive, then queuing any additional.  This is
not correct:
<div class="preformatted panel" style="border-width: 1px;"><div
class="preformattedContent panelContent"><pre>    If fewer than corePoolSize threads are
running, the Executor always prefers adding a new thread rather than queuing.    If
corePoolSize or more threads are running, the Executor always prefers queuing a request
rather than adding a new thread.    If a request cannot be queued, a new thread is created
unless this would exceed maximumPoolSize, in which case, the task will be
rejected.</pre></div></div>
<a href="https://issues.apache.org/jira/browse/CASSANDRA-2178"
title="Memtable Flush writers doesn&#39;t actually flush in parallel" class="issue-link"
data-issue-key="CASSANDRA-2178"><del>CASSANDRA-2178</del></a> fixed this in one place but
made it worse by default since most people run with a single data dir, meaning as soon as
you have multiple CFs flushing (or a single one with indexes) then you will start blocking
writes.
 

-----------------

-----------------
Comments: 

New Comment: 
Patch to remove use of maximumpoolsize in favor of core size + timing out core threads. 
Also adds memtable_flush_queue_size configuration directive, defaulting to 4. 


New Comment: 
+1, increased flush queue size is enough to prevent blocking writes at all with stress and
an index. 


