Pattern changes caused by commit: 17d271b3f730b303ab1b358c5e56d2d00db43676

From: Facade-2
To:   Facade-3


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-1338.txt 

commit 17d271b3f730b303ab1b358c5e56d2d00db43676
Author: Trustin Lee <trustin@apache.org>

    Fixed issue: DIRMINA-533 - StackOverflowError on IoSession MBean invocation.
    * Fixed IoSessionMBean.invoke0() to call super.invoke0() instead of super.invoke()



==================================
 Issue DIRMINA-533 Description 
=======================================

Project: MINA
-----------------

-----------------
Title: [DIRMINA-533] NPE in OrderedThreadPoolExecutor and UnorderedThreadPoolExecutor
-----------------

-----------------
Summary: NPE in OrderedThreadPoolExecutor and UnorderedThreadPoolExecutor
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Closed
-----------------

-----------------
Created at: Wed, 20 Feb 2008 11:43:44 +0000
-----------------

-----------------
Resolved at: Wed, 20 Feb 2008 11:45:40 +0000
-----------------

-----------------
Assigned to: Trustin Lee
-----------------

-----------------
Description: 

Quoted from the mailing list:

2008-02-20 (수), 20:36 +0900, 이희승 (Trustin Lee)
쓰시길:<br/>&gt; 2008-02-20 (수), 08:23 +0100, Niklas Therning 쓰시길:<br/>&gt; &gt; Wilson Yeung
wrote:<br/>&gt; &gt; &gt; After sending a bunch of UDP datagrams, sleep for 30 seconds,
then<br/>&gt; &gt; &gt; this gets printed to console:<br/>&gt; &gt; &gt;<br/>&gt; &gt;
&gt;      <span class="error">&#91;java&#93;</span> Exception in thread "pool-1-thread-1"
java.lang.NullPointerException<br/>&gt; &gt; &gt;      <span
class="error">&#91;java&#93;</span>       at<br/>&gt; &gt; &gt;
org.apache.mina.filter.executor.OrderedThreadPoolExecutor.getSessionBuffer(OrderedThreadPoolExecutor.java:447)<br/>&gt;
&gt; &gt;      <span class="error">&#91;java&#93;</span>       at<br/>&gt; &gt; &gt;
org.apache.mina.filter.executor.OrderedThreadPoolExecutor.access$900(OrderedThreadPoolExecutor.java:52)<br/>&gt;
&gt; &gt;      <span class="error">&#91;java&#93;</span>       at<br/>&gt; &gt; &gt;
org.apache.mina.filter.executor.OrderedThreadPoolExecutor$Worker.run(OrderedThreadPoolExecutor.java:492)<br/>&gt;
&gt; &gt;      <span class="error">&#91;java&#93;</span>       at
java.lang.Thread.run(Thread.java:613)<br/>&gt; &gt; &gt;<br/>&gt; &gt; &gt; And then no
more messages are ever sent despite how I might try.<br/>&gt; &gt; &gt;<br/>&gt; &gt; &gt;
If I modify OrderedThreadPoolExecutor like so:<br/>&gt; &gt; &gt;<br/>&gt; &gt; &gt;
clara:executor wilson$ svn diff OrderedThreadPoolExecutor.java<br/>&gt; &gt; &gt; Index:
OrderedThreadPoolExecutor.java<br/>&gt; &gt; &gt;
===================================================================<br/>&gt; &gt; &gt;
&#8212; OrderedThreadPoolExecutor.java        (revision 627903)<br/>&gt; &gt; &gt; +++
OrderedThreadPoolExecutor.java        (working copy)<br/>&gt; &gt; &gt; @@ -489,7 +489,9
@@<br/>&gt; &gt; &gt;                      }<br/>&gt; &gt; &gt;<br/>&gt; &gt; &gt;        
             try {<br/>&gt; &gt; &gt; -                       
runTasks(getSessionBuffer(session));<br/>&gt; &gt; &gt; +                       if
(session != null) 
{&gt; &gt; &gt; +                           
runTasks(getSessionBuffer(session));&gt; &gt; &gt; +                        }
&gt; &gt;
&gt;                      } finally 
{&gt; &gt; &gt;                         
idleWorkers.incrementAndGet();&gt; &gt; &gt;                      }
&gt; &gt;
&gt;<br/>&gt; &gt; &gt; Then all is well.  Any ideas?  Am I abusing Mina, or is it an
honest<br/>&gt; &gt; &gt; to goodness Mina bug?<br/>&gt; &gt; &gt;<br/>&gt; &gt; &gt;
Wilson<br/>&gt; &gt; &gt;   <br/>&gt; &gt; <br/>&gt; &gt; Do you have a test case which
triggers this problem? You should open up <br/>&gt; &gt; a JIRA issue and attach your test
case and we will have a look at it.<br/>&gt; <br/>&gt; The stack trace Wilson provided is
very weird.  According to the trace,<br/>&gt; it seems like
OrderedThreadPoolExecutor.getSessionBuffer() throws a NPE<br/>&gt; because the specified
session is null.  The specified session is get<br/>&gt; from IoEvent object.  Now if you
look into the IoEvent class, its<br/>&gt; constructor throws NPE if the specified session
is null.  This means<br/>&gt; that the session parameter that is passed to<br/>&gt;
OrderedThreadPoolExecutor.getSessionBuffer() cannot be null at all.<br/>&gt; <br/>&gt;
So.. any clue? <img class="emoticon"
src="https://issues.apache.org/jira/images/icons/emoticons/sad.png" height="16" width="16"
align="absmiddle" alt="" border="0"/>

Ugh... my reasoning was wrong. 
It's<br/>OrderedThreadPoolExecutor.fetchSession() that returns null, and
it's<br/>possible.  Wilson's patch looks reasonable.  Let me fix it soon...
 

-----------------

-----------------
Comments: 

