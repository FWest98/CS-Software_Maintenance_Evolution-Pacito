Pattern changes caused by commit: 02e2624c0adb669647525fab51d13d88b39221be

From: Proxy-1
To:   Proxy-0


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-1304.txt 

commit 02e2624c0adb669647525fab51d13d88b39221be
Author: Mark Webb <mwebb@apache.org>

    Added granularity to the connection timeout.  The timeout was measured in seconds and is not measured in milliseconds.  Sangjin Lee provided a patch (DIRMINA-527) and I reviewed the patch.  The set/get ConnectionTimeout in AbstractPollingIoConnector that handled the seconds instead of milliseconds are being deprecated with a note to use milliseconds.  This makes sense to me and in my opinion does not take away from the robust set of methods for connectors.



==================================
 Issue DIRMINA-527 Description 
=======================================

Project: MINA
-----------------

-----------------
Title: [DIRMINA-527] should be able to set connect timeout in milliseconds
-----------------

-----------------
Summary: should be able to set connect timeout in milliseconds
-----------------

-----------------
Issue type: Improvement
-----------------

-----------------
Current status: Closed
-----------------

-----------------
Created at: Tue, 5 Feb 2008 19:46:11 +0000
-----------------

-----------------
Resolved at: Tue, 11 Mar 2008 02:29:57 +0000
-----------------

-----------------
Assigned to: Mark Webb
-----------------

-----------------
Description: 

Currently, IoConnector allows setting connect timeouts only in seconds.  The minimum
value of allowed connect timeout is 1 second.  There are cases where one needs to have a
shorter connect timeout than 1 second and will finer granularity than seconds.

I suggest
introducing the ability to set connect timeout in milliseconds and deprecating the
getter/setter in seconds in favor of the ms getter/setter.

See the discussion thread at
<a href="http://www.nabble.com/connect-timeout-to15281787s16868.html"
class="external-link"
rel="nofollow">http://www.nabble.com/connect-timeout-to15281787s16868.html</a>.
 

-----------------

-----------------
Comments: 

New Comment: 
A proposed patch (based on the trunk).<ul class="alternate" type="square">	<li>Introduces
IoConnector.setConnectTimeoutMillis(), and deprecates
getConnectTimeout()/setConnectTimeout().</li>	<li>Adjust the select timeout to be the
smaller of the connectTimeout() or 1 second.</li></ul>Please review the changes, and
accept them if you guys are OK with it.  I'd also like to see the changes propagated to
1.1.x (and 1.0.x too?).  Do we need separate JIRA issues for them?Thanks,<br/>Sangjin 


New Comment: 
The API for 1.0/1.1 has been frozen. Since this patch introduces changes in the API it
should only go into trunk. Please, anyone, correct me if I'm wrong.BTW, the patch looks
great! One tiny detail, I think the coding conventions we're using in MINA mandates spaces
around operators. E.g. 60*1000L =&gt; 60 * 1000L. See <a
href="http://mina.apache.org/developer-guide.html#DeveloperGuide-CodingConvention"
class="external-link"
rel="nofollow">http://mina.apache.org/developer-guide.html#DeveloperGuide-CodingConvention</a>
for more info. 


New Comment: 
Hmm...  Is there any hope for changes in 1.1.x?  It would be adding new methods, not
removing existing ones, so backward compatibility is there... 


New Comment: 
The ruling seems to be "no API changes whatsoever in 1.1.x". See <a
href="https://issues.apache.org/jira/browse/DIRMINA-397?focusedCommentId=12517492#action_12517492"
class="external-link"
rel="nofollow">https://issues.apache.org/jira/browse/DIRMINA-397?focusedCommentId=12517492#action_12517492</a>
for a precedent <img class="emoticon"
src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16"
width="16" align="absmiddle" alt="" border="0"/> 


New Comment: 
I have applied the patch associated with this issue.  I will go ahead and mark this issue
as fixed. 


New Comment: 
I applied the associated patch after reviewing the patch.  This only adds to the precision
of the timeout.  The methods that dealt with getting and setting the connection timeout in
seconds have been deprecated and a note in the javadoc says that the millisecond-based
methods should be used. 


New Comment: 
We have a little bit more to do <img class="emoticon"
src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16"
width="16" align="absmiddle" alt="" border="0"/><a
href="http://mina.markmail.org/search/?q=connect%20timeout#query:connect%20timeout+page:1+mid:wp3ewpnfew7msthj+state:results"
class="external-link"
rel="nofollow">http://mina.markmail.org/search/?q=connect%20timeout#query:connect%20timeout+page:1+mid:wp3ewpnfew7msthj+state:results</a> 


New Comment: 
What is the purpose of the MINIMUM_CONNECT_TIMEOUT field?  If it can be changed via a call
to setConnectTimeoutMillis(long), then why have it?  Trustin mentions in the TODO:"Make
this configurable and automatically adjusted if the timeout a user specified is smaller
than the current minimum connect timeout."So if the minimum connection timeout and
connection timeout can both be configured, why not just have one field?  The only way this
makes sense to me is that if  you try and set the connection timeout to be lower than the
minimum we should throw an exception. 


New Comment: 
For example, we could start from 1000ms selector timeout at the first time.  If a user
specifies a connect timeout value smaller than 1000ms, we can adjust the 1000ms to the
connect timeout value specified (or its half).  By doing so, we can minimize unnecessary
CPU consumption, because most users will use the timeout value of 60 seconds or something
similar to that.  If a user wants a millisecond-level timeout (e.g. 9ms), then he will pay
for what he or she wants, but it's not the case for most people. 


New Comment: 
I have checked in an update that makes the minimum timeout field configurable. 


New Comment: 
checked in an update that makes the minimum connection timeout field configurable 


New Comment: 
Looks very good in its implementation!However, I think the property name
'minimumConnectTimeout' doesn't represent what it is actually.  What do you think about
renaming it to connectTimeoutCheckInterval or something similar?  Do you have any idea? 


