Pattern changes caused by commit: 73cc4a1404c9e295c849f5c921c849d387dd0ae2

From: Proxy-0
To:   Proxy-1


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-1322.txt 

commit 73cc4a1404c9e295c849f5c921c849d387dd0ae2
Author: Trustin Lee <trustin@apache.org>

    Resolved issue: DIRMINA-547 - Reduce unnecessary thread creation and destruction caused by IdleStatusChecker
    * IdleStatusChecker is not a singleton anymore
    * One AbstractIoService has one IdleStatusChecker thread
    * An IdleStatusChecker thread starts automatically when a new service is created, and stops when the service is disposed.



==================================
 Issue DIRMINA-547 Description 
=======================================

Project: MINA
-----------------

-----------------
Title: [DIRMINA-547] Reduce unnecessary thread creation and destruction caused by IdleStatusChecker
-----------------

-----------------
Summary: Reduce unnecessary thread creation and destruction caused by IdleStatusChecker
-----------------

-----------------
Issue type: Improvement
-----------------

-----------------
Current status: Closed
-----------------

-----------------
Created at: Tue, 11 Mar 2008 14:00:51 +0000
-----------------

-----------------
Resolved at: Tue, 11 Mar 2008 14:02:35 +0000
-----------------

-----------------
Assigned to: Trustin Lee
-----------------

-----------------
Description: 

When there is only one service and the service is being activated and deactivated
repetitively, ScheduledThreadPoolExecutor keeps being created and destructed by
IdleStatusChecker, which causes big overhead.  This becomes a real problem when a user
uses a Connector to maintain just one connection, which is opened and closed very
frequently, because the activation and the deactivation of the service follows the
creation and the destruction of a session.

The solution is make the life cycle of
IdleStatusChecker thread to follow the life cycle of respective services.  For now,
IdleStatusChecker is a singleton and manages threads by itself.  By moving all thread
management code to AbstractIoService, IdleStatusChecker doesn't need to start and stop
thread excessively but AbstractIoService will stop the thread when dispose() is called
explicitly by user, like other worker threads.
 

-----------------

-----------------
Comments: 

