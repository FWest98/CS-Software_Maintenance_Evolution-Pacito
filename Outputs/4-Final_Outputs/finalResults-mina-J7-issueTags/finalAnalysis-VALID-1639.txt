Pattern changes caused by commit: a85b16cd2e8e64e59225a1b5912f54546bf15963

From: Facade-3
To:   Facade-5

From: Proxy-0
To:   Proxy-1


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-1639.txt 

commit a85b16cd2e8e64e59225a1b5912f54546bf15963
Author: Julien Vermillard <jvermillard@apache.org>

    DIRMINA-646 fix, was writting the full buffer content in place of just the needed bytes (from position to position+written)



==================================
 Issue DIRMINA-646 Description 
=======================================

Project: MINA
-----------------

-----------------
Title: [DIRMINA-646] More than required data sent on serial port through serial transport
-----------------

-----------------
Summary: More than required data sent on serial port through serial transport
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Closed
-----------------

-----------------
Created at: Thu, 11 Dec 2008 06:52:53 +0000
-----------------

-----------------
Resolved at: Mon, 9 Mar 2009 09:20:30 +0000
-----------------

-----------------
Assigned to: Julien Vermillard
-----------------

-----------------
Description: 

The serial transport sends more then required data when IoSession.write() is called with
the IoBuffer. The following code is the basic usage of serial
transport:

-----------------------------------------------------------------------<br/>SerialAddress
a = new SerialAddress("COM1", 115200, SerialAddress.DataBits.DATABITS_8,
SerialAddress.StopBits.BITS_1, SerialAddress.Parity.NONE,
SerialAddress.FlowControl.NONE);<br/>		IoConnector c = new
SerialConnector();<br/>		c.setHandler(this);<br/>		ConnectFuture cf =
c.connect(a);<br/>		cf.awaitUninterruptibly();

		System.out.println("Connection = " +
cf.isConnected());

		if (cf.isConnected())
		{			IoSession s =
cf.getSession();			IoBuffer b = IoBuffer.allocate(32);			b.put(new String("this is a test
message").getBytes());			b.flip();			WriteFuture wf =
s.write(b);			wf.awaitUninterruptibly(5, TimeUnit.SECONDS);			System.out.println("Message
Written = " +
wf.isWritten());		}
-----------------------------------------------------------------------

The
message &lt;code&gt;this is a test message&lt;/code&gt; should have been sent on the
serial port COM1. But the actual output received is (output captured through HDD Free
Serial Port Monitor)
:

-----------------------------------------------------------------------<br/>74 68 69 73
20 69 73 20 61 20 74 65 73 74 20 6D   this is a test m<br/> 65 73 73 61 67 65 00 00 00 00
00 00 00 00 00 00  
essage..........<br/>-----------------------------------------------------------------------

I
have looked into the code, and the reason appears to be the following statement on line #
184 in the file
SerialSessionImpl.java.

-----------------------------------------------------------------------<br/>outputStream.write(buf.array());<br/>-----------------------------------------------------------------------

Since
buf.array() returns the complete array in the IoBuffer, regardless of the actual count of
valid data, so all bytes are sent. I changed this statement
to:

-----------------------------------------------------------------------<br/>outputStream.write(buf.array(),
buf.position(),
writtenBytes);<br/>-----------------------------------------------------------------------

to
ensure that only the required bytes starting from the first unread position is sent on the
serial port. This works so far for all my cases.

Thanks,<br/>Akbar.
 

-----------------

-----------------
Comments: 

