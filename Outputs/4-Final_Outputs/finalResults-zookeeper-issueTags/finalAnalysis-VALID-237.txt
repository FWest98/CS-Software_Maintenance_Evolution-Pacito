Pattern changes caused by commit: ea54ef0825c6670cc6714e749d391f477420b118

From: Decorator-1
To:   Decorator-2

From: Proxy-0
To:   Proxy-1


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-237.txt 

commit ea54ef0825c6670cc6714e749d391f477420b118
Author: Flavio Paiva Junqueira <fpj@apache.org>

    ZOOKEEPER-136.patch



==================================
 Issue ZOOKEEPER-136 Description 
=======================================

Project: ZooKeeper
-----------------

-----------------
Title: [ZOOKEEPER-136] sync causes hang in all followers of quorum
-----------------

-----------------
Summary: sync causes hang in all followers of quorum
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Closed
-----------------

-----------------
Created at: Fri, 5 Sep 2008 18:27:46 +0000
-----------------

-----------------
Resolved at: Fri, 3 Oct 2008 13:12:35 +0000
-----------------

-----------------
Assigned to: Benjamin Reed
-----------------

-----------------
Description: 

The attached test causes all of the followers of a quorum to hang. Leader continues to
function correctly.
 

-----------------

-----------------
Comments: 

New Comment: 
The TestSync test fails on my ubuntu 1core laptop.the test basically:starts a 5 server
quroumstarts a client against each server (so 5 clients)each client does the following
(async ops) on a node it owns:<br/>1) create node<br/>2) sync node<br/>3) setdata
node<br/>4) sync node<br/>5) delete node<br/>6) sync node<br/>7) wait for all results of
ops 1-6 to completeeach client does this 100 times in a loop then exitsI am seeing that in
most cases the client attached to the leader runs to <br/>completion successfully.However
the clients attached to the followers stall out (eventually TIMEOUT) waiting for the 1)
operation to return. 


New Comment: 
look at time index 2008-09-05 10:53:03,911 


New Comment: 
There are two problems in the code. First, the pendingSyncs hashtable assumes there will
only be one pending request for a change operation. This is not a valid assumption. The
syncHandler also assumes a single outstanding request for a given session since it removes
the session handler from the table.I think a fix needs to get rid of both hashtables since
it is very hard to do reliably. Instead we should attach information to Request to hang
triggers to a list of SyncRequests. We should also tuck away the FollowerHandle to talk to
in a sync specific subclass of Request.I tried doing the above and it worked out pretty
well from a code understandability sense, but I still working on making test cases pass. 


New Comment: 
Ben please use this updated patch file for the basis of your fix.This patch includes
everything from the last patch except:1) patched against latest svn head<br/>2) cleans up
a number of LOG messages, in particular adds a number of DEBUG level logs that help in
tracking down issues when things go wrong. 


New Comment: 
Ben is working on the fix. 


New Comment: 
This patch includes the tests that Pat wrote and the fix for the problem.The fix involves
three things:1) The leader creates a FollowerSyncRequest that contains a reference to the
FollowerHandler doing the sync. This allows us to get rid of the handler hashmap.2) The
pendingSyncs uses a List to track multiple syncs per change3) CommitRequest processor was
changed to take a boolean to flag whether to wait for syncs to come from the leader. 


New Comment: 
Looks like some files are missing from the patch. In particular SyncTest.java, perhaps you
need to svn add (them)? 


New Comment: 
Added missing SyncTest. 


New Comment: 
This patch is great! It adds a FollowerSyncRequest class to represent in-flight sync
operations, and it cleans up a bit the logic on the leader side. Now, there are several 
modifications related to debugging messages, which don't seem to be always related to the
problem is this jira. This is fine, though. I just commented because they make the patch
look a lot more complex than it really is.Something I'd like to understand is the
functionality of matchSyncs. Why do we need a boolean flag to decide whether to process or
not? Is this to differentiate the processing of sync on a leader and on a follower? In any
case, it is probably a good idea to insert a comment  explaining.The comment that leads
the code of SyncTest.java seems to be copied from elsewhere. Should we remove it and
replace with a more representative comment? 


New Comment: 
Fixed the comments suggested by Flavio. Updated the patch to trunk. 


New Comment: 
+1, the patch is good. I have committed already. 


New Comment: 
Integrated in ZooKeeper-trunk #103 (See <a
href="http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/103/"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/103/</a>)<br/>   
.patch 


