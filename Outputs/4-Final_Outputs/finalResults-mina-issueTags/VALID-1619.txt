Pattern changes caused by commit: 2b6236119c785258eaf18636a70547d433e899df

From: Facade-3
To:   Facade-4


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-1619.txt 

commit 2b6236119c785258eaf18636a70547d433e899df
Author: Edouard De Oliveira <edeoliveira@apache.org>

    Added lots of javadoc & fix for DIRMINA-652



==================================
 Issue DIRMINA-652 Description 
=======================================

Project: MINA
-----------------

-----------------
Title: [DIRMINA-652] Socks5LogicHandler.encodeProxyRequestPacket(final SocksProxyRequest request) should check that the result of request.getEndpointAddress() is resolved before using it 
-----------------

-----------------
Summary: Socks5LogicHandler.encodeProxyRequestPacket(final SocksProxyRequest request) should check that the result of request.getEndpointAddress() is resolved before using it 
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Closed
-----------------

-----------------
Created at: Mon, 22 Dec 2008 14:46:33 +0000
-----------------

-----------------
Resolved at: Wed, 24 Dec 2008 01:29:07 +0000
-----------------

-----------------
Assigned to: Edouard De Oliveira
-----------------

-----------------
Description: 

Depending on what is going on in layers
above this one, the InetSocketAddress
returned by request.getEndpointAddress()
could be unresolved, in which case the
hostname should be used.

private
IoBuffer encodeProxyRequestPacket(final
SocksProxyRequest request)<br/>         
  throws UnsupportedEncodingException
{<br/>        int len = 6;<br/>       
byte[] host = request.getHost() != null
? request.getHost().getBytes(<br/>      
         "ASCII") : null;

       
InetSocketAddress adr =
request.getEndpointAddress();<br/>      
 byte addressType = 0;

        if (adr
!= null &amp;&amp; !adr.isUnresolved())
{<br/>            if (adr.getAddress()
instanceof Inet6Address) 
{             
  len += 16;                addressType
= SocksProxyConstants.IPV6_ADDRESS_TYPE;
           }
 else if (adr.getAddress()
instanceof Inet4Address) 
{             
  len += 4;                addressType =
SocksProxyConstants.IPV4_ADDRESS_TYPE;  
         }
        } else 
{           
len += 1 + host.length;           
addressType =
SocksProxyConstants.DOMAIN_NAME_ADDRESS_TYPE;
       }
        IoBuffer buf =
IoBuffer.allocate(len);

       
buf.put(request.getProtocolVersion());<br/>
      
buf.put(request.getCommandCode());<br/> 
      buf.put((byte) 0x00); //
Reserved<br/>       
buf.put(addressType);

        if
(addressType ==
SocksProxyConstants.DOMAIN_NAME_ADDRESS_TYPE)

{            buf.put((byte)
host.length);            buf.put(host); 
      }
 else 
{           
buf.put(request.getIpAddress());       
}
        buf.put(request.getPort());

 
      return buf;<br/>    }
 
