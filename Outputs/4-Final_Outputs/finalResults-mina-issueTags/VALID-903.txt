Pattern changes caused by commit: 30a0b5dee0b00b4037b1c95d116f7b45f4af624d

From: Adapter-4
To:   Adapter-2

From: Facade-3
To:   Facade-4

From: Proxy-0
To:   Proxy-1


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-903.txt 

commit 30a0b5dee0b00b4037b1c95d116f7b45f4af624d
Author: Trustin Lee <trustin@apache.org>

    Related issue: DIRMINA-144 (Traffic shaping filter)
    * More precise traffic control by adjusting MaxReadBufferSize as soon as possible.



==================================
 Issue DIRMINA-144 Description 
=======================================

Project: MINA
-----------------

-----------------
Title: [DIRMINA-144] Traffic shaping filter
-----------------

-----------------
Summary: Traffic shaping filter
-----------------

-----------------
Issue type: New Feature
-----------------

-----------------
Current status: Closed
-----------------

-----------------
Created at: Mon, 12 Dec 2005 03:03:09 +0000
-----------------

-----------------
Resolved at: Wed, 14 Nov 2007 05:40:06 +0000
-----------------

-----------------
Assigned to: Trustin Lee
-----------------

-----------------
Description: 

MINA now has basic support for
suspending/resuming reads and writes on
an IoSession for all transport types. We
should use this feature to implement a
traffic shaping filter which lets the
user configure bandwidth limitations.
Both globally and for individual
sessions. Here are some configuration
options I can come to think
of:
<ul>	<li>Globally specify a maximum
data rate for individual sessions (e.g.
max 10 kb/s for all
sessions).</li>	<li>Specify a maximum
data rate on a per session basis (e.g.
max 1 Mb/s for a particular
session).</li>	<li>Specify a maximum
upper limit on the bandwidth used by all
sessions in total (e.g. all sessions
share a total of 10
Mb/s).</li>	<li>Configure different
traffic classes with different limits to
allow for high/low priority traffic and
partition sessions into these priority
classes.</li></ul>
I'm not sure how
advanced it would have to be so please
share your thoughts. Maybe point 1 and 2
would suffice? I think 3 and 4 add a lot
of complexity since they need some kind
of scheduling algorithm to provide
fairness between sessions.
 
