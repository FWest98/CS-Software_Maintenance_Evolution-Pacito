Pattern changes caused by commit: 6ac1e8b309fe3044f71197c58a0f09e07079fb01

From: Facade-4
To:   Facade-2


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-1309.txt 

commit 6ac1e8b309fe3044f71197c58a0f09e07079fb01
Author: Trustin Lee <trustin@apache.org>

    Fixed DIRMINA-542 (ArrayIndexOutOfBoundsException in CircularQueue.shrinkIfNeeded())
    * Added related test case
    * Made sure shrinkIfNeeded doesn't copy anything if empty



==================================
 Issue DIRMINA-542 Description 
=======================================

Project: MINA
-----------------

-----------------
Title: [DIRMINA-542] ArrayIndexOutOfBoundsException in CircularQueue.shrinkIfNeeded()
-----------------

-----------------
Summary: ArrayIndexOutOfBoundsException in CircularQueue.shrinkIfNeeded()
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Closed
-----------------

-----------------
Created at: Mon, 10 Mar 2008 06:32:12 +0000
-----------------

-----------------
Resolved at: Mon, 10 Mar 2008 06:33:35 +0000
-----------------

-----------------
Assigned to: Trustin Lee
-----------------

-----------------
Description: 

ArrayIndexOutOfBoundsException is raised by CircularQueue.shrinkIfNeeded() when the size
of the queue is 0:

java.lang.ArrayIndexOutOfBoundsException<br/>at
org.apache.mina.util.CircularQueue.shrinkIfNeeded(CircularQueue.java:233)<br/>at
org.apache.mina.util.CircularQueue.poll(CircularQueue.java:108)<br/>at
<br/>org.apache.mina.filter.codec.ProtocolCodecFilter$ProtocolDecoderOutputImpl.flush(ProtocolCodecFilter.java:375)<br/>at
<br/>org.apache.mina.filter.codec.ProtocolCodecFilter.messageReceived(ProtocolCodecFilter.java:187)<br/>at
<br/>org.apache.mina.common.DefaultIoFilterChain.callNextMessageReceived(DefaultIoFilterChain.java:401)<br/>at
<br/>org.apache.mina.common.DefaultIoFilterChain.access$1200(DefaultIoFilterChain.java:38)<br/>at
<br/>org.apache.mina.common.DefaultIoFilterChain$EntryImpl$1.messageReceived(DefaultIoFilterChain.java:820)<br/>at
<br/>org.apache.mina.common.DefaultIoFilterChain$HeadFilter.messageReceived(DefaultIoFilterChain.java:604)<br/>at
<br/>org.apache.mina.common.DefaultIoFilterChain.callNextMessageReceived(DefaultIoFilterChain.java:401)<br/>at
<br/>org.apache.mina.common.DefaultIoFilterChain.fireMessageReceived(DefaultIoFilterChain.java:395)<br/>at
<br/>org.apache.mina.common.AbstractPollingIoProcessor.read(AbstractPollingIoProcessor.java:425)<br/>at
<br/>org.apache.mina.common.AbstractPollingIoProcessor.process(AbstractPollingIoProcessor.java:387)<br/>at
<br/>org.apache.mina.common.AbstractPollingIoProcessor.process(AbstractPollingIoProcessor.java:379)<br/>at
<br/>org.apache.mina.common.AbstractPollingIoProcessor.access$400(AbstractPollingIoProcessor.java:43)<br/>at
<br/>org.apache.mina.common.AbstractPollingIoProcessor$Worker.run(AbstractPollingIoProcessor.java:676)<br/>at
org.apache.mina.util.NamePreservingRunnable.run(NamePreservingRunnable.java:51)<br/>at
<br/>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)<br/>at
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)<br/>at
java.lang.Thread.run(Thread.java:619)
 

-----------------

-----------------
Comments: 

New Comment: 
Fixed with reproducing test case. 


New Comment: 
I found that the test passes with the byte code generated by Eclipse Java Compiler but
fails with SUN Java Compiler.  CircularQueueTest fails randomly.  We cannot say that it's
a concurrency issue because the test runs in a single thread.  It looks definitely like a
JVM or compiler bug - probably SUN VM doesn't like the code SUN Java Compiler produced or
the byte code that SUN Java Compiler produced is wrong.Changing one field in CircularQueue
to be volatile works around the problem, but I didn't figure out why exactly it fixes the
problem - SUN JVM might be optimizing CircularQueue in a wrong way and the volatile field
might be preventing bad optimization. 


