Pattern changes caused by commit: 7bdc0e26883825ba54337620ae631a276f1b70ba

From: Adapter-4
To:   Adapter-2

From: Facade-5
To:   Facade-4

From: Flyweight-5
To:   Flyweight-4

From: Proxy-1
To:   Proxy-0


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-880.txt 

commit 7bdc0e26883825ba54337620ae631a276f1b70ba
Author: Trustin Lee <trustin@apache.org>

    Resolved issue: DIRMINA-249 (exceptionCaught() should provide more information)
    * Added WriteException which contains the list of the failed WriteRequests
    * All write-related exceptions extend WriteException now.
    * Added NothingWrittenException
    * Added WriteToClosedSessionException
    * WriteFuture also provides 'exception' property to tell the cause of the write failure; all failed WriteFutures must provide a related exception now.
    * All queued write requests which couldn't be written out due to sudden disconnection are notified as an exceptionCaught event with WriteToClosedSessionException now.
    * Improved SslFilter to filter out WriteToClosedSessionException which contains a failed close_notify request.



==================================
 Issue DIRMINA-249 Description 
=======================================

Project: MINA
-----------------

-----------------
Title: [DIRMINA-249] exceptionCaught() should provide more information
-----------------

-----------------
Summary: exceptionCaught() should provide more information
-----------------

-----------------
Issue type: Improvement
-----------------

-----------------
Current status: Closed
-----------------

-----------------
Created at: Thu, 31 Aug 2006 06:20:13 +0000
-----------------

-----------------
Resolved at: Fri, 2 Nov 2007 12:00:23 +0000
-----------------

-----------------
Assigned to: Trustin Lee
-----------------

-----------------
Description: 

Currently if the application calls a
write() on MINA, it will get notified of
any exceptions via the exceptionCaught()
method.  The problem is that the
application does not have any
information as to what data could not be
written on the session.  To figure that
out, it either has to wait on the
WriteFuture or implement some state
mechanism within the IoSession.

Trustin
recommended that a WriteException could
be created, which could provide the
necessary information. It should have
the ByteBuffer for which the write()
failed.
 
