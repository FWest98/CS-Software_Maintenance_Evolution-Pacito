Pattern changes caused by commit: 7894f9e64c891257d3c9d15f9abaf5f2f072db6d

From: Mediator-1
To:   Mediator-0


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-418.txt 

commit 7894f9e64c891257d3c9d15f9abaf5f2f072db6d
Author: Douglass Cutting <cutting@apache.org>

    HDFS-892. Optionally use Avro reflection for Namenode RPC.



==================================
 Issue HDFS-892 Description 
=======================================

Project: Hadoop HDFS
-----------------

-----------------
Title: [HDFS-892] optionally use Avro for namenode RPC
-----------------

-----------------
Summary: optionally use Avro for namenode RPC
-----------------

-----------------
Issue type: Improvement
-----------------

-----------------
Current status: Closed
-----------------

-----------------
Created at: Mon, 11 Jan 2010 22:13:15 +0000
-----------------

-----------------
Resolved at: Wed, 24 Mar 2010 22:01:17 +0000
-----------------

-----------------
Assigned to: Doug Cutting
-----------------

-----------------
Description: 

It should be possible to configure HDFS so that Avro is used for RPCs to the namenode.
 

-----------------

-----------------
Comments: 

New Comment: 
This depends on AVRO-6486. 


New Comment: 
Here's a first version of this. Default behaviour is unchanged.  Passing
Ant<br/>-Dtest.hdfs.rpc.engine=org.apache.hadoop.ipc.AvroRpcEngine will cause Avro
reflection to be used on all NN protocols, and Avro-format RPC calls to be made over a
Hadoop RPC tunnel.  Some but not all tests yet pass in this configuration.  The primary
intent of this issue is to test that Avro reflect can correctly characterize all of the
Namenode's protocols. 


New Comment: 
Here's an updated patch.One can run tests using Avro serialization for RPC data by
specifying -Dtestdfs.rpc.engine=org.apache.hadoop.ipc.AvroRpcEngine.  Not all tests pass
yet with this setting.  I'll keep working on that, but I don't think that should block
eventual commit of this patch, as we won't switch RPC to use Avro serialization when this
is committed.  Rather, this patch is intended to enable developers to work towards that
goal without maintaining a separate branch.Changes in this patch include:<ul
class="alternate" type="square">	<li>permit Ivy to find unreleased artifacts in the local
Maven repository for non-Hadoop projects.  This will be important if/when Avro becomes a
TLP but could perhaps be a separate issue if folks prefer.</li>	<li>renames
DatanodeProtocol#register to be registerDatanode, since register is overloaded in
NameNodeProtocol and NameNode implements both protocols.  Avro does not permit
overloading, instead permitting different method signatures for different revisions of the
protocol.</li>	<li>adds an @Union declaration to DatanodeCommand, listing its subclasses,
so that interfaces that reference can know what types they'll need to
serialize.</li>	<li>adds a NamenodeProtocols interface that extends all of the protocols
that the Namenode implements, so that we can refer to this as an RPC interface
independently of all of the other methods in Namenode.</li>	<li>declares some transient
fields as such</li>	<li>uses @Union to declare that some parameters and return types may
sometimes be null</li>	<li>changes a few things that are sometimes null but not seeingly
for any good reason so that they instead have a non-null default value.</li></ul>This is
still a work in progress. 


New Comment: 
This patch now depends on <a href="https://issues.apache.org/jira/browse/AVRO-432"
title="add @Nullable annotation to specify union with null" class="issue-link"
data-issue-key="AVRO-432"><del>AVRO-432</del></a>. 


New Comment: 
Here's a new, still preliminary, version that uses the @Nullable annotation from <a
href="https://issues.apache.org/jira/browse/AVRO-433" title="reflect RPC exceptions
broken" class="issue-link" data-issue-key="AVRO-433"><del>AVRO-433</del></a> and that
passes a few more tests when AvroRpcEngine is enabled. 


New Comment: 
Now that Avro 1.3.1 is available this should pass Hudson's tests.This annotates &amp;
slightly modifies namenode RPC protocols so that Avro reflection can accurately induce an
RPC protocol.  A test is added that only tests basic operations using Avro.Default runtime
behavior of HDFS is not altered by this patch. 


New Comment: 
-1 overall.  Here are the results of testing the latest attachment <br/>  <a
href="http://issues.apache.org/jira/secure/attachment/12439528/HDFS-892.patch"
class="external-link"
rel="nofollow">http://issues.apache.org/jira/secure/attachment/12439528/HDFS-892.patch</a><br/>
 against trunk revision 925509.    +1 @author.  The patch does not contain any @author
tags.    +1 tests included.  The patch appears to include 9 new or modified tests.    +1
javadoc.  The javadoc tool did not generate any warning messages.    -1 javac.  The
applied patch generated 25 javac compiler warnings (more than the trunk's current 24
warnings).    +1 findbugs.  The patch does not introduce any new Findbugs warnings.    +1
release audit.  The applied patch does not increase the total number of release audit
warnings.    -1 core tests.  The patch failed core unit tests.    -1 contrib tests.  The
patch failed contrib unit tests.Test results: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h2.grid.sp2.yahoo.net/132/testReport/"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h2.grid.sp2.yahoo.net/132/testReport/</a><br/>Findbugs
warnings: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h2.grid.sp2.yahoo.net/132/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h2.grid.sp2.yahoo.net/132/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/>Checkstyle
results: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h2.grid.sp2.yahoo.net/132/artifact/trunk/build/test/checkstyle-errors.html"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h2.grid.sp2.yahoo.net/132/artifact/trunk/build/test/checkstyle-errors.html</a><br/>Console
output: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h2.grid.sp2.yahoo.net/132/console"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h2.grid.sp2.yahoo.net/132/console</a>This
message is automatically generated. 


New Comment: 
Fixed the javac warning (something got deprecated since I first wrote the patch).I'm not
sure why tests failed.  The classpath seemed to be missing the hadoop-common jar? 


New Comment: 
-1 overall.  Here are the results of testing the latest attachment <br/>  <a
href="http://issues.apache.org/jira/secure/attachment/12439604/HDFS-892.patch"
class="external-link"
rel="nofollow">http://issues.apache.org/jira/secure/attachment/12439604/HDFS-892.patch</a><br/>
 against trunk revision 926469.    +1 @author.  The patch does not contain any @author
tags.    +1 tests included.  The patch appears to include 9 new or modified tests.    +1
javadoc.  The javadoc tool did not generate any warning messages.    +1 javac.  The
applied patch does not increase the total number of javac compiler warnings.    +1
findbugs.  The patch does not introduce any new Findbugs warnings.    +1 release audit. 
The applied patch does not increase the total number of release audit warnings.    -1 core
tests.  The patch failed core unit tests.    -1 contrib tests.  The patch failed contrib
unit tests.Test results: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/280/testReport/"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/280/testReport/</a><br/>Findbugs
warnings: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/280/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/280/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/>Checkstyle
results: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/280/artifact/trunk/build/test/checkstyle-errors.html"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/280/artifact/trunk/build/test/checkstyle-errors.html</a><br/>Console
output: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/280/console"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/280/console</a>This
message is automatically generated. 


New Comment: 
Failure was in TestReadWhileWriting, which passes locally. 


New Comment: 
Patch looks mostly good.  Some comments:<ul class="alternate" type="square">	<li>It looks
like that all the changes are compatible changes except renaming register(..) to
registerDatanode(..) in DatanodeProtocol.  So the protocol version have to be
updated.</li></ul><ul class="alternate" type="square">	<li>Do we need a versionID for the
new NamenodeProtocols?</li></ul> 


New Comment: 
-1 overall.  Here are the results of testing the latest attachment <br/>  <a
href="http://issues.apache.org/jira/secure/attachment/12439604/HDFS-892.patch"
class="external-link"
rel="nofollow">http://issues.apache.org/jira/secure/attachment/12439604/HDFS-892.patch</a><br/>
 against trunk revision 926469.    +1 @author.  The patch does not contain any @author
tags.    +1 tests included.  The patch appears to include 9 new or modified tests.    +1
javadoc.  The javadoc tool did not generate any warning messages.    +1 javac.  The
applied patch does not increase the total number of javac compiler warnings.    +1
findbugs.  The patch does not introduce any new Findbugs warnings.    +1 release audit. 
The applied patch does not increase the total number of release audit warnings.    +1 core
tests.  The patch passed core unit tests.    -1 contrib tests.  The patch failed contrib
unit tests.Test results: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/281/testReport/"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/281/testReport/</a><br/>Findbugs
warnings: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/281/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/281/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/>Checkstyle
results: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/281/artifact/trunk/build/test/checkstyle-errors.html"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/281/artifact/trunk/build/test/checkstyle-errors.html</a><br/>Console
output: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/281/console"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/281/console</a>This
message is automatically generated. 


New Comment: 
&gt; all the changes are compatible changes except renaming register(..) to
registerDatanode(..) in DatanodeProtocol. So the protocol version have to be
updated.Thanks for catching that!  I've attached a new version that updates this.&gt; Do
we need a versionID for the new NamenodeProtocols?I don't think so, clients are not
permitted to use that interface.  NameNode's getProtocolVersion() implementation
dispatches depending on the client's protocol.  If a client tried to connect  using the
NamenodeProtocols interface, then that method will fail with "unknown protocol". 


New Comment: 
-1 overall.  Here are the results of testing the latest attachment <br/>  <a
href="http://issues.apache.org/jira/secure/attachment/12439681/HDFS-892.patch"
class="external-link"
rel="nofollow">http://issues.apache.org/jira/secure/attachment/12439681/HDFS-892.patch</a><br/>
 against trunk revision 926469.    +1 @author.  The patch does not contain any @author
tags.    +1 tests included.  The patch appears to include 9 new or modified tests.    +1
javadoc.  The javadoc tool did not generate any warning messages.    +1 javac.  The
applied patch does not increase the total number of javac compiler warnings.    +1
findbugs.  The patch does not introduce any new Findbugs warnings.    +1 release audit. 
The applied patch does not increase the total number of release audit warnings.    +1 core
tests.  The patch passed core unit tests.    -1 contrib tests.  The patch failed contrib
unit tests.Test results: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/282/testReport/"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/282/testReport/</a><br/>Findbugs
warnings: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/282/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/282/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/>Checkstyle
results: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/282/artifact/trunk/build/test/checkstyle-errors.html"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/282/artifact/trunk/build/test/checkstyle-errors.html</a><br/>Console
output: <a
href="http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/282/console"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/282/console</a>This
message is automatically generated. 


New Comment: 
+1 patch looks good.  Thanks, Doug. 


New Comment: 
I just committed this.  Thanks, Nicholas, for reviewing this! 


New Comment: 
Integrated in Hadoop-Hdfs-trunk-Commit #221 (See <a
href="http://hudson.zones.apache.org/hudson/job/Hadoop-Hdfs-trunk-Commit/221/"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hadoop-Hdfs-trunk-Commit/221/</a>)<br/>
   . Optionally use Avro reflection for Namenode RPC. 


New Comment: 
Integrated in Hadoop-Hdfs-trunk-Commit #222 (See <a
href="http://hudson.zones.apache.org/hudson/job/Hadoop-Hdfs-trunk-Commit/222/"
class="external-link"
rel="nofollow">http://hudson.zones.apache.org/hudson/job/Hadoop-Hdfs-trunk-Commit/222/</a>)<br/>
   .  Fix typo in initial CHANGES.txt message. 


New Comment: 
Just noticed that this added an Avro @Nullable. <br/>This means that Avro is not optional
as stated for this Jira. <br/>Shouldn't this have been @Nullable defined in common? 


New Comment: 
Avro was not intended to be optional at compile time, only at run time. 


New Comment: 
Actually I am okay with Hadoop completely depending on Avro once we write all the
protocols in Avro IDL (<a href="https://issues.apache.org/jira/browse/HDFS-1069"
title="Write HDFS wire protocols in AVRO IDL" class="issue-link"
data-issue-key="HDFS-1069"><del>HDFS-1069</del></a>). So I have no philosophical issues on
depending on Avro.<br/>BTW when we write the protocols in Avro IDL we will no longer need
the @Nullable; correct?Q. Doug, Any reason why you didn't define the @Nullable in common? 


New Comment: 
Doug, you defined:<br/>+public interface NamenodeProtocols<br/>+  extends
ClientProtocol,<br/>+          DatanodeProtocol,<br/>+          NamenodeProtocol,<br/>+   
      RefreshAuthorizationPolicyProtocol,<br/>+         
RefreshUserToGroupMappingsProtocol { ...}Will this prevent us from putting the
DatanodeProtocol in a different port?<br/>Was the super-interface added to avoid the
duplicate "versioned" interface? 


New Comment: 
&gt; Q. Doug, Any reason why you didn't define the @Nullable in common?That would only
make sense if the rest of Avro's reflect code were in common, since it's the reflect code
that interprets this annotation.  Hadoop is the primary user of Avro reflect, but I don't
think the only user.&gt; Will this prevent us from putting the DatanodeProtocol in a
different port?No more so than the current implementation does.  I don't know what the
plan is to implement multiple ports.  The obvious approach would be to run multiple
org.apache.hadoop.ipc.Servers, each serving different objects implementing different
protocols.  That would work fine with Avro too.&gt; Was the super-interface added to avoid
the duplicate "versioned" interface?No, the super-interface was added because Avro needs
to know the full set of methods that a given service implements.  But Namenode has lots of
other public methods that are not protocol methods, so we can't otherwise determine the
intended set of protocol methods. 


New Comment: 
&gt; Avro was not intended to be optional at compile time, only at run time. That seems
kind of pointless to me.  If you require it at compile time, why bother with making it
optional at run time? 


