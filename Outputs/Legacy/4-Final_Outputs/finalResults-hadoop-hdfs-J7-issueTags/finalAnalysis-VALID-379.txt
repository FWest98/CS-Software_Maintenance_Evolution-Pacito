Pattern changes caused by commit: 3da6edda389fb32131658c589f926db1c3bf6a67

From: Mediator-1
To:   Mediator-0


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-379.txt 

commit 3da6edda389fb32131658c589f926db1c3bf6a67
Author: Owen O'Malley <omalley@apache.org>

    HDFS-905. Use the new UserGroupInformation from HDFS-6299.
    (jghoman via omalley)



==================================
 Issue HDFS-6299 Description 
=======================================

Project: Hadoop HDFS
-----------------

-----------------
Title: [HDFS-6299] Protobuf for XAttr and client-side implementation 
-----------------

-----------------
Summary: Protobuf for XAttr and client-side implementation 
-----------------

-----------------
Issue type: Sub-task
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Tue, 29 Apr 2014 09:15:46 +0000
-----------------

-----------------
Resolved at: Wed, 30 Apr 2014 10:22:48 +0000
-----------------

-----------------
Assigned to: Yi Liu
-----------------

-----------------
Description: 

This JIRA tracks Protobuf for XAttr and implementation for XAttr interfaces in
DistributedFilesystem and DFSClient. 

With this JIRA we may just keep the dummy 
implemenation for Xattr API of ClientProtocol in NameNodeRpcServer
 

-----------------

-----------------
Comments: 

New Comment: 
The patch contains update for all review comments in <a
href="https://issues.apache.org/jira/browse/HDFS-6258" title="Namenode server-side storage
for XAttrs" class="issue-link" data-issue-key="HDFS-6258"><del>HDFS-6258</del></a> from <a
href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cnauroth"
class="user-hover" rel="cnauroth">Chris Nauroth</a> and <a
href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=umamaheswararao"
class="user-hover" rel="umamaheswararao">Uma Maheswara Rao G</a><br/>1. Keep one interface
for getXAttrs in ClientProtocol, and javadoc for interfaces.<br/>2. Appropriate line
breaks.<br/>3. change illegalArgumentException to HadoopIllegalArgumentException 


New Comment: 
Thanks a lot Yi for addressing all the feed back posted in <a
href="https://issues.apache.org/jira/browse/HDFS-6258" title="Namenode server-side storage
for XAttrs" class="issue-link" data-issue-key="HDFS-6258"><del>HDFS-6258</del></a>.
<br/>Current patch looks good to me.  Also this will allow us to start the FSnamesystem
side implementations.<br/>+1 


New Comment: 
I have just committed this to branch, Thanks a lot YiNote that I have changed "//TODO:
will be implemented as part of HDFS-xxxx" message with correct JIRA id <a
href="https://issues.apache.org/jira/browse/HDFS-6258" title="Namenode server-side storage
for XAttrs" class="issue-link" data-issue-key="HDFS-6258"><del>HDFS-6258</del></a>(which
is doing the fsnamesystem side impls) while committing. 


New Comment: 
sorry, my comments is later, <div class="code panel" style="border-width: 1px;"><div
class="codeContent panelContent"><pre class="code-java">+    <span
class="code-object">int</span> prefixIndex = name.indexOf(<span
class="code-quote">"."</span>);+    <span class="code-keyword">if</span> (prefixIndex ==
-1) {+      <span class="code-keyword">throw</span> <span class="code-keyword">new</span>
HadoopIllegalArgumentException(<span class="code-quote">"XAttr name must be prefixed
with"</span> ++          <span class="code-quote">" user/trusted/security/system which
followed by <span class="code-quote">'.'</span>"</span>);+    } <span
class="code-keyword">else</span> <span class="code-keyword">if</span> (prefixIndex ==
name.length() -1) {+      <span class="code-keyword">throw</span> <span
class="code-keyword">new</span> HadoopIllegalArgumentException(<span
class="code-quote">"XAttr name can not be empty."</span>);+    }</pre></div></div>It
should be <div class="code panel" style="border-width: 1px;"><div class="codeContent
panelContent"><pre class="code-java"><span class="code-keyword">if</span> (prefixIndex
&lt;= 0) {</pre></div></div>other wise, the code will do waste before catch this
Exception. 


New Comment: 
Can you add Javadoc in DFSClient? 


New Comment: 
I reopened this issue, because I found there are more than two issues after I review. 


New Comment: 
Thanks Fengdong, for the reviews.<br/>&gt;Can you add Javadoc in DFSClient?<br/>Actually
DFSClient is not publicly exposed one and the clear javadoc comments there with API. That
is like a core helper class delegation from client perspective. No harm in having
javadoc.This issue already committed. Feel free to file a new JIRA for minor javadoc etc
and post a patch with testcases which may catch the issues if you notice. I will be happy
to review the patch and commit. 


New Comment: 
1.<div class="code panel" style="border-width: 1px;"><div class="codeContent
panelContent"><pre class="code-java">+  <span class="code-keyword">public</span> <span
class="code-object">byte</span>[] getXAttr(<span class="code-object">String</span> src,
<span class="code-object">String</span> name) <span class="code-keyword">throws</span>
IOException {+    checkOpen();+    <span class="code-keyword">try</span> {+      XAttr
xAttr = buildXAttr(name, <span class="code-keyword">null</span>);+      List&lt;XAttr&gt;
xAttrs = Lists.newArrayListWithCapacity(1);+      xAttrs.add(xAttr);+     
List&lt;XAttr&gt; result = namenode.getXAttrs(src, xAttrs);+      <span
class="code-object">byte</span>[] value = <span class="code-keyword">null</span>;+     
<span class="code-keyword">if</span> (result != <span class="code-keyword">null</span>
&amp;&amp; result.size() &gt; 0) {+        XAttr a = result.get(0);+        value =
a.getValue();+        <span class="code-keyword">if</span> (value == <span
class="code-keyword">null</span>) {+          value = <span
class="code-keyword">new</span> <span class="code-object">byte</span>[0]; <span
class="code-comment">//xattr exists, but no value.</span>+        }+      }+      <span
class="code-keyword">return</span> value;+    } <span
class="code-keyword">catch</span>(RemoteException re) {</pre></div></div>It looks like you
don't want to return null here? so if result is null or empty, It still return
null<br/>Another, try to use !result.isEmpty(), instead of 'result.size() &gt;
0'2.<br/>ClientRPC interface is not symmetrical, there are getXAttr(), getXAttrs(),
setXAttr(), so there should be setXAttrs().3.<br/>why there is no getXAttr() in the
ClientProtocol? we should allow to get only one xattr in one time. 


New Comment: 
<blockquote>Actually DFSClient is not publicly exposed one and the clear javadoc comments
there with API. That is like a core helper class delegation from client perspective. No
harm in having javadoc.</blockquote>yes, there is no harm, but it's the code style
required. please refer to other client methods in DFSClent, such as append() ? 


New Comment: 
It cannot be closed, I still reopen it. and the committed should be reverted. and revise
these comments here. 


New Comment: 
<blockquote>2.<br/>ClientRPC interface is not symmetrical, there are getXAttr(),
getXAttrs(), setXAttr(), so there should be setXAttrs().<br/>3.<br/>why there is no
getXAttr() in the ClientProtocol? we should allow to get only one xattr in one
time.</blockquote>Please look at the client protocol interface audience. That is internal
rpc mechanism API. There is no guideline to have symmetrical api signatures with client
exposed API. See the create api in ClientProtocol, we will have only one. but we exposed
many overloaded APIs. Please look at the review comments in <a
href="https://issues.apache.org/jira/browse/HDFS-6258" title="Namenode server-side storage
for XAttrs" class="issue-link"
data-issue-key="HDFS-6258"><del>HDFS-6258</del></a>.&gt;please refer to other client
methods in DFSClent, such as append() ?<br/>Please also look at FileSystem#append doc.
Both says same information, no additional info there. So, from the exposed API doc, same
and we just delegate till this core implementation.I am saying you again. You can file a
new JIRA with your comments when they are valid. This is a branch development. I don't see
any critical issues from your comments. I am not against adding some developper doc in
DFSClient and at the same time I am not insisting to have there. Ex: see
<br/>setAcl,<br/>removeAcl... <br/>public DFSInputStream open(String src) <br/>     
throws IOException, UnresolvedLinkException {    return open(src,
dfsClientConf.ioBufferSize, true, null);  } 


New Comment: 
I have created a JIRA <a href="https://issues.apache.org/jira/browse/HDFS-6309"
title="Javadocs for Xattrs apis in DFSClient and other minor fixups" class="issue-link"
data-issue-key="HDFS-6309"><del>HDFS-6309</del></a>, Lets discuss there with your
comments. 


New Comment: 
Hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=azuryy"
class="user-hover" rel="azuryy">Fengdong Yu</a>, thanks for your comment.<blockquote>It
should be<div class="code panel" style="border-width: 1px;"><div class="codeContent
panelContent"><pre class="code-java"><span class="code-keyword">if</span> (prefixIndex
&lt;= 0) {</pre></div></div>other wise, the code will do waste before catch this
Exception.</blockquote><tt>prefixIndex == -1</tt> indicates not found. The logic is name
should have prefix and should have real content after prefix. Is it the same as what you
think?<blockquote>It looks like you don't want to return null here? so if result is null
or empty, It still return null</blockquote>Allow to return null, there is no doc says not
return null.  The comment in the code <br/><tt>//xattr exists, but no value.</tt>
<br/>explains that if xattr doesn't exist, null is return, but if xattr exists with no
value, empty should return.<blockquote>Another, try to use !result.isEmpty(), instead of
'result.size() &gt; 0'</blockquote>Right, <tt>isEmpty()</tt> is efficient, and I will add
this improvement.<blockquote>ClientRPC interface is not symmetrical, there are getXAttr(),
getXAttrs(), setXAttr(), so there should be setXAttrs().</blockquote>We have dicussed
during design and are not intended to support setXAttrs currently, it's close to POSIX
setxattr and there is no use case for setXAttrs currently. We can extend this in future.
Please go to see <a href="https://issues.apache.org/jira/browse/HADOOP-10520"
title="Extended attributes definition and FileSystem APIs for extended attributes."
class="issue-link"
data-issue-key="HADOOP-10520"><del>HADOOP-10520</del></a>.<blockquote>why there is no
getXAttr() in the ClientProtocol? we should allow to get only one xattr in one
time.</blockquote>Agree with Uma.<blockquote>Can you add Javadoc in
DFSClient?</blockquote>Agree with Uma. We could improve the javadoc for internal methods 
in other JIRA. 


New Comment: 
This patch addresses Javadoc and exception message clarity as well as <a
href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=azuryy"
class="user-hover" rel="azuryy">Fengdong Yu</a>'s comment about isEmpty() vs result.size()
&gt; 0. 


New Comment: 
Hi Charles, I meant to upload this patch along with <a
href="https://issues.apache.org/jira/browse/HDFS-6309" title="Javadocs for Xattrs apis in
DFSClient and other minor fixups" class="issue-link"
data-issue-key="HDFS-6309"><del>HDFS-6309</del></a>. 


New Comment: 
Yes, upload the patch to <a href="https://issues.apache.org/jira/browse/HDFS-6309"
title="Javadocs for Xattrs apis in DFSClient and other minor fixups" class="issue-link"
data-issue-key="HDFS-6309"><del>HDFS-6309</del></a>, don't update this issue again.<img
class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png"
height="16" width="16" align="absmiddle" alt="" border="0"/><div class="code panel"
style="border-width: 1px;"><div class="codeContent panelContent"><pre class="code-java">+ 
    <span class="code-keyword">if</span> (result != <span class="code-keyword">null</span>
&amp;&amp; result.isEmpty()) {</pre></div></div>it should be <div class="code panel"
style="border-width: 1px;"><div class="codeContent panelContent"><pre class="code-java"> 
<span class="code-keyword">if</span> (result != <span class="code-keyword">null</span>
&amp;&amp; !result.isEmpty()) {</pre></div></div> 


