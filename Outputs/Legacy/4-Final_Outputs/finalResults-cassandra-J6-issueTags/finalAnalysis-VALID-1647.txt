Pattern changes caused by commit: c924ce55eb25e712a71ec57b09ab79ea098c7323

From: Flyweight-3
To:   Flyweight-2


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-1647.txt 

commit c924ce55eb25e712a71ec57b09ab79ea098c7323
Author: Jonathan Ellis <jbellis@apache.org>

    Add ResourceWatcher to generalize reloading Strategy configurations.  patch by Jon Hermes and jbellis for CASSANDRA-1105



==================================
 Issue CASSANDRA-1105 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-1105] Create timers to reload cassandra-rack.properties and datacenters.properties
-----------------

-----------------
Summary: Create timers to reload cassandra-rack.properties and datacenters.properties
-----------------

-----------------
Issue type: Task
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Wed, 19 May 2010 05:34:38 +0000
-----------------

-----------------
Resolved at: Thu, 27 May 2010 13:31:01 +0000
-----------------

-----------------
Assigned to: Jon Hermes
-----------------

-----------------
Description: 

PropertyFileSnitch allows reloading changes from its config file manually. 
DatacenterShardStrategy doesn't allow reloading at all <span class="error">&#91;after I
ripped out the reload-for-each-getNaturalEndpoints call code, in
CASSANDRA-1103&#93;</span>.

Let's check each of these for changes (modification time on
the fs is sufficient) every minute and reload automatically if changes are seen.  The
manual-reload code from PFS can then be dropped.
 

-----------------

-----------------
Comments: 

New Comment: 
Might be related to what I'm trying to do with <a
href="https://issues.apache.org/jira/browse/CASSANDRA-1066" title="DatacenterShardStrategy
needs enforceable and keyspace based RF" class="issue-link"
data-issue-key="CASSANDRA-1066"><del>CASSANDRA-1066</del></a> - going to hopefully put the
datacenters.properties configuration into an API call so that it can be set dynamically. 


New Comment: 
I didn't see anything about setting configuration by api call there &#8211; that doesn't
sound like a direction we want to go. 


New Comment: 
Would it be better to reload based purely on modified time instead of a minute
timer?<br/>At the top of the getters, say if modified, reload()? 


New Comment: 
Also, the manual-reload code is required by the interface PropertyFileSnitchMBean.<br/>Do
we need to change the interface or just leave the option to manual-reload? 


New Comment: 
&gt; Would it be better to reload based purely on modified time instead of a minute
timer?No.  We want to avoid doing the reload check during any performance-critical code,
and all the methods here that get called often enough to be useful for a check, are
performance-critical.&gt; Do we need to change the interface or just leave the option to
manual-reload? Delete PFSMBean and the methods it defines. 


New Comment: 
Timers added to PFS and DSS.<br/>Each class calls re/loadConfiguration() during
construction, then set up a Timer to call reloadConfiguration() every
minute.<br/>&#8211;<br/>PFSMBeans deleted along with displayConfiguration() that it
required. 


New Comment: 
Can you break out the check-for-file-changes-and-maybe-call-reload logic somehow so it's
not duplicated in 2 places? 


New Comment: 
Yeah, I should be able to do that by tomorrow.<br/>The reloadConf calls can pass the
X.properties name up to a bigger class, and it can pass back the real filename after it's
done the lookup and checked modification for the non-common code to use.<br/>Might be able
to unduplicate the TimerTasks in the same way. 


New Comment: 
Status after second patch:<br/>M     
src/java/org/apache/cassandra/locator/DatacenterShardStrategy.java<br/>D     
src/java/org/apache/cassandra/locator/PropertyFileSnitchMBean.java<br/>M     
src/java/org/apache/cassandra/locator/PropertyFileSnitch.java<br/>A     
src/java/org/apache/cassandra/locator/util<br/>A     
src/java/org/apache/cassandra/locator/util/PropertyConfigurationLoadable.java<br/>A     
src/java/org/apache/cassandra/locator/util/PropertyConfigurationTimerTask.javaAdded a util
directory for locator. <br/>PCLoadable is an interface for both PFS and
DSS.<br/>PCTimerTask covers both the extension of TimerTask and removes duplicate code. 


New Comment: 
This is pretty good.  I'd make one more change: instead of PropertyConfigurationTimerTask
being tied to PropertyConfigurationLoadable, make it a more generic FileWatcher class that
takes a Runnable to execute when changes are detected.  (Then PCL isn't needed at all.) 


New Comment: 
Should getting the file handle from a resource name be done once at creation (file never
expected to disappear, only change), or every time it checks for modification (file can go
away and we should explode when it does)? 


New Comment: 
A File object in Java is just a glorified String.  You don't want to be opening it here,
just checking the mtime. 


New Comment: 
Changing PCTimerTask to a FileWatcher (in this case it would be a ResourceWatcher in
io/util), then making PFS/DSS implement Runnable by changing loadConfiguration() to run()
doesn't immediately work.Currently there's only one translation from resource to file,
then the file is passed to PFS/DSS, thus loadConfiguration() is actually
loadConfiguration(File x). <br/>If it's to be a non-parameterized run() method, then run()
would have to duplicate the resource-to-file code.<br/>The ResourceWatcher would call its
resource-to-file code to check for modification time, then the run() in PFS/DSS would call
its own version of resource-to-file code to extract the data.Moving the resource-to-file
code to PFS would remove the duplication, but it would still be getting called twice when
its only being called once now.<br/>I've attached a patch implementing this.Status:<br/>M 
    src/java/org/apache/cassandra/locator/DatacenterShardStrategy.java<br/>D     
src/java/org/apache/cassandra/locator/PropertyFileSnitchMBean.java<br/>M     
src/java/org/apache/cassandra/locator/PropertyFileSnitch.java<br/>A     
src/java/org/apache/cassandra/io/util/ResourceWatcher.java 


New Comment: 
Attaching quick patch. Changed<div class="preformatted panel" style="border-width:
1px;"><div class="preformattedContent panelContent"><pre>logger.error("{}", data,
throwable);</pre></div></div>to<div class="preformatted panel" style="border-width:
1px;"><div class="preformattedContent
panelContent"><pre>logger.error(String.format("%s",data), throwable);</pre></div></div>I
don't think the first one does what it's supposed to do. 


New Comment: 
committed with some final tweaks.  thanks! 


