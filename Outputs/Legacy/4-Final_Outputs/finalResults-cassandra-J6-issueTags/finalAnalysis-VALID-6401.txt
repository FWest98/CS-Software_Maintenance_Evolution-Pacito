Pattern changes caused by commit: a59a5f59ce3042324b68a37b2392775cb191712e

From: Flyweight-3
To:   Flyweight-1

From: Mediator-2
To:   Mediator-1


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-6401.txt 

commit a59a5f59ce3042324b68a37b2392775cb191712e
Author: Pavel Yaskevich <xedin@apache.org>

    Adds posibility to autoconfigure size of the KeyCache
    patch by Pavel Yaskevich; reviewed by Yuki Morishita for CASSANDRA-4087



==================================
 Issue CASSANDRA-4087 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-4087] Improve out-of-the-box cache settings
-----------------

-----------------
Summary: Improve out-of-the-box cache settings
-----------------

-----------------
Issue type: Improvement
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Tue, 27 Mar 2012 04:27:19 +0000
-----------------

-----------------
Resolved at: Tue, 27 Mar 2012 20:06:31 +0000
-----------------

-----------------
Assigned to: Pavel Yaskevich
-----------------

-----------------
Description: 

The default key cache of 2MB is significantly smaller than &lt;= 1.0 (200 rows per CF)
and much smaller than most production uses.  How about min(5% of the heap, 100MB)?
 

-----------------

-----------------
Comments: 

New Comment: 
+1 with nit: I prefer "auto".equalsIgnoreCase(conf.key_cache_size_in_mb) to avoid NPE in
case someone misconfigures value. 


New Comment: 
It's not really necessary because default value to "key_cache_size_in_mb" is set in the
Config class to "auto" so there is not chance it would be NPE. 


New Comment: 
You can override (accidentally) by setting empty value in cassandra.yaml. In that case,
you get null. 


New Comment: 
Hm, I didn't know that, thanks! 


New Comment: 
As a side note, so far we've avoided "auto" by saying that if the value is not set then we
use whatever default we decided (typically see memtable_total_space_in_mb or
memtable_flush_writers). It would be more consistent to use the same convention here. 


