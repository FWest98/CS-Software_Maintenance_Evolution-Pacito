Pattern changes caused by commit: 4355aa877f29b653614cb801a2b57861f4cef428

From: Decorator-2
To:   Decorator-1

From: Flyweight-2
To:   Flyweight-1

From: Mediator-3
To:   Mediator-1

From: Strategy-0
To:   Strategy-1


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-7651.txt 

commit 4355aa877f29b653614cb801a2b57861f4cef428
Author: Brandon Williams <brandonwilliams@apache.org>

    Pig: fix widerow input with single column rows
    Patch by Will Oberman, reviewed by brandonwilliams for CASSANDRA-4789



==================================
 Issue CASSANDRA-4789 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-4789] CassandraStorage.getNextWide produces corrupt data
-----------------

-----------------
Summary: CassandraStorage.getNextWide produces corrupt data
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Wed, 10 Oct 2012 20:48:54 +0000
-----------------

-----------------
Resolved at: Thu, 11 Oct 2012 19:01:22 +0000
-----------------

-----------------
Assigned to: Will Oberman
-----------------

-----------------
Description: 

This took me a while to track down.  I'm seeing the problem when the "key changes" case
happens.  The intended behavior (as far as I can tell) when the key changes is the method
returns the current tuple, and picks up where it left off on the next call to
getNextWide().  The problem I'm seeing is the sometimes the current key advances between
method calls, sometimes not.  "Not" being the correct behavior, since the code is saving
the value into an instance variable, but when the key advances there is a key/value
mismatch (the result being the values for two different keys are being glued together).  I
think the problem might be related to keys that only have a single column???  I'm still
trying to track that down to help assist in solving this case...

Maybe this will be
clearer from me pasting a bunch of logging I added to the class.  The log messages are
fairly self documenting (I hope):  

...lots of previous logging...<br/>enter
getNextWide<br/>hasNext = true<br/>set key = dVNhbXAxMzQ3ODM1OA%3D%3D<br/>lastRow !=
null<br/>added 1 items to bag from lastRow<br/>added 1 items to bag from row<br/>hasNext =
true<br/>added 1 items to bag from row<br/>hasNext = true<br/>added 1 items to bag from
row<br/>hasNext = true<br/>added 1 items to bag from row<br/>hasNext = true<br/>added 1
items to bag from row<br/>hasNext = true<br/>added 1 items to bag from row<br/>hasNext =
true<br/>added 1 items to bag from row<br/>hasNext = true<br/>added 1 items to bag from
row<br/>hasNext = true<br/>key changed, new key =
669392df09572d0045b964bc65f86a2c<br/>exit getNextWide<br/>enter getNextWide<br/>hasNext =
true<br/>//!!<span class="error">Unable to render embedded object: File (THIS IS THE
PROBLEM HERE I THINK) not found.</span>!!<br/>//!!<span class="error">Unable to render
embedded object: File (Usually the key here == key before &quot;exit getNextWide&quot;)
not found.</span>!!<br/>set key = 5f900ee4bb1850f8cf387cc3d5fc23ca<br/>//!!! lastRow is
data for 669392df09572d0045b964bc65f86a2c !!! <br/>//!!! but it's being added to key
5f900ee4bb1850f8cf387cc3d5fc23ca !!!<br/>lastRow != null<br/>added 1 items to bag from
lastRow<br/>//!!! Here are the real values for 5f900ee4bb1850f8cf387cc3d5fc23ca
!!!<br/>added 1 items to bag from row<br/>hasNext = true<br/>added 1 items to bag from
row<br/>hasNext = true<br/>key changed, new key =
50438549-cdb6-8c44-f93a-d18d7daeffd8<br/>exit getNextWide<br/>enter
getNextWide<br/>hasNext = true<br/>set key = 50438549-cdb6-8c44-f93a-d18d7daeffd8
 

-----------------

-----------------
Comments: 

New Comment: 
Apparently using !!! is some kind of special syntax, sorry.  I was just trying to
distinguish my comments from my logging. 


New Comment: 
I'm now 99% sure the problem is keys that map to a single column are being skipped over,
and their values glued into the key after them.  But I'm not sure the most elegant fix... 


New Comment: 
Are you mutating the ByteBuffers returned by CFIF?  That could definitely produce this
kind of problem. 


New Comment: 
It's definitely a problem using widerows=true and having keys that only map to one column.
 Here is my patch on 1.1.5 (I also have a one line patch to fix the wide rows
bug):112a113<br/>&gt;     private ByteBuffer lastKey;<br/>116d116<br/>&lt;
<br/>153a154<br/>&gt; 			    //check key == lastKey?<br/>159a161<br/>&gt; 			lastKey =
null;<br/>177a180<br/>&gt; 		    lastKey =
(ByteBuffer)reader.getCurrentKey();<br/>185a189,200<br/>&gt; 		    if(lastKey != null
&amp;&amp; !(key.equals(lastKey))) // last key only had one value<br/>&gt; 		   
{<br/>&gt; 			tuple.append(new DataByteArray(lastKey.array(),
lastKey.position()+lastKey.arrayOffset(),
lastKey.limit()+lastKey.arrayOffset()));<br/>&gt; 			for (Map.Entry&lt;ByteBuffer,
IColumn&gt; entry : lastRow.entrySet())<br/>&gt; 			{&gt; 			   
bag.add(columnToTuple(entry.getValue(), cfDef,
parseType(cfDef.getComparator_type())));&gt; 			}&gt; 			tuple.append(bag);<br/>&gt;
			lastKey = key;<br/>&gt; 			lastRow =
(SortedMap&lt;ByteBuffer,IColumn&gt;)reader.getCurrentValue();<br/>&gt; 			return
tuple;<br/>&gt; 		    }<br/>194a210<br/>&gt; 		    lastKey = null;<br/>551c567<br/>&lt;   
         widerows =
Boolean.valueOf(System.getProperty(PIG_WIDEROW_INPUT));<br/>&#8212;<br/>&gt;            
widerows = Boolean.valueOf(System.getenv(PIG_WIDEROW_INPUT)); 


New Comment: 
Could you post your patches as attachments? 


New Comment: 
Sorry about that, new to this. 


New Comment: 
Thanks, but this doesn't appear to be in patch format:patch: **** Only garbage was found
in the patch input. 


New Comment: 
I don't really have a proper development environment for cassandra, so it's a diff of the
file...  I'll see how to get something better going. 


New Comment: 
Does this work? 


New Comment: 
It applies, thanks. 


New Comment: 
Good!  At some point I'll actually try to figure out how to setup a real development
environment, as I feel really uncomfortable showing code without unit tests. 


