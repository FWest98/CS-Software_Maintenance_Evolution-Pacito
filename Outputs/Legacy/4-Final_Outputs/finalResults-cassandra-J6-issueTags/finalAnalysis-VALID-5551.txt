Pattern changes caused by commit: 2e5e28faee55f708626cc8772bf69f8a16645fd7

From: Facade-1
To:   Facade-0


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-5551.txt 

commit 2e5e28faee55f708626cc8772bf69f8a16645fd7
Author: Pavel Yaskevich <xedin@apache.org>

    Support TimeUUIDType column names in Stress.java tool
    patch by Pavel Yaskevich; reviewed by Brandon Williams for CASSANDRA-3541



==================================
 Issue CASSANDRA-3541 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-3541] Support timeuuid column names
-----------------

-----------------
Summary: Support timeuuid column names
-----------------

-----------------
Issue type: New Feature
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Tue, 29 Nov 2011 18:39:17 +0000
-----------------

-----------------
Resolved at: Wed, 30 Nov 2011 20:12:59 +0000
-----------------

-----------------
Assigned to: Pavel Yaskevich
-----------------

-----------------
Description: 

Real-world Cassandra applications often use "wide rows" to denormalize queries into. 
Most often, this means they do a lot of appending to existing rows, with few overwrites. 
An easy way to add this to Stress would be to allow specifying timeuuid column names
(which will be inherently sequential, or nearly so).  For forwards-compatibility, we could
add a --comparator option that only supports the existing Ascii type and the proposed UUID
type, to start with.
 

-----------------

-----------------
Comments: 

New Comment: 
option <del>U (</del>-comparator) added which currently supports only {TimeUUID, Ascii,
UTF8}Type. 


New Comment: 
When you pass an invalid comparator, it throws a traceback instead of just saying it's
invalid.  Also, it's case-sensitive which is slightly annoying but I can live with that. 
Out of curiosity, why both UTF-8 and Ascii? 


New Comment: 
Ok, i will catch RE exception and just print error message. About types - if we are going
to support many types in the future, I just thought that it might be a good idea to
include utf8 now too... 


New Comment: 
+1 


New Comment: 
Committed. 


