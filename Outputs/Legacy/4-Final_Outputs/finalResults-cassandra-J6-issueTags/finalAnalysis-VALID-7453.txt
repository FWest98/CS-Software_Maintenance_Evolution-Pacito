Pattern changes caused by commit: 1e6cc9aebc6040e50cca411813fe02afc221a117

From: Decorator-2
To:   Decorator-1

From: Flyweight-2
To:   Flyweight-1

From: Mediator-3
To:   Mediator-1

From: Strategy-0
To:   Strategy-1


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-7453.txt 

commit 1e6cc9aebc6040e50cca411813fe02afc221a117
Author: Brandon Williams <brandonwilliams@apache.org>

    cqlsh: sort columns so COPY TO -> FROM works.
    Patch by paul cannon, reviewed by brandonwilliams for CASSANDRA-4594



==================================
 Issue CASSANDRA-4594 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-4594] COPY TO and COPY FROM don't default to consistent ordering of columns
-----------------

-----------------
Summary: COPY TO and COPY FROM don't default to consistent ordering of columns
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Thu, 30 Aug 2012 23:13:10 +0000
-----------------

-----------------
Resolved at: Tue, 18 Sep 2012 19:03:48 +0000
-----------------

-----------------
Assigned to: paul cannon
-----------------

-----------------
Description: 

Here is the input:
<div class="code panel" style="border-width: 1px;"><div
class="codeContent panelContent"><pre class="code-java">                                  
                      CREATE KEYSPACE test WITH strategy_class = <span
class="code-quote">'SimpleStrategy'</span> AND strategy_options:replication_factor = 1;USE
test;                                                                                     
                                                                 CREATE TABLE airplanes ( 
                                                                      name text PRIMARY
KEY,                                                          manufacturer ascii,         
                                                   year <span
class="code-object">int</span>,                                                           
           mach <span class="code-object">float</span>                                    
                             );                                                           
                                                                                     
INSERT INTO airplanes (name, manufacturer, year, mach) VALUES (<span
class="code-quote">'P38-Lightning'</span>, <span class="code-quote">'Lockheed'</span>,
1937, <span class="code-quote">'.7'</span>);                                              
                                 COPY airplanes TO <span
class="code-quote">'temp.cfg'</span> WITH HEADER=<span class="code-keyword">true</span>;  
                                                                                          
                    TRUNCATE airplanes;                                                   
                                                                                          
    COPY airplanes FROM <span class="code-quote">'temp.cfg'</span> WITH HEADER=<span
class="code-keyword">true</span>;                                                         
                                                         SELECT * FROM
airplanes;</pre></div></div>
Here is what happens when executed. Note how it tried to
import the float into the int column:
<div class="code panel" style="border-width:
1px;"><div class="codeContent panelContent"><pre class="code-java">cqlsh:test&gt; DROP
KEYSPACE test;                                                               
cqlsh:test&gt; CREATE KEYSPACE test WITH strategy_class = <span
class="code-quote">'SimpleStrategy'</span> AND strategy_options:replication_factor =
1;cqlsh:test&gt; USE test;                                                                
      cqlsh:test&gt;                                                                      
             cqlsh:test&gt; CREATE TABLE airplanes (                                      
             ...                 name text PRIMARY KEY,                                   
  ...                 manufacturer ascii,                                         ...     
           year <span class="code-object">int</span>,                                     
             ...                 mach <span class="code-object">float</span>              
                                   ...             );                                     
                cqlsh:test&gt;                                                            
        cqlsh:test&gt; INSERT INTO airplanes (name, manufacturer, year, mach) VALUES
(<span class="code-quote">'P38-Lightning'</span>, <span
class="code-quote">'Lockheed'</span>, 1937, <span
class="code-quote">'.7'</span>);cqlsh:test&gt;                                            
                        cqlsh:test&gt; COPY airplanes TO <span
class="code-quote">'temp.cfg'</span> WITH HEADER=<span class="code-keyword">true</span>;  
                   1 rows exported in 0.003 seconds.                                      
        cqlsh:test&gt; TRUNCATE airplanes;                                                
cqlsh:test&gt;                                                                    
cqlsh:test&gt; COPY airplanes FROM <span class="code-quote">'temp.cfg'</span> WITH
HEADER=<span class="code-keyword">true</span>;                    Bad Request: unable to
make <span class="code-object">int</span> from <span class="code-quote">'0.7'</span>      
                               Aborting <span class="code-keyword">import</span> at record
#0 (line 1). Previously-inserted values still present.0 rows imported in 0.002
seconds.</pre></div></div> 

-----------------

-----------------
Comments: 

New Comment: 
This is because a <tt>select * from airplanes;</tt> does not give the columns in the order
they were defined. I'm not sure why not; if that's a bug in C*, then we should fix that.
If there isn't supposed to be any expectation of order, then cqlsh should be inspecting
the columns and specifying them explicitly. 


New Comment: 
<blockquote>This is because a select * from airplanes; does not give the columns in the
order they were defined.</blockquote>No it doesn't. The vaguely technical reason is that
we don't keep internally the order of definition of columns, so we would have to start
keeping that information (which honestly wouldn't be that much of a burden now that we
have the list support, but was a tad more annoying to do at the time I wrote the code for
select *). And I think that it's one place where it's not worth committing to any specific
order but rather left it unspecified, so I don't see the point in bothering to record said
definition order.For the record though, the order of * is not completely random. It
returns first the columns composing the PK (in the order of the PK) and then the rest of
the columns in lexicographic order. But really it's mostly because it's convenient for the
implementation to do it that way. 


New Comment: 
Seems worth it to fix this in the 1.1 branch too. 


New Comment: 
Fixed in my github clone, in the 4594-1.1 branch:<a
href="http://github.com/thepaul/cassandra/tree/4594-1.1" class="external-link"
rel="nofollow">http://github.com/thepaul/cassandra/tree/4594-1.1</a>Current version is
tagged pending/4594-1.1.And since the merge forward of this change will conflict with <a
href="https://issues.apache.org/jira/browse/CASSANDRA-4491" title="cqlsh needs to use
system.local instead of system.Versions" class="issue-link"
data-issue-key="CASSANDRA-4491"><del>CASSANDRA-4491</del></a>, and the proper resolution
isn't obvious, I've also made a branch with this change for 1.2 on top of 4491:<a
href="http://github.com/thepaul/cassandra/tree/4594-1.2" class="external-link"
rel="nofollow">http://github.com/thepaul/cassandra/tree/4594-1.2</a> 


New Comment: 
Committed your 1.1 fix, and committed 4491 to 1.2 but I can't get your 1.2 branch to apply
to cql3handling.py. 


New Comment: 
Ah, sorry, I didn't make it clear on 4491 that the github branch had multiple commits from
off of trunk. Looks like you only cherry-picked the last. I'll make a note there. 


New Comment: 
trunk, cql3, python 2.7:<blockquote>cqlsh:test&gt; COPY airplanes TO 'temp.cfg' WITH
HEADER=true;                                  <br/>CQL query must be bytes, not
unicode</blockquote>and<blockquote>cqlsh:test&gt; COPY airplanes FROM 'temp.cfg' WITH
HEADER=true; <br/>Traceback (most recent call last):<br/>  File "bin/cqlsh", line 914, in
perform_statement<br/>    self.cursor.execute(statement, decoder=decoder)<br/>  File
"bin/../lib/cql-internal-only-1.2.0.zip/cql-1.2.0/cql/cursor.py", line 75, in execute<br/>
   raise ValueError("CQL query must be bytes, not unicode")<br/>ValueError: CQL query must
be bytes, not unicode</blockquote>I've attached a patch that fixes the issue but probably
isn't the best possible solution. 


New Comment: 
Aleksey: you must be missing the patch for this ticket. It includes a change to the
cql_protect_name function to encode unicode names in utf8 when necessary. Using
<tt>str</tt> won't work when there are non-ascii characters and the default encoding is
not utf8. 


New Comment: 
Paul: if it's in the trunk then I'm not missing it. Just double-checked it, still got
exact same exceptions. 


New Comment: 
It's not yet in trunk. See above; Brandon couldn't get the commit to apply, because it was
missing two of the commits from 4491. 


New Comment: 
Ah. Then I misunderstood you. Sorry. 


New Comment: 
Sylvain said he committed those and I think I see them there, maybe you just need to pull. 


New Comment: 
I pulled, of course. So unless git is lying to me, I should have the latest trunk. 


New Comment: 
Yes, the commits from 4491 are there. The patch for <em>this commit</em> is not. 


New Comment: 
Ok, I got it to merge cleanly and committed it to trunk. 


