Pattern changes caused by commit: fbe8a6eb213ee3558be701c73c31a0da79446657

From: Strategy-1
To:   Strategy-0


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-9617.txt 

commit fbe8a6eb213ee3558be701c73c31a0da79446657
Author: Jonathan Ellis <jbellis@apache.org>

    Fix tracing when operation completesbefore all responses arrive
    patch by jbellis; reviewed by slebresne for CASSANDRA-5668



==================================
 Issue CASSANDRA-5668 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-5668] NPE in net.OutputTcpConnection when tracing is enabled
-----------------

-----------------
Summary: NPE in net.OutputTcpConnection when tracing is enabled
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Wed, 19 Jun 2013 19:07:51 +0000
-----------------

-----------------
Resolved at: Fri, 21 Jun 2013 19:19:35 +0000
-----------------

-----------------
Assigned to: Jonathan Ellis
-----------------

-----------------
Description: 

I get multiple NullPointerException when trying to trace INSERT statements.

To
reproduce:
<div class="code panel" style="border-width: 1px;"><div class="codeContent
panelContent"><pre class="code-java">$ ccm create -v git:trunk$ ccm populate -n 3$ ccm
start$ ccm node1 cqlsh &lt; 5668_npe_ddl.cql$ ccm node1 cqlsh &lt;
5668_npe_insert.cql</pre></div></div>
And see many exceptions like this in the logs of
node1:
<div class="code panel" style="border-width: 1px;"><div class="codeContent
panelContent"><pre class="code-java">ERROR [WRITE-/127.0.0.3] 2013-06-19 14:54:35,885
OutboundTcpConnection.java (line 197) error writing to
/127.0.0.3java.lang.NullPointerException        at
org.apache.cassandra.net.OutboundTcpConnection.writeConnected(OutboundTcpConnection.java:182)
       at
org.apache.cassandra.net.OutboundTcpConnection.run(OutboundTcpConnection.java:144)</pre></div></div>
This
is similar to <a href="https://issues.apache.org/jira/browse/CASSANDRA-5658"
title="TracingStage frequently times out" class="issue-link"
data-issue-key="CASSANDRA-5658"><del>CASSANDRA-5658</del></a> and is the reason that
npe_ddl and npe_insert are separate files.
 

-----------------

-----------------
Comments: 

New Comment: 
I've tried to introduce sleeps in between INSERTs, even with 30s pauses between them I
still see the same in the logs. I have also seen this fail on the very first INSERT. 


New Comment: 
This is what one the traces looks like that failed:<div class="code panel"
style="border-width: 1px;"><div class="codeContent panelContent"><pre
class="code-java">127.0.0.1	78	Parsing statement	Thrift:1127.0.0.1	606	Peparing
statement	Thrift:1127.0.0.1	949	Determining replicas <span class="code-keyword">for</span>
mutation	Thrift:1127.0.0.1	3577	Acquiring switchLock read
lock	MutationStage:1127.0.0.1	3622	Appending to
commitlog	MutationStage:1127.0.0.1	3754	Adding to test
memtable	MutationStage:1127.0.0.1	4936	Sending message to
/127.0.0.2	WRITE-/127.0.0.2127.0.0.2	37	Message received from /127.0.0.1	<span
class="code-object">Thread</span>-4127.0.0.2	562	Acquiring switchLock read
lock	MutationStage:1127.0.0.2	583	Appending to
commitlog	MutationStage:1127.0.0.1	32	Message received from /127.0.0.2	<span
class="code-object">Thread</span>-7127.0.0.2	634	Adding to test
memtable	MutationStage:1127.0.0.2	1033	Enqueuing response to
/127.0.0.1	MutationStage:1127.0.0.2	1217	Sending message to
/127.0.0.1	WRITE-/127.0.0.1127.0.0.1	132	Processing response from
/127.0.0.2	RequestResponseStage:3</pre></div></div>With a replication factor of 3 it
should be writing to all three nodes (127.0.0.1, 127.0.0.2, and 127.0.0.3) - 127.0.0.3 is
conspicuously missing from that trace. 


New Comment: 
attached additional assert to see where we are trying to trace without setting up the
session first 


New Comment: 
I ran with the patch, but I did not see any assertion errors. 


New Comment: 
Hmm.  Take 2. 


New Comment: 
OK, that prodcued the assertion errors. See attached system.logAlso, I saw a lot of this
in the cqlsh terminal:<div class="code panel" style="border-width: 1px;"><div
class="codeContent panelContent"><pre class="code-java">&lt;stdin&gt;:9:Request did not
complete within rpc_timeout.&lt;stdin&gt;:10:Request did not complete within
rpc_timeout.&lt;stdin&gt;:11:<span class="code-quote">'NoneType'</span> object is not
iterable&lt;stdin&gt;:12:Request did not complete within
rpc_timeout.&lt;stdin&gt;:13:Request did not complete within
rpc_timeout.&lt;stdin&gt;:14:<span class="code-quote">'NoneType'</span> object is not
iterable&lt;stdin&gt;:15:<span class="code-quote">'NoneType'</span> object is not
iterable&lt;stdin&gt;:16:Request did not complete within
rpc_timeout.&lt;stdin&gt;:17:<span class="code-quote">'NoneType'</span> object is not
iterable&lt;stdin&gt;:18:Request did not complete within
rpc_timeout.&lt;stdin&gt;:19:Request did not complete within
rpc_timeout.&lt;stdin&gt;:20:<span class="code-quote">'NoneType'</span> object is not
iterable&lt;stdin&gt;:21:<span class="code-quote">'NoneType'</span> object is not
iterable&lt;stdin&gt;:22:<span class="code-quote">'NoneType'</span> object is not
iterable</pre></div></div> 


New Comment: 
So, .2 is sending two messages for this session, and the first is deleting the session
when it's done.  (We know that the session is getting created correctly since the first
patch, that checks at message send time, works fine.)The part I don't understand is, why
two messages from .2?  There should only be one (responding to .1).(This could be
problematic for cross-dc replication, although so far tracing seems to be working for <a
href="https://issues.apache.org/jira/browse/CASSANDRA-5632" title="Cross-DC
bandwidth-saving broken" class="issue-link"
data-issue-key="CASSANDRA-5632"><del>CASSANDRA-5632</del></a>.  But for same-dc, one
message per replica should be straightforward.) 


New Comment: 
Are we actually creating multiple sessions?Edit: Yes. 


New Comment: 
Okay, here's what's happening.  I added logging of session cleanup:<div
class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent
panelContent"><pre> INFO [Thrift:1] 2013-06-19 23:36:51,719 Tracing.java (line 176)
session 0702a620-d963-11e2-832d-53376523a4a2 is completejava.lang.AssertionError: Asked to
trace TYPE:MUTATION VERB:MUTATION for session 0702a620-d963-11e2-832d-53376523a4a2 but
that state does not exist</pre></div></div>cqlsh is requesting QUORUM CL (or ONE?) so once
that's achieved the coordinator sends success to the client and closes the tracing
session.if other messages have not yet gone out, then we error.But it gets worse...Once
the coordinator's state is discarded, any late-arriving replies will create a new,
"non-local" session.  Since the coordinator will not send any messages again for this
session &#8211; which is the trigger we use on replicas to indicate "we're done" &#8211;
the nonlocal session will persist indefinitely, "leaking" memory.I think we can solve both
of these:<ol>	<li>Make a static TraceState method that only needs the sessionid to be
passed in to log an event.  OTC can use this to avoid having to look up tracestate at all;
if it's cleared out, not a problem.</li>	<li>Make Tracing.sessions an expiring map so
sessions we don't clean up manually still get removed</li></ol>Alternatively we could just
go with #2 by itself and not try to cleanup manually at all.  Average case memory used
will be worse, but maybe that is okay since we assume only a tiny fraction of requests are
traced at all.What do you think <a
href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=slebresne"
class="user-hover" rel="slebresne">Sylvain Lebresne</a>? 


New Comment: 
For what it's worth, I think that for the 2nd problem, another option might be to make
Tracing.initializeMessage behave slightly differently depending on the message type. So if
the state doesn't exist but the message type is a REQUEST_RESPONSE, we could create the
state and set it in the threadLocal, but not save it in the global state map.It's a bit of
a hack though, but it slightly bother me to leave this to expiration either so .... 


New Comment: 
Good idea to check for REQUEST_RESPONSE, although it's not quite as easy as it sounds
since we still need to be able to inject the TraceState into the executor stage.  Patch
attached.(Note that once the session is closed we won't know elapsed time anymore.  I
don't see a good way around this.) 


New Comment: 
I don't think this patch can be committed as is: in both TracingExecutorService and
ExpiredTracingState, the package declaration is before the license header, and I can't let
that slide.But with that fixed, +1. 


New Comment: 
Fixed and committed. <img class="emoticon"
src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16"
width="16" align="absmiddle" alt="" border="0"/> 


New Comment: 
followup patch to make session cleanup check for REQUEST_RESPONSE instead of local-ness,
to keep from destroying session prematurely in RMVH forwarding case. 


New Comment: 
+1 on that follow up. 


New Comment: 
committed. 


New Comment: 
The NullPointerException is gone, however, I see an unexpected change in the trace after
this commit.Prior to the patch, I do this:<div class="code panel" style="border-width:
1px;"><div class="codeContent panelContent"><pre class="code-java">$ ccm create
5668Current cluster is now: 5668$ ccm populate -n 2:2$ ccm start$ ccm node1 cqlshConnected
to 5668 at 127.0.0.1:9160.[cqlsh 4.0.0 | Cassandra 2.0-SNAPSHOT | CQL spec 3.1.0 | Thrift
protocol 19.37.0]Use HELP <span class="code-keyword">for</span> help.cqlsh&gt; CREATE
KEYSPACE test WITH replication = {<span class="code-quote">'class'</span>: <span
class="code-quote">'NetworkTopologyStrategy'</span>, <span
class="code-quote">'dc1'</span>:2, <span class="code-quote">'dc2'</span>:2};cqlsh&gt;
CREATE TABLE test.test (id <span class="code-object">int</span> PRIMARY KEY, value
text);cqlsh&gt; tracing on;Now tracing requests.cqlsh&gt; INSERT INTO test.test (id,
value) VALUES ( 5, <span class="code-quote">'asdf'</span>);Tracing session:
5d3bdaa0-da87-11e2-9eaa-35db2404c433 activity                                             
         | timestamp    | source    |
source_elapsed----------------------------------------------------------------+--------------+-----------+----------------
                                            execute_cql3_query | 11:29:29,423 | 127.0.0.1
|              0 Parsing INSERT INTO test.test (id, value) VALUES ( 5, <span
class="code-quote">'asdf'</span>); | 11:29:29,424 | 127.0.0.1 |           1082            
                                Peparing statement | 11:29:29,425 | 127.0.0.1 |          
2241                              Determining replicas <span
class="code-keyword">for</span> mutation | 11:29:29,425 | 127.0.0.1 |           2617      
                           Sending message to /127.0.0.2 | 11:29:29,432 | 127.0.0.1 |     
     9321                                 Acquiring switchLock read lock | 11:29:29,433 |
127.0.0.1 |          10376                                         Appending to commitlog
| 11:29:29,433 | 127.0.0.1 |          10424                                        Adding
to test memtable | 11:29:29,433 | 127.0.0.1 |          10544                              
   Sending message to /127.0.0.3 | 11:29:29,435 | 127.0.0.1 |          12658              
                Message received from /127.0.0.1 | 11:29:29,436 | 127.0.0.2 |           
102                               Message received from /127.0.0.1 | 11:29:29,438 |
127.0.0.3 |            103                        Enqueuing forwarded write to /127.0.0.4
| 11:29:29,441 | 127.0.0.3 |           3596                                 Acquiring
switchLock read lock | 11:29:29,441 | 127.0.0.3 |           3686                          
              Appending to commitlog | 11:29:29,441 | 127.0.0.3 |           3704          
                      Acquiring switchLock read lock | 11:29:29,442 | 127.0.0.2 |         
 5768                                        Adding to test memtable | 11:29:29,442 |
127.0.0.3 |           3759                                         Appending to commitlog
| 11:29:29,442 | 127.0.0.2 |           5821                                  Sending
message to /127.0.0.4 | 11:29:29,442 | 127.0.0.3 |           3834                         
              Adding to test memtable | 11:29:29,442 | 127.0.0.2 |           5896         
                     Enqueuing response to /127.0.0.1 | 11:29:29,442 | 127.0.0.3 |        
  4307                               Enqueuing response to /127.0.0.1 | 11:29:29,443 |
127.0.0.2 |           6602                               Message received from /127.0.0.3
| 11:29:29,444 | 127.0.0.4 |             92                                  Sending
message to /127.0.0.1 | 11:29:29,444 | 127.0.0.2 |           8037                         
     Message received from /127.0.0.2 | 11:29:29,445 | 127.0.0.1 |             36         
                  Processing response from /127.0.0.2 | 11:29:29,445 | 127.0.0.1 |        
   147                                 Acquiring switchLock read lock | 11:29:29,452 |
127.0.0.4 |           8791                                         Appending to commitlog
| 11:29:29,452 | 127.0.0.4 |           8835                                        Adding
to test memtable | 11:29:29,452 | 127.0.0.4 |           8897                              
Enqueuing response to /127.0.0.1 | 11:29:29,453 | 127.0.0.4 |           9542              
                   Sending message to /127.0.0.1 | 11:29:29,454 | 127.0.0.4 |         
10021                               Message received from /127.0.0.4 | 11:29:29,454 |
127.0.0.1 |           9660                            Processing response from /127.0.0.4
| 11:29:29,455 | 127.0.0.1 |           9804                                              
Request complete | 11:29:29,435 | 127.0.0.1 |          12668</pre></div></div>That's a 2x2
multi-dc cluster with a RF of 2 in each dc. I write a single INSERT and I see four nodes
append to their commit log. All is well.After the patch, I see this trace:<div class="code
panel" style="border-width: 1px;"><div class="codeContent panelContent"><pre
class="code-java">Tracing session: c3da4d00-da87-11e2-9a95-35db2404c433 activity          
                                            | timestamp    | source    |
source_elapsed----------------------------------------------------------------+--------------+-----------+----------------
                                            execute_cql3_query | 11:32:21,587 | 127.0.0.1
|              0 Parsing INSERT INTO test.test (id, value) VALUES ( 5, <span
class="code-quote">'asdf'</span>); | 11:32:21,587 | 127.0.0.1 |            495            
                                Peparing statement | 11:32:21,588 | 127.0.0.1 |           
962                              Determining replicas <span
class="code-keyword">for</span> mutation | 11:32:21,588 | 127.0.0.1 |           1108      
                           Sending message to /127.0.0.2 | 11:32:21,590 | 127.0.0.1 |     
     3341                                  Sending message to /127.0.0.3 | 11:32:21,590 |
127.0.0.1 |           3920                               Message received from /127.0.0.1
| 11:32:21,592 | 127.0.0.2 |             91                               Message received
from /127.0.0.1 | 11:32:21,593 | 127.0.0.3 |             93                               
 Acquiring switchLock read lock | 11:32:21,593 | 127.0.0.2 |           1398               
                         Appending to commitlog | 11:32:21,593 | 127.0.0.2 |          
1447                                        Adding to test memtable | 11:32:21,593 |
127.0.0.2 |           1517                        Enqueuing forwarded write to /127.0.0.4
| 11:32:21,594 | 127.0.0.3 |           1266                               Enqueuing
response to /127.0.0.1 | 11:32:21,594 | 127.0.0.2 |           2573                        
        Acquiring switchLock read lock | 11:32:21,594 | 127.0.0.3 |           1343        
                                Appending to commitlog | 11:32:21,594 | 127.0.0.3 |       
   1360                                        Adding to test memtable | 11:32:21,594 |
127.0.0.3 |           1412                               Enqueuing response to /127.0.0.1
| 11:32:21,595 | 127.0.0.3 |           2060                               Message received
from /127.0.0.2 | 11:32:21,595 | 127.0.0.1 |           <span
class="code-keyword">null</span>                                  Sending message to
/127.0.0.1 | 11:32:21,595 | 127.0.0.2 |           2850                                 
Sending message to /127.0.0.1 | 11:32:21,595 | 127.0.0.3 |           2442                 
          Processing response from /127.0.0.2 | 11:32:21,595 | 127.0.0.1 |           <span
class="code-keyword">null</span>                                  Sending message to
/127.0.0.4 | 11:32:21,595 | 127.0.0.3 |           2442                              
Message received from /127.0.0.3 | 11:32:21,595 | 127.0.0.1 |           <span
class="code-keyword">null</span>                            Processing response from
/127.0.0.3 | 11:32:21,595 | 127.0.0.1 |           <span class="code-keyword">null</span>  
                            Message received from /127.0.0.3 | 11:32:21,597 | 127.0.0.4 | 
           95                                 Acquiring switchLock read lock |
11:32:21,598 | 127.0.0.4 |           1040                                        
Appending to commitlog | 11:32:21,598 | 127.0.0.4 |           1087                        
               Adding to test memtable | 11:32:21,598 | 127.0.0.4 |           1391        
                      Enqueuing response to /127.0.0.1 | 11:32:21,599 | 127.0.0.4 |       
   1885                               Message received from /127.0.0.4 | 11:32:21,600 |
127.0.0.1 |           <span class="code-keyword">null</span>                              
   Sending message to /127.0.0.1 | 11:32:21,600 | 127.0.0.4 |           3290              
             Processing response from /127.0.0.4 | 11:32:21,600 | 127.0.0.1 |          
<span class="code-keyword">null</span>                                              
Request complete | 11:32:21,592 | 127.0.0.1 |           5564</pre></div></div>127.0.0.1
(which also happens to be the coordinator) didn't write anything to it's commit log
(according to the trace at least). Reproducible on cassandra-1.2 and trunk. 


New Comment: 
Did you get the followup patch in that?  Should have addressed it. 


New Comment: 
I've retested with the second patch, it's the same. 


New Comment: 
fix pushed in 110d283afd780774a44368b17177b5e8e781e37f 


New Comment: 
That works in cassandra-1.2 - if you commit to trunk, I'll test there too. 


New Comment: 
Merged to trunk. 


