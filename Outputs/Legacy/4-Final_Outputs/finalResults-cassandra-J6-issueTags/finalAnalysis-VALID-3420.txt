Pattern changes caused by commit: f516cc845228555d89d16c9106a094e42bcf1c9a

From: Abstract Factory-3
To:   Abstract Factory-2

From: Factory Method-3
To:   Factory Method-2


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-3420.txt 

commit f516cc845228555d89d16c9106a094e42bcf1c9a
Author: Jonathan Ellis <jbellis@apache.org>

    avoid exporting an un-requested row in sstable2json,when exporting
    a key that does not exist
    patch by Ben Coverston; reviewed by jbellis for CASSANDRA-2168



==================================
 Issue CASSANDRA-2168 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-2168] SSTable2Json tool returns a different key when a querying for a specific key in an SSTable that does not exist
-----------------

-----------------
Summary: SSTable2Json tool returns a different key when a querying for a specific key in an SSTable that does not exist
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Tue, 15 Feb 2011 19:19:44 +0000
-----------------

-----------------
Resolved at: Sat, 5 Mar 2011 05:34:45 +0000
-----------------

-----------------
Assigned to: Benjamin Coverston
-----------------

-----------------
Description: 

bin/sstable2json storage/core/data/Foo/BAR-1-Data.db -k NonExistantKey

returns
{
"ExistantKey" } 

-----------------

-----------------
Comments: 

New Comment: 
I think what we want is in the export overload that loops through the toExport list, we
need to add a SSTableScanner.seekTo method that calls getPosition with Operator.EQ instead
of GE (maybe we want to move the Operator into a parameter of SeekTo? there is only one
other caller). 


New Comment: 
I made a simpler change. All I did was make a sanity check to see if after seeking the key
matched the key we were looking for. If seek reached the end of the list it would only
deserialize the row if it is the one we are looking for, otherwise it will continue to the
next key in the for loop. 


New Comment: 
Patch 2168 attached for review. 


