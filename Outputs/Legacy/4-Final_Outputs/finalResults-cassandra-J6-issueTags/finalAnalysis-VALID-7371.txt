Pattern changes caused by commit: 5df7b2512de1f851d2add08d699c948f3d95d9c8

From: Decorator-2
To:   Decorator-1

From: Flyweight-2
To:   Flyweight-1

From: Mediator-3
To:   Mediator-1

From: Strategy-0
To:   Strategy-1


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-7371.txt 

commit 5df7b2512de1f851d2add08d699c948f3d95d9c8
Author: Jonathan Ellis <jbellis@apache.org>

    use millis + atomicint for commitlog segment creation
    patch by amorton; reviewed by jbellis for CASSANDRA-4601



==================================
 Issue CASSANDRA-4601 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-4601] Ensure unique commit log file names
-----------------

-----------------
Summary: Ensure unique commit log file names
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Sun, 2 Sep 2012 22:37:23 +0000
-----------------

-----------------
Resolved at: Tue, 4 Sep 2012 20:09:47 +0000
-----------------

-----------------
Assigned to: Aaron Morton
-----------------

-----------------
Description: 

The commit log segment name uses System.nanoTime() as part of the file name. There is no
guarantee that successive calls to nanoTime() will return different values. And on less
than optimal hypervisors this happens a lot. 

I observed the following in the wild:
<div
class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"><pre
class="code-java">ERROR [COMMIT-LOG-ALLOCATOR] 2012-08-31 15:56:49,815
AbstractCassandraDaemon.java (line 134) Exception in thread <span
class="code-object">Thread</span>[COMMIT-LOG-ALLOCATOR,5,main]java.lang.AssertionError:
attempted to delete non-existing file CommitLog-13926764209796414.log        at
org.apache.cassandra.io.util.FileUtils.deleteWithConfirm(FileUtils.java:68)        at
org.apache.cassandra.db.commitlog.CommitLogSegment.discard(CommitLogSegment.java:172)     
  at
org.apache.cassandra.db.commitlog.CommitLogAllocator$4.run(CommitLogAllocator.java:223)   
    at
org.apache.cassandra.db.commitlog.CommitLogAllocator$1.runMayThrow(CommitLogAllocator.java:95)
       at org.apache.cassandra.utils.WrappedRunnable.run(WrappedRunnable.java:30)       
at java.lang.<span class="code-object">Thread</span>.run(Unknown
Source)</pre></div></div>
My <em>assumption</em> is that it was because of duplicate file
names. As this is on a hypervisor that is less than optimal. 

After a while (about 30
minutes) mutations stopped being processed and the pending count sky rocketed. I
<em>think</em> this was because log writing was blocked trying to get a new segment and
writers could not submit to the commit log queue. The only way to stop the affected nodes
was kill -9. 

Over about 24 hours this happened 5 times. I have deployed a patch that has
been running for 12 hours without incident, will attach. 

The affected nodes could still
read, and I'm checking logs to see how the other nodes handled the situation.
 

-----------------

-----------------
Comments: 

New Comment: 
LGTM overall.<ul class="alternate" type="square">	<li>I'd go ahead and use time-in-millis
as base instead of nanotime</li>	<li>Looks like this diff is reversed from what it
"should" be?  Old lines are +, new are - instead of the inverse.</li>	<li>patch 1.0 as
well?</li></ul> 


New Comment: 
This actually doesn't affect &lt; 1.1.0; it was introduced by <a
href="https://issues.apache.org/jira/browse/CASSANDRA-3544" title="NPE on startup when
there are permissions issues with directories" class="issue-link"
data-issue-key="CASSANDRA-3544"><del>CASSANDRA-3544</del></a>. 


New Comment: 
committed w/ millis as base.  (in a hurry since we're going to roll 1.1.5 RSN.) 


