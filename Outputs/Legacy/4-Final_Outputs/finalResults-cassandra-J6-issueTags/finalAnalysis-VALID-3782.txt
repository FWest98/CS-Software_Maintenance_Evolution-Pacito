Pattern changes caused by commit: 898652bb4b92544b950f2be8263c21e1593ed9af

From: Abstract Factory-3
To:   Abstract Factory-2

From: Factory Method-3
To:   Factory Method-2

From: Flyweight-6
To:   Flyweight-5

From: Mediator-2
To:   Mediator-1


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-3782.txt 

commit 898652bb4b92544b950f2be8263c21e1593ed9af
Author: Brandon Williams <brandonwilliams@apache.org>

    Use old value generation behavior by default in stress.java to allow
    indexed range slices to work.
    Patch by Pavel Yaskevich, reviewed by brandonwilliams for CASSANDRA-2326



==================================
 Issue CASSANDRA-2326 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-2326] stress.java indexed range slicing is broken
-----------------

-----------------
Summary: stress.java indexed range slicing is broken
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Mon, 14 Mar 2011 21:26:17 +0000
-----------------

-----------------
Resolved at: Wed, 13 Apr 2011 20:37:08 +0000
-----------------

-----------------
Assigned to: Pavel Yaskevich
-----------------

-----------------
Description: 

I probably broke it when I fixed the build that <a
href="https://issues.apache.org/jira/browse/CASSANDRA-2312" title="Stress.java columns are
bigger than advertised" class="issue-link"
data-issue-key="CASSANDRA-2312"><del>CASSANDRA-2312</del></a> broke.  Now it compiles, but
never works.
 

-----------------

-----------------
Comments: 

New Comment: 
do you get back incomplete data or no data at all? 


New Comment: 
<div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent
panelContent"><pre>contrib/stress/bin/stress -n 300000 -d
cassandra-1,cassandra-2,cassandra-3 -i 1 -t 300 -x KEYS -l2 -o
INDEXED_RANGE_SLICEtotal,interval_op_rate,interval_key_rate,avg_latency,elapsed_timeOperation
[77] retried 10 times - error on calling get_indexed_slices for offset 0
</pre></div></div>Not much further with keep-going:<div class="preformatted panel"
style="border-width: 1px;"><div class="preformattedContent
panelContent"><pre>contrib/stress/bin/stress -n 300000 -d
cassandra-1,cassandra-2,cassandra-3 -i 1 -t 300 -x KEYS -l2 -o INDEXED_RANGE_SLICE
-ktotal,interval_op_rate,interval_key_rate,avg_latency,elapsed_timeOperation [99] retried
1 times - error on calling get_indexed_slices for offset 0 Index: 0, Size: 0Operation
[178] retried 1 times - error on calling get_indexed_slices for offset 0 Index: 0, Size:
0Operation [173] retried 1 times - error on calling get_indexed_slices for offset 0 Index:
0, Size: 0Operation [54] retried 1 times - error on calling get_indexed_slices for offset
0 Index: 0, Size: 0Operation [190] retried 1 times - error on calling get_indexed_slices
for offset 0 Index: 0, Size: 0Operation [35] retried 1 times - error on calling
get_indexed_slices for offset 0 Index: 0, Size: 0Operation [9] retried 1 times - error on
calling get_indexed_slices for offset 0 Index: 0, Size: 0Operation [104] retried 1 times -
error on calling get_indexed_slices for offset 0 Index: 0, Size: 0Operation [139] retried
1 times - error on calling get_indexed_slices for offset 0 Index: 0, Size: 0Operation
[195] retried 1 times - error on calling get_indexed_slices for offset 0 Index: 0, Size:
0</pre></div></div> 


New Comment: 
looks like stress.java could stand to print out InvalidRequestException.why 


New Comment: 
It does print an exception message when it's not null. It seems to be imposible to
currently implement IndexedRangeSlice operation because Operation.generateValues() now
generates strings using randomizer (IndexedRangeSlice implies that we know an exact value
we are looking keys for) so each of the runs can potentially give 0 results and we can
loop infinitely... 


New Comment: 
We can maybe offer users to provide list of the values for indexes range slices, don't
have any other solution right now... 


New Comment: 
a --values <span class="error">&#91;list of values&#93;</span> option sounds like a good
solution to me.  doesn't have to be specific to index queries, but it's most useful there
obviously. 


New Comment: 
I agree, I was also thinking about flag which will use old values generator instead of
random as I possible solution. 


New Comment: 
I like the idea of adding a flag for the old behavior, that Just Worked and didn't require
more command line mess.  I'd even be onboard with making it the default and having random
as an option, since random hasn't bought us much, if anything, yet. 


New Comment: 
I agree with Brandon on this, what do you think Jonathan? 


New Comment: 
sgtm 


New Comment: 
-V to generate randomized average size values, old behaviour by default 


New Comment: 
Committed 


