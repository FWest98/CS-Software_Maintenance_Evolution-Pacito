Pattern changes caused by commit: ef8620f8839f7f5278dbfb5b817c3656396966a4

From: Decorator-2
To:   Decorator-1

From: Flyweight-2
To:   Flyweight-1

From: Mediator-3
To:   Mediator-1

From: Strategy-0
To:   Strategy-1


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-7505.txt 

commit ef8620f8839f7f5278dbfb5b817c3656396966a4
Author: Jonathan Ellis <jbellis@apache.org>

    switch out Arrays.asList.toString for Arrays.toString
    patch by yukim; reviewed by jbellis for CASSANDRA-4697



==================================
 Issue CASSANDRA-4697 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-4697] incorrect debug message in LeveledManifest.java
-----------------

-----------------
Summary: incorrect debug message in LeveledManifest.java
-----------------

-----------------
Issue type: Improvement
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Fri, 21 Sep 2012 10:36:37 +0000
-----------------

-----------------
Resolved at: Fri, 21 Sep 2012 16:33:21 +0000
-----------------

-----------------
Assigned to: Yuki Morishita
-----------------

-----------------
Description: 

<a
href="https://github.com/apache/cassandra/blob/trunk/src/java/org/apache/cassandra/db/compaction/LeveledManifest.java"
class="external-link"
rel="nofollow">https://github.com/apache/cassandra/blob/trunk/src/java/org/apache/cassandra/db/compaction/LeveledManifest.java</a>
line 622.

logger.debug("Estimating {} compactions to do for {}.{}",<br/>new Object[]

{Arrays.asList(estimated), cfs.table.name, cfs.columnFamily}
);

It does not print list
as intended. Arrays.asList(estimated).toString() results in object reference number, not
list itself making debug message useless.

list should be printed by code like this:

  
String delim = "";<br/>    for (Item i : list) 
{        sb.append(delim).append(i);      
 delim = ",";    } 

-----------------

-----------------
Comments: 

New Comment: 
Arrays.asList returns ArrayList extends AbstractList extends AbstractCollection, and
AbstractCollection.toString is<div class="code panel" style="border-width: 1px;"><div
class="codeContent panelContent"><pre class="code-java">    <span
class="code-keyword">public</span> <span class="code-object">String</span> toString() {   
    Iterator&lt;E&gt; i = iterator();	<span class="code-keyword">if</span> (!
i.hasNext())	    <span class="code-keyword">return</span> <span
class="code-quote">"[]"</span>;	StringBuilder sb = <span class="code-keyword">new</span>
StringBuilder();	sb.append(<span class="code-quote">'['</span>);	<span
class="code-keyword">for</span> (;;) {	    E e = i.next();	    sb.append(e == <span
class="code-keyword">this</span> ? <span class="code-quote">"(<span
class="code-keyword">this</span> Collection)"</span> : e);	    <span
class="code-keyword">if</span> (! i.hasNext())		<span class="code-keyword">return</span>
sb.append(<span class="code-quote">']'</span>).toString();	    sb.append(<span
class="code-quote">", "</span>);	}    }</pre></div></div> 


New Comment: 
Currently, it outputs like (on trunk):DEBUG <span class="error">&#91;main&#93;</span>
2012-09-21 10:33:20,493 LeveledManifest.java (line 621) Estimating [<span
class="error">&#91;J@3834a1c8&#93;</span> compactions to do for
Keyspace1.Standard1Changing to <a
href="http://docs.oracle.com/javase/6/docs/api/java/util/Arrays.html#toString(long["
class="external-link"
rel="nofollow">http://docs.oracle.com/javase/6/docs/api/java/util/Arrays.html#toString(long[</a>])
generates:DEBUG <span class="error">&#91;main&#93;</span> 2012-09-21 10:37:29,181
LeveledManifest.java (line 621) Estimating <span class="error">&#91;0, 0, 0, 0, 0, 0, 0,
0&#93;</span> compactions to do for Keyspace1.Standard1So, just use Arrays.toString <img
class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png"
height="16" width="16" align="absmiddle" alt="" border="0"/>(edited: it is actually
long[]) 


New Comment: 
If we switch to explicitly calling a method, we need to add a "if logger.isDebugEnabled"
wrapper, otherwise the method call gets evaluated unnecessarily.But why is
ArrayList.toString not being invoked? 


New Comment: 
bq, But why is ArrayList.toString not being invoked?It is called. But because it is
passing primitive long array as varargs of Arrays.asList, ArrayList generated is actually
list of long[], length of 1 with first item containing long[].<br/>So when
ArrayList.toString is called, it prints out list of "long[].toString". 


