Pattern changes caused by commit: 09188c9e28d158589025f332cfeabe4be991f4c7

From: Decorator-1
To:   Decorator-0

From: Flyweight-4
To:   Flyweight-5

From: Strategy-1
To:   Strategy-0


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-5350.txt 

commit 09188c9e28d158589025f332cfeabe4be991f4c7
Author: Jonathan Ellis <jbellis@apache.org>

    acquire compactionlock during truncate
    patch by jbellis; reviewed by slebresne for CASSANDRA-3399



==================================
 Issue CASSANDRA-3399 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-3399] Truncate disregards running compactions when deleting sstables
-----------------

-----------------
Summary: Truncate disregards running compactions when deleting sstables
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Mon, 24 Oct 2011 14:24:02 +0000
-----------------

-----------------
Resolved at: Mon, 31 Oct 2011 22:10:10 +0000
-----------------

-----------------
Assigned to: Jonathan Ellis
-----------------

-----------------
Description: 

All truncation do is `cfs.markCompacted(truncatedSSTables)` without holding any lock or
anything. Which have the effect of actually deleting sstables that may be compacting. More
precisely there is three problems:
<ol>	<li>It removes those compacting sstables from the
current set of active sstables for the cfs. But when they are done compacting,
DataTracker.replaceCompactedSSTables() will be called and it assumes that the compacted
sstable are parts of the current set of active sstables. In other words, we'll get an
exception looking like the one of <a
href="https://issues.apache.org/jira/browse/CASSANDRA-3306" title="Failed streaming may
cause duplicate SSTable reference" class="issue-link"
data-issue-key="CASSANDRA-3306"><del>CASSANDRA-3306</del></a>.</li>	<li>The result of the
compaction will be added as a new active sstable (actually no, because the code will throw
an exception before because of the preceding point, but that's something we should
probably deal with).</li>	<li>Currently, compaction don't 'acquire references' on SSTR.
That's because the code assumes we won't compact twice the same sstable and that
compaction is the only mean to delete an sstable. With these two assumption, acquiring
references is not necessary, but truncate break that first assumption.</li></ol>
As for
solution, I see two possibilities:
<ol>	<li>make the compaction lock be per-cf instead of
global (which I think is easy and a good idea anyway) and grab the write lock to do the
markCompacted call. The big downside is that truncation will potentially take much
longer.</li>	<li>had two phases: mark the sstable that are not compacting as compacted and
set the dataTracker as 'truncated at', and let it deal with the other sstable when their
compaction is done. A bit like what is proposed for <a
href="https://issues.apache.org/jira/browse/CASSANDRA-3116" title="Compactions can
(seriously) delay schema migrations" class="issue-link"
data-issue-key="CASSANDRA-3116"><del>CASSANDRA-3116</del></a></li></ol> 

-----------------

-----------------
Comments: 

New Comment: 
I think we should:<ul class="alternate" type="square">	<li>grab the Big Lock for this
ticket</li>	<li>create another ticket to take a 3116 approach in 1.1</li>	<li>create
another ticket to break the Big Lock apart to a per-CF lock in 1.0.2</li></ul> 


New Comment: 
created <a href="https://issues.apache.org/jira/browse/CASSANDRA-3429" title="Fix
truncate/compaction race without locking" class="issue-link"
data-issue-key="CASSANDRA-3429"><del>CASSANDRA-3429</del></a> and <a
href="https://issues.apache.org/jira/browse/CASSANDRA-3430" title="Break Big Compaction
Lock apart" class="issue-link"
data-issue-key="CASSANDRA-3430"><del>CASSANDRA-3430</del></a>. 


New Comment: 
big lock patch attached. 


New Comment: 
(patch is against 1.0, will also commit to 0.8) 


New Comment: 
new patch w/ less crack smoking 


New Comment: 
+1 


New Comment: 
committed 


