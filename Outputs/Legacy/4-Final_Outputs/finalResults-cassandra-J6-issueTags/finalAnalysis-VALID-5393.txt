Pattern changes caused by commit: 287601d7f4d894687721aa54be8e822f3346d45a

From: Decorator-1
To:   Decorator-0

From: Flyweight-4
To:   Flyweight-5

From: Strategy-1
To:   Strategy-0


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-5393.txt 

commit 287601d7f4d894687721aa54be8e822f3346d45a
Author: Sylvain Lebresne <slebresne@apache.org>

    patch by slebresne; reviewed by yukim for CASSANDRA-3178



==================================
 Issue CASSANDRA-3178 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-3178] Counter shard merging is not thread safe
-----------------

-----------------
Summary: Counter shard merging is not thread safe
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Mon, 12 Sep 2011 14:58:17 +0000
-----------------

-----------------
Resolved at: Mon, 7 Nov 2011 15:38:03 +0000
-----------------

-----------------
Assigned to: Sylvain Lebresne
-----------------

-----------------
Description: 

The first part of the counter shard merging process is done during counter replication.
This was done there because it requires that all replica are made aware of the merging (we
could only rely on nodetool repair for that but that seems much too fragile, it's better
as just a safety net). However this part isn't thread safe as multiple threads can do the
merging for the same shard at the same time (which shouldn't really "corrupt" the counter
value per se, but result in an incorrect context).

Synchronizing that part of the code
would be very costly in term of performance, so instance I propose to move the part of the
shard merging done during replication to compaction. It's a better place anyway. The only
downside is that it means compaction will sometime send mutations to other node as a side
effect, which doesn't feel very clean but is probably not a big deal either.
 

-----------------

-----------------
Comments: 

New Comment: 
First patch move the code from counter replication to compaction (as described above). The
second patch adapt the code to work correctly with the move to compaction but also simply
and improve that code. 


New Comment: 
Note that the removal of flush_after_mins in 1.0 is a problem for this patch. The reason
is that we want to remove a shard corresponding to a NodeId for which we know no increment
has been made after time t. For that removal to be safe, we must make sure that compaction
includes everything that has been issued before time t. For that, current patch check that
the compaction has started after time t + 2 * flush_after_mins. I'll update the patch to
use the memtables creationTime instead. 


New Comment: 
Attaching v2, rebased and that remove the use of flush_after_mins. 


New Comment: 
Yuki, can you review? 


New Comment: 
LGTM on 0.8 branch. I think it's safe to apply this on 1.0, but before that I want to make
sure it works. Could you modify the patch so that I can test on 1.0? 


New Comment: 
Attaching patches rebased against 1.0 


New Comment: 
+!. 1.0 patch also works fine. 


New Comment: 
Committed, thanks 


