Pattern changes caused by commit: 4a604fbebc1d06ee569749f69a5cd608e26e4c89

From: Abstract Factory-3
To:   Abstract Factory-2

From: Factory Method-3
To:   Factory Method-2

From: Mediator-2
To:   Mediator-1


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-4046.txt 

commit 4a604fbebc1d06ee569749f69a5cd608e26e4c89
Author: Sylvain Lebresne <slebresne@apache.org>

    Avoid wrong empty result with secondary index when limit=1
    patch by slebresne; reviewed by jbellis for CASSANDRA-2628



==================================
 Issue CASSANDRA-2628 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-2628] Empty Result with Secondary Index Queries with "limit 1"
-----------------

-----------------
Summary: Empty Result with Secondary Index Queries with "limit 1"
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Mon, 9 May 2011 13:29:20 +0000
-----------------

-----------------
Resolved at: Thu, 12 May 2011 15:14:20 +0000
-----------------

-----------------
Assigned to: Sylvain Lebresne
-----------------

-----------------
Description: 

Empty result is returned by secondary index queries with "limit 1".  Cassandra returns
correct result for other numbers than "1" (e.g. limit 2, limit 3, etc.).  

You can
reproduce the problem with programs attached on <a
href="https://issues.apache.org/jira/browse/CASSANDRA-2406" title="Secondary index and
index expression problems" class="issue-link"
data-issue-key="CASSANDRA-2406"><del>CASSANDRA-2406</del></a>.  
<ul class="alternate"
type="square">	<li>1. Start Cassandra cluster. It consists of 3 cassandra nodes and
distributes data by ByteOrderedPartitioner. Initial tokens of those nodes are <span
class="error">&#91;&quot;31&quot;, &quot;32&quot;, &quot;33&quot;&#93;</span>.</li>	<li>2.
Create keyspace and column family, according to "create_table.cli",</li>	<li>3. Execute
"secondary_index_insertv2.py", inserting a few hundred columns to cluster</li>	<li>4.
Here, when you first use cassandra-cli and execute following lines, you can get correct
result.</li></ul><blockquote>
% bin/cassandra-cli<br/><span
class="error">&#91;default@unknown&#93;</span> connect localhost/9160;<br/><span
class="error">&#91;default@unknown&#93;</span> use SampleKS;<br/><span
class="error">&#91;default@SampleKS&#93;</span> get SampleCF where up = 'up' limit 3;     
         <br/>-------------------<br/>RowKey: 150<br/>=&gt; (column=date, value=150,
timestamp=1304937931)<br/>=&gt; (column=up, value=up,
timestamp=1304937931)<br/>-------------------<br/>RowKey: 151<br/>=&gt; (column=date,
value=151, timestamp=1304937932)<br/>=&gt; (column=up, value=up,
timestamp=1304937932)<br/>-------------------<br/>RowKey: 152<br/>=&gt; (column=date,
value=152, timestamp=1304937932)<br/>=&gt; (column=up, value=up,
timestamp=1304937932)<br/>3 Rows Returned.  
</blockquote>
On the other hand, if you set
limit to "1", you can reproduce the problem.
<blockquote>
<span
class="error">&#91;default@SampleKS&#93;</span> get SampleCF where up = 'up' and date &gt;
150 limit 1;<br/>0 Row Returned.
</blockquote>
There are two factors to cause this
problem:
<ul class="alternate" type="square">	<li>1. scanned first column doesn't match at
specified clause like "date &gt; 150".</li>	<li>2. "limit 1"</li></ul>
Only one factor
doesn't cause problem.  For example, I can get correct data when I specify as
following:
<ul class="alternate" type="square">	<li>"limit 1" -&gt; "limit
2"<blockquote>
<span class="error">&#91;default@SampleKS&#93;</span> get SampleCF where up
= 'up' and date &gt; 150 limit 2;<br/>-------------------<br/>RowKey: 151<br/>=&gt;
(column=date, value=151, timestamp=1304937932)<br/>=&gt; (column=up, value=up,
timestamp=1304937932)<br/>-------------------<br/>RowKey: 152<br/>=&gt; (column=date,
value=152, timestamp=1304937932)<br/>=&gt; (column=up, value=up,
timestamp=1304937932)<br/>2 Rows Returned.
</blockquote></li></ul><ul class="alternate"
type="square">	<li>"date &gt; 150" -&gt; "date &gt;= 150"<blockquote>
<span
class="error">&#91;default@SampleKS&#93;</span> get SampleCF where up = 'up' and date
&gt;= 150 limit 1;<br/>-------------------<br/>RowKey: 150<br/>=&gt; (column=date,
value=150, timestamp=1304937931)<br/>=&gt; (column=up, value=up,
timestamp=1304937931)<br/>1 Row Returned.
</blockquote></li></ul> 

-----------------

-----------------
Comments: 

New Comment: 
Attaching fix along with a unit test.Problem was we do some paging on the index using
clause.count as the page size. And 1 is a pretty bad page size.Thanks Muga for the report
and the clear instructions to reproduce. 


New Comment: 
To clarify, the problem is that since slice is inclusive-from-start, if our page size is
one a 2nd pass will get back the same row the first did, so the scan logic thinks there is
no more data and breaks. (since that is exactly what you will see if you just scanned the
last column in the index row.)+1 on the fix. 


New Comment: 
Committed 


