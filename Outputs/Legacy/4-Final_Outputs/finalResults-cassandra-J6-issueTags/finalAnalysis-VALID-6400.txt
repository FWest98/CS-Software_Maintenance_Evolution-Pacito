Pattern changes caused by commit: 5bd78edcce19720d2664780323b35898abeacc1b

From: Flyweight-1
To:   Flyweight-3

From: Mediator-1
To:   Mediator-2


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-6400.txt 

commit 5bd78edcce19720d2664780323b35898abeacc1b
Author: Brandon Williams <brandonwilliams@apache.org>

    Add max_streaming_retries instead of relying solely on the FD.
    Patch by brandonwilliams and yukim, reviewed by brandonwilliams for
    CASSANDRA-4051



==================================
 Issue CASSANDRA-4051 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-4051] Stream sessions can only fail via the FailureDetector
-----------------

-----------------
Summary: Stream sessions can only fail via the FailureDetector
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Wed, 14 Mar 2012 22:37:38 +0000
-----------------

-----------------
Resolved at: Wed, 11 Apr 2012 20:08:22 +0000
-----------------

-----------------
Assigned to: Yuki Morishita
-----------------

-----------------
Description: 

If for some reason, FileStreamTask itself fails more than the number of retry attempts
but gossip continues to work, the stream session will never be closed.  This is unlikely
to happen in practice since it requires blocking the storage port from new connections but
keeping the existing ones, however for the bulk loader this is especially problematic
since it doesn't have access to a failure detector and thus no way of knowing if a session
failed.
 

-----------------

-----------------
Comments: 

New Comment: 
It looks like we could extract/rebase the streaming changes from <a
href="https://issues.apache.org/jira/browse/CASSANDRA-3112" title="Make repair fail when
an unexpected error occurs" class="issue-link"
data-issue-key="CASSANDRA-3112"><del>CASSANDRA-3112</del></a>'s first patch to solve this
well enough for the bulk loader and BOF. 


New Comment: 
Updated patch extracted as mentioned, doesn't change any streaming behavior but does
provide a way to detect errors that <a
href="https://issues.apache.org/jira/browse/CASSANDRA-3112" title="Make repair fail when
an unexpected error occurs" class="issue-link"
data-issue-key="CASSANDRA-3112"><del>CASSANDRA-3112</del></a> and <a
href="https://issues.apache.org/jira/browse/CASSANDRA-4045" title="BOF fails when some
nodes are down" class="issue-link"
data-issue-key="CASSANDRA-4045"><del>CASSANDRA-4045</del></a> can build on. 


New Comment: 
Since <a href="https://issues.apache.org/jira/browse/CASSANDRA-3216" title="A
streamOutSession keeps sstables references forever if the remote end dies"
class="issue-link" data-issue-key="CASSANDRA-3216"><del>CASSANDRA-3216</del></a> added
IEndpointStateChangeSubscriber and IFailureDetectionEventListner to StreamOutSession, we
need to keep that functionality. I proposed modified version of <a
href="https://issues.apache.org/jira/browse/CASSANDRA-3112" title="Make repair fail when
an unexpected error occurs" class="issue-link"
data-issue-key="CASSANDRA-3112"><del>CASSANDRA-3112</del></a> except limiting retry part
on <a href="https://issues.apache.org/jira/browse/CASSANDRA-3817" title="Add failure
callback interface to streaming" class="issue-link"
data-issue-key="CASSANDRA-3817"><del>CASSANDRA-3817</del></a>, I would like to rebase that
patch and add retry, so that I can post it here. (I will post it soon.) 


New Comment: 
Patch attached based on <a href="https://issues.apache.org/jira/browse/CASSANDRA-3817"
title="Add failure callback interface to streaming" class="issue-link"
data-issue-key="CASSANDRA-3817"><del>CASSANDRA-3817</del></a> with retry limit.<br/>(I
think it is nice to have retry limit per stream session, so that we can configure, say, no
retry for bulk loading, which I think is enough. But that's beyond this issue.)&gt;
BrandonCan you test and see if BOF is OK with this patch? 


New Comment: 
BOF looks good, +1, committed. 


New Comment: 
Reopening because this only fixes the problem in one way, FileStreamTask can still fail
all 8 times and never close the session.  In general, outbound streaming's "fire and
forget" methodology is problematic for bulk loading. 


New Comment: 
v3 attached for 1.1 branch.It basically catches IOException on both sides and lets
sessions closed.<br/>I also implemented IStreamCallback#onFailure to make sure latches
count down to avoid process hang. 


