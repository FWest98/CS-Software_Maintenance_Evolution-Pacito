Pattern changes caused by commit: d1d372033b2f0a2ef0a63c9591b369d7789851db

From: Decorator-2
To:   Decorator-1

From: Facade-0
To:   Facade-1

From: Flyweight-2
To:   Flyweight-1

From: Mediator-3
To:   Mediator-1

From: Strategy-0
To:   Strategy-1


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-8086.txt 

commit d1d372033b2f0a2ef0a63c9591b369d7789851db
Author: Brandon Williams <brandonwilliams@apache.org>

    RangeStreamer throws when any range did not complete.
    Patch by brandonwilliams reviewed by yukim for CASSANDRA-5009



==================================
 Issue CASSANDRA-5009 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-5009] RangeStreamer has no way to report failures, allowing bootstrap/move etc to complete without data
-----------------

-----------------
Summary: RangeStreamer has no way to report failures, allowing bootstrap/move etc to complete without data
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Fri, 30 Nov 2012 18:59:30 +0000
-----------------

-----------------
Resolved at: Mon, 3 Dec 2012 20:33:24 +0000
-----------------

-----------------
Assigned to: Brandon Williams
-----------------

-----------------
Description: 

It looks like we fixed this for 1.2 by having RS.fetch() throw, but in 1.1 it does not
and there doesn't appear to be a way to detect an RS failure, which among other things
will cause bootstrap to succeed even though it failed to fetch any data.
 

-----------------

-----------------
Comments: 

New Comment: 
Actually we haven't completely fixed this in 1.2, because we rely on the FD notification
to fail but use phi * 2 to avoid a premature costly repair abortion, but the streaming can
fail out before that and thus fetch() will never raise an exception. 


New Comment: 
Patch to maintain a set of completed ranges, then check at the end that every range was
successful or raise an exception.This patch is against 1.1, but I'll note that when merged
RangeStreamer should look exactly the same.  That is to say, all the FD business will be
removed, as I can't figure out how it makes any sense to check the FD at all since we're
going to block on the streaming latch first.  If any ranges (not necessarily streams)
failed, then it's time to bail regardless of the FD, and if the FD does convict before
that it won't break us out of the latch wait. 


New Comment: 
two comments on the patch:<ul>	<li>looks like exceptionMessage is not used
anywhere</li>	<li>I think <em>completed</em> needs to be synchronized and
<em>completed.addAll(ranges)</em> should be placed before <em>latch.countDown()</em>,
otherwise we have chance to get incomplete completed set.</li></ul> 


New Comment: 
Oops, exceptionMessage was a vestige from my initial attempt at backporting the 1.2
version before I discovered it was flawed too.Updated patch removes that, moves the addAll
call before the latch countdown, and initiates the set with a concurrent hash map. 


New Comment: 
+1 


