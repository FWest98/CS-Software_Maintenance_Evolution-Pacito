Pattern changes caused by commit: 16d4c6c320cd98e3e7628a68bd6b4f20f9a365f4

From: Decorator-2
To:   Decorator-1

From: Flyweight-2
To:   Flyweight-1

From: Mediator-3
To:   Mediator-1

From: Strategy-0
To:   Strategy-1

From: Template Method-3
To:   Template Method-2


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-6765.txt 

commit 16d4c6c320cd98e3e7628a68bd6b4f20f9a365f4
Author: Jonathan Ellis <jbellis@apache.org>

    enable keys cache and rows cache on index CFs based on setting in data CF
    patch by yukim; reviewed by jbellis for CASSANDRA-4197



==================================
 Issue CASSANDRA-4197 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-4197] Index caching
-----------------

-----------------
Summary: Index caching
-----------------

-----------------
Issue type: Improvement
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Mon, 30 Apr 2012 15:27:25 +0000
-----------------

-----------------
Resolved at: Wed, 9 May 2012 16:24:47 +0000
-----------------

-----------------
Assigned to: Yuki Morishita
-----------------

-----------------
Description: 

Currently, the "hidden" CFs backing secondary indexes are created with Caching.NONE,
which can result in slower-than-expected index queries.
 

-----------------

-----------------
Comments: 

New Comment: 
I think we can do this without having to expose these to be manually tuned (which IMO is
the Wrong Solution):<ul class="alternate" type="square">	<li>If the parent CF has row
caching enabled, enable row caching on the 2I CF if our stats indicate that it is high
cardinality; otherwise enable key caching</li>	<li>If the parent CF has key caching
enabled, enable key caching on the 2I CF</li>	<li>Otherwise leave the 2I CF at
Caching.NONE</li></ul> 


New Comment: 
Patch to set index CF's cache based on parent CF's setting and indexed column's
cardinality.Here I set the bar to determine "high" cardinality on rows/cols ratio in index
CF. Number of rows in index CF is equal to cardinality, and if the ratio is greater than
1, then one can determine if indexed column has high cardinality. 


