Pattern changes caused by commit: c93ca8e1a92513450d8e6ca6d0b2b9d92114421f

From: Decorator-1
To:   Decorator-0

From: Flyweight-4
To:   Flyweight-5

From: Strategy-1
To:   Strategy-0


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-5302.txt 

commit c93ca8e1a92513450d8e6ca6d0b2b9d92114421f
Author: Sylvain Lebresne <slebresne@apache.org>

    Fix race in AntiEntropyService
    patch by slebresne; reviewed by jbellis for CASSANDRA-3400



==================================
 Issue CASSANDRA-3400 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-3400] ConcurrentModificationException during nodetool repair
-----------------

-----------------
Summary: ConcurrentModificationException during nodetool repair
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Mon, 24 Oct 2011 16:41:14 +0000
-----------------

-----------------
Resolved at: Tue, 25 Oct 2011 15:52:29 +0000
-----------------

-----------------
Assigned to: Sylvain Lebresne
-----------------

-----------------
Description: 

When running a nodetool repair, the following exception can be thrown:

ERROR <span
class="error">&#91;AntiEntropySessions:12&#93;</span> 2011-10-24 11:17:52,154
AbstractCassandraDaemon.java (line 139) Fatal exception in thread Thread<span
class="error">&#91;AntiEntropySessions:12,5,RMI
Runtime&#93;</span><br/>java.lang.RuntimeException:
java.util.ConcurrentModificationException<br/>at
org.apache.cassandra.utils.WrappedRunnable.run(WrappedRunnable.java:34)<br/>at
java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)<br/>at
java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)<br/>at
java.util.concurrent.FutureTask.run(FutureTask.java:138)<br/>at
java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)<br/>at
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)<br/>at
java.lang.Thread.run(Thread.java:619)<br/>Caused by:
java.util.ConcurrentModificationException<br/>at
java.util.HashMap$HashIterator.nextEntry(HashMap.java:793)<br/>at
java.util.HashMap$KeyIterator.next(HashMap.java:828)<br/>at
org.apache.cassandra.service.AntiEntropyService$RepairSession$RepairJob.sendTreeRequests(AntiEntropyService.java:784)<br/>at
org.apache.cassandra.service.AntiEntropyService$RepairSession.runMayThrow(AntiEntropyService.java:680)<br/>at
org.apache.cassandra.utils.WrappedRunnable.run(WrappedRunnable.java:30)<br/>... 6 more
 

-----------------

-----------------
Comments: 

New Comment: 
A few notes as I discover them:This error occurs every time the nodetool runs
repair--repair effectively does not work on this node now. 


New Comment: 
There is a race between when we send requests and when start handling their result, i.e if
a response comes before all the requests have been sent. It's fairly unlikely to happen
imho but given than one request is local, if there is no and barely any data to build the
merkle tree from, I suppose it's possible the local response comes quickly enough.Patch
attached to resolve the issue. 


New Comment: 
+1nit: we never use thread.interrupt() so custom is to throw AssertionError for
InterruptedException 


New Comment: 
Committed (with the AssertionError change) 


