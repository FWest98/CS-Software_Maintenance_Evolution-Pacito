Pattern changes caused by commit: d7261c526b0e45899396fabd7f14ef4622874dbd

From: Mediator-2
To:   Mediator-1


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-4521.txt 

commit d7261c526b0e45899396fabd7f14ef4622874dbd
Author: Brandon Williams <brandonwilliams@apache.org>

    DES shouldn't ignore nodes when the read repair chance is zero.
    Patch by brandonwilliams reviewed by Paul Cannon for CASSANDRA-2662



==================================
 Issue CASSANDRA-2662 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-2662] Nodes get ignored by dynamic snitch when read repair chance is zero
-----------------

-----------------
Summary: Nodes get ignored by dynamic snitch when read repair chance is zero
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Wed, 18 May 2011 10:55:32 +0000
-----------------

-----------------
Resolved at: Thu, 28 Jul 2011 23:43:24 +0000
-----------------

-----------------
Assigned to: Brandon Williams
-----------------

-----------------
Description: 

DynamicEndpointSnitch falls back to subsnitch when one of the scores of the endpoints
being compared is missing.

This leads to a stable order of hosts until reads will lead to
recorded scores. <br/>If setting read repair chance to 0 and reads are performed with
quorum then (rf - # quorum nodes) will never get reads.
 

-----------------

-----------------
Comments: 

New Comment: 
One very simple fix is to initialize scores with 0 which forces at least one read. Dunno
if thats a good idea when using multi dc snitches ... 


New Comment: 
To clarify what this patch does: on the first round, behavior is unchanged, it will fall
back to the subsnitch as usual.  On the second round however, the nodes will have scores
so the dynamic snitch will determine the best host.  This seems like a good idea, but I
think we should proceed cautiously with regard to <a
href="https://issues.apache.org/jira/browse/CASSANDRA-1314" title="snitch that prefers a
single replica for all reads to a given key" class="issue-link"
data-issue-key="CASSANDRA-1314"><del>CASSANDRA-1314</del></a>.  This is certainly going to
blow the cache on the second round, since the unpinned hosts at zero are guaranteed to be
ranked higher than the pinned one.  However, in the current implementation, the badness
threshold in <a href="https://issues.apache.org/jira/browse/CASSANDRA-1519" title="Add
threshold to dynamic snitch" class="issue-link"
data-issue-key="CASSANDRA-1519"><del>CASSANDRA-1519</del></a> can never take effect at RR
= 0 since the scores of the other replicas will always be null, and thus diversion to the
subsnitch will always occur, returning the pinned replica.  With this patch, the second
replica is likely to end up being the pinned one, which I think will be ok, as long as all
coordinators agree, though this might not always be the case. 


New Comment: 
Thinking this through a bit more:Given coordinator A, and replicas X, Y, and Z (in
subsnitch order), on the first round X will be chosen, and let's say it receives a score
of 1.  With the patch, at this point Y and Z will be initialized with zero.  On the next
round, Y will be chosen, and let's say it receives a score of or near 1, depending on
network latency.  On the third round, Z will be chosen, and let's say it also receives a
score similar to Y.  Now the cache is hot on all nodes, and subsequent reads have the
possibility to oscillate between all three based on network latency variance.  This can be
mitigated though with the badness threshold.  With the badness threshold on, the first
round will occur as before, but subsequent rounds will continue to use X until it degrades
past the threshold, at which point they will use Y, until the dynamic snitch reset()s, at
which point everything will repeat.  I don't think this is harmful to <a
href="https://issues.apache.org/jira/browse/CASSANDRA-1314" title="snitch that prefers a
single replica for all reads to a given key" class="issue-link"
data-issue-key="CASSANDRA-1314"><del>CASSANDRA-1314</del></a> after all. 


New Comment: 
There is one problem with this patch, rather that initializing the score to zero, it needs
to create an empty AdaptiveLatencyTracker for them before checking the scores, otherwise
DES.reset() will never have an effect on those hosts. 


New Comment: 
Updated patch ensures ALTs are created for the hosts by using receiveTiming 


New Comment: 
+1 


New Comment: 
Committed. 


New Comment: 
Integrated in Cassandra-0.7 #537 (See <a
href="https://builds.apache.org/job/Cassandra-0.7/537/" class="external-link"
rel="nofollow">https://builds.apache.org/job/Cassandra-0.7/537/</a>)<br/>    DES shouldn't
ignore nodes when the read repair chance is zero.<br/>Patch by brandonwilliams reviewed by
Paul Cannon for <a href="https://issues.apache.org/jira/browse/CASSANDRA-2662"
title="Nodes get ignored by dynamic snitch when read repair chance is zero"
class="issue-link"
data-issue-key="CASSANDRA-2662"><del>CASSANDRA-2662</del></a>brandonwilliams : <a
href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;view=rev&amp;rev=1152038"
class="external-link"
rel="nofollow">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;view=rev&amp;rev=1152038</a><br/>Files
:
<ul>	<li>/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/locator/DynamicEndpointSnitch.java</li></ul> 


