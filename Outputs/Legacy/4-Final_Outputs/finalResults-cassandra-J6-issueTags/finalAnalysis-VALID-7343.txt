Pattern changes caused by commit: b0342978a0a444b067fae25f4bf9a2f7e5dca0e3

From: Decorator-2
To:   Decorator-1

From: Flyweight-2
To:   Flyweight-1

From: Mediator-3
To:   Mediator-1

From: Strategy-0
To:   Strategy-1


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-7343.txt 

commit b0342978a0a444b067fae25f4bf9a2f7e5dca0e3
Author: Jonathan Ellis <jbellis@apache.org>

    avoid recursion in leveled compaction
    patch by jbellis; reviewed by yukim for CASSANDRA-4587



==================================
 Issue CASSANDRA-4587 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-4587] StackOverflowError in LeveledCompactionStrategy$LeveledScanner.computeNext
-----------------

-----------------
Summary: StackOverflowError in LeveledCompactionStrategy$LeveledScanner.computeNext
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Thu, 30 Aug 2012 09:20:55 +0000
-----------------

-----------------
Resolved at: Thu, 30 Aug 2012 18:46:59 +0000
-----------------

-----------------
Assigned to: Jonathan Ellis
-----------------

-----------------
Description: 

while running nodetool repair, the following was logged in system.log:

ERROR <span
class="error">&#91;ValidationExecutor:2&#93;</span> 2012-08-30 10:58:19,490
AbstractCassandraDaemon.java (line 134) Exception in thread Thread<span
class="error">&#91;ValidationExecutor:2,1,main&#93;</span><br/>java.lang.StackOverflowError<br/>
       at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:76)<br/>        at
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:411)<br/>        at
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:466)<br/>        at
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:561)<br/>        at
java.lang.StringCoding$StringEncoder.encode(StringCoding.java:258)<br/>        at
java.lang.StringCoding.encode(StringCoding.java:290)<br/>        at
java.lang.String.getBytes(String.java:954)<br/>        at
java.io.RandomAccessFile.open(Native Method)<br/>        at
java.io.RandomAccessFile.&lt;init&gt;(RandomAccessFile.java:233)<br/>        at
org.apache.cassandra.io.util.RandomAccessReader.&lt;init&gt;(RandomAccessReader.java:67)<br/>
       at
org.apache.cassandra.io.compress.CompressedRandomAccessReader.&lt;init&gt;(CompressedRandomAccessReader.java:64)<br/>
       at
org.apache.cassandra.io.compress.CompressedRandomAccessReader.open(CompressedRandomAccessReader.java:46)<br/>
       at
org.apache.cassandra.io.sstable.SSTableReader.openDataReader(SSTableReader.java:1007)<br/>
       at
org.apache.cassandra.io.sstable.SSTableScanner.&lt;init&gt;(SSTableScanner.java:56)<br/>  
     at
org.apache.cassandra.io.sstable.SSTableBoundedScanner.&lt;init&gt;(SSTableBoundedScanner.java:41)<br/>
       at
org.apache.cassandra.io.sstable.SSTableReader.getDirectScanner(SSTableReader.java:869)<br/>
       at
org.apache.cassandra.db.compaction.LeveledCompactionStrategy$LeveledScanner.computeNext(LeveledCompactionStrategy.java:247)<br/>
       at
org.apache.cassandra.db.compaction.LeveledCompactionStrategy$LeveledScanner.computeNext(LeveledCompactionStrategy.java:240)<br/>
       at
org.apache.cassandra.db.compaction.LeveledCompactionStrategy$LeveledScanner.computeNext(LeveledCompactionStrategy.java:248)<br/>
       at
org.apache.cassandra.db.compaction.LeveledCompactionStrategy$LeveledScanner.computeNext(LeveledCompactionStrategy.java:240)<br/>
       at
org.apache.cassandra.db.compaction.LeveledCompactionStrategy$LeveledScanner.computeNext(LeveledCompactionStrategy.java:248)<br/>
       at
org.apache.cassandra.db.compaction.LeveledCompactionStrategy$LeveledScanner.computeNext(LeveledCompactionStrategy.java:240)<br/>
       at
org.apache.cassandra.db.compaction.LeveledCompactionStrategy$LeveledScanner.computeNext(LeveledCompactionStrategy.java:248)<br/>
       at
org.apache.cassandra.db.compaction.LeveledCompactionStrategy$LeveledScanner.computeNext(LeveledCompactionStrategy.java:240)<br/>
       at
org.apache.cassandra.db.compaction.LeveledCompactionStrategy$LeveledScanner.computeNext(LeveledCompactionStrategy.java:248)<br/>.

(about
900 lines deleted)<br/>.

        at
org.apache.cassandra.db.compaction.LeveledCompactionStrategy$LeveledScanner.computeNext(LeveledCompactionStrategy.java:240)<br/>
       at
org.apache.cassandra.db.compaction.LeveledCompactionStrategy$LeveledScanner.computeNext(LeveledCompactionStrategy.java:248)<br/>
       at
org.apache.cassandra.db.compaction.LeveledCompactionStrategy$LeveledScanner.computeNext(LeveledCompactionStrategy.java:202)<br/>
       at
com.google.common.collect.AbstractIterator.tryToComputeNext(AbstractIterator.java:140)<br/>
       at
com.google.common.collect.AbstractIterator.hasNext(AbstractIterator.java:135)<br/>       
at org.apache.cassandra.utils.MergeIterator$Candidate.advance(MergeIterator.java:147)<br/>
       at
org.apache.cassandra.utils.MergeIterator$ManyToOne.&lt;init&gt;(MergeIterator.java:90)<br/>
       at org.apache.cassandra.utils.MergeIterator.get(MergeIterator.java:47)<br/>       
at
org.apache.cassandra.db.compaction.CompactionIterable.iterator(CompactionIterable.java:60)<br/>
       at
org.apache.cassandra.db.compaction.CompactionManager.doValidationCompaction(CompactionManager.java:703)<br/>
       at
org.apache.cassandra.db.compaction.CompactionManager.access$600(CompactionManager.java:69)<br/>
       at
org.apache.cassandra.db.compaction.CompactionManager$8.call(CompactionManager.java:442)<br/>
       at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)<br/>       
at java.util.concurrent.FutureTask.run(FutureTask.java:166)<br/>        at
java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)<br/>      
 at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)<br/>  
     at java.lang.Thread.run(Thread.java:636)
 

-----------------

-----------------
Comments: 

New Comment: 
patch to simplify LeveledScanner.computeNext and avoid recursion 


New Comment: 
+1 


