Pattern changes caused by commit: 08c654601f8a54d50195c9a96939be47a428fec9

From: Decorator-2
To:   Decorator-1

From: Facade-1
To:   Facade-0

From: Flyweight-2
To:   Flyweight-4

From: Mediator-3
To:   Mediator-2

From: Strategy-0
To:   Strategy-1


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-7368.txt 

commit 08c654601f8a54d50195c9a96939be47a428fec9
Author: Jonathan Ellis <jbellis@apache.org>

    increase Xss to 160k to accomodate latest 1.6 JVMs
    patch by jbellis; reviewed by brandonwilliams for CASSANDRA-4602



==================================
 Issue CASSANDRA-4602 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-4602] Stack Size on Sun JVM 1.6.0_33 must be at least 160k
-----------------

-----------------
Summary: Stack Size on Sun JVM 1.6.0_33 must be at least 160k
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Sun, 2 Sep 2012 23:34:08 +0000
-----------------

-----------------
Resolved at: Mon, 24 Sep 2012 19:50:04 +0000
-----------------

-----------------
Assigned to: Jonathan Ellis
-----------------

-----------------
Description: 

I started a fresh Cassandra 1.1.4 install with Sun JVM 1.6.35.

On startup I got this in
output.log
<div class="preformatted panel" style="border-width: 1px;"><div
class="preformattedContent panelContent"><pre>The stack size specified is too small,
Specify at least 160kCannot create Java VMService exit with a return value of
1</pre></div></div>
Remembering <a
href="https://issues.apache.org/jira/browse/CASSANDRA-4275" title="Oracle Java 1.7 u4 does
not allow Xss128k" class="issue-link"
data-issue-key="CASSANDRA-4275"><del>CASSANDRA-4275</del></a> I monkeyed around and
started the JVM with -Xss160k the same as Java 7. I then got
<div class="code panel"
style="border-width: 1px;"><div class="codeContent panelContent"><pre
class="code-java">ERROR [WRITE-/192.168.1.12] 2012-08-31 01:43:29,865
AbstractCassandraDaemon.java (line 134) Exception in thread <span
class="code-object">Thread</span>[WRITE-/192.168.1.12,5,main]java.lang.StackOverflowError	at
java.net.SocketOutputStream.socketWrite0(Native Method)	at
java.net.SocketOutputStream.socketWrite(Unknown Source)	at
java.net.SocketOutputStream.write(Unknown Source)	at
java.io.BufferedOutputStream.flushBuffer(Unknown Source)	at
java.io.BufferedOutputStream.flush(Unknown Source)	at
java.io.DataOutputStream.flush(Unknown Source)	at
org.apache.cassandra.net.OutboundTcpConnection.writeConnected(OutboundTcpConnection.java:156)	at
org.apache.cassandra.net.OutboundTcpConnection.run(OutboundTcpConnection.java:126)</pre></div></div>
Same
as <a href="https://issues.apache.org/jira/browse/CASSANDRA-4442" title="Stack size
settings in cassandra-env.sh assume 64-bit x86" class="issue-link"
data-issue-key="CASSANDRA-4442"><del>CASSANDRA-4442</del></a>

At which point I dropped
back to Java 6.33. 

<a href="https://issues.apache.org/jira/browse/CASSANDRA-4457"
title="Find the cause for the need for a larger stack size with jdk 7" class="issue-link"
data-issue-key="CASSANDRA-4457"><del>CASSANDRA-4457</del></a> bumped the stack size to 180
for java 7, should we also do this for Java 6.33+ ?
 

-----------------

-----------------
Comments: 

New Comment: 
Were you able to find anything in the release notes on this?  I couldn't. 


New Comment: 
patch against 1.0 to change default to 160 


New Comment: 
+1 


New Comment: 
committed 


New Comment: 
Apparently this is due to HotSpot fix 7059899 <span class="error">&#91;1&#93;</span> on
1.6.0_34 that increased "StackShadowPages"'s default to 20, since a change in
socketWrite's native implementation required more stack space. Increased StackShadowPages
might require increased stack size (-Xss) <span class="error">&#91;2&#93;</span> so that
upon a call to a native method, there would be at least "StackShadowPages" stack space
available.<span class="error">&#91;1&#93;</span> <a
href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=7059899" class="external-link"
rel="nofollow">http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=7059899</a><br/><span
class="error">&#91;2&#93;</span> <a
href="http://www.oracle.com/technetwork/java/javase/crashes-137240.html"
class="external-link"
rel="nofollow">http://www.oracle.com/technetwork/java/javase/crashes-137240.html</a> 


New Comment: 
Thanks, Omid! 


New Comment: 
cassandra 1.1.5<ol>	<li>java -version<br/>java version "1.6.0_35"<br/>Java(TM) SE Runtime
Environment (build 1.6.0_35-b10)<br/>Java HotSpot(TM) 64-Bit Server VM (build 20.10-b01,
mixed mode)<br/>#</li></ol>ERROR 17:39:53,363 Exception in thread Thread<span
class="error">&#91;Thrift:4040,5,main&#93;</span><br/>java.lang.StackOverflowError<br/>   
    at java.net.SocketInputStream.socketRead0(Native Method)<br/>        at
java.net.SocketInputStream.read(Unknown Source)<br/>        at
java.io.BufferedInputStream.fill(Unknown Source)<br/>        at
java.io.BufferedInputStream.read1(Unknown Source)<br/>        at
java.io.BufferedInputStream.read(Unknown Source)<br/>        at
org.apache.thrift.transport.TIOStreamTransport.read(TIOStreamTransport.java:127)<br/>     
  at org.apache.thrift.transport.TTransport.readAll(TTransport.java:84)<br/>        at
org.apache.thrift.transport.TFramedTransport.readFrame(TFramedTransport.java:129)<br/>    
   at org.apache.thrift.transport.TFramedTransport.read(TFramedTransport.java:101)<br/>   
    at org.apache.thrift.transport.TTransport.readAll(TTransport.java:84)<br/>        at
org.apache.thrift.protocol.TBinaryProtocol.readAll(TBinaryProtocol.java:378)<br/>       
at org.apache.thrift.protocol.TBinaryProtocol.readI32(TBinaryProtocol.java:297)<br/>      
 at
org.apache.thrift.protocol.TBinaryProtocol.readMessageBegin(TBinaryProtocol.java:204)<br/>
       at org.apache.thrift.TBaseProcessor.process(TBaseProcessor.java:22)<br/>        at
org.apache.cassandra.thrift.CustomTThreadPoolServer$WorkerProcess.run(CustomTThreadPoolServer.java:186)<br/>
       at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(Unknown Source)<br/>     
  at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)<br/>        at
java.lang.Thread.run(Unknown Source)stack shoud be set to minimum 192k 


New Comment: 
it looks like you are sending large-ish Thrift messages.  I'm fine with saying that if
you're going to do that, you need to push up the stack size manually. 


