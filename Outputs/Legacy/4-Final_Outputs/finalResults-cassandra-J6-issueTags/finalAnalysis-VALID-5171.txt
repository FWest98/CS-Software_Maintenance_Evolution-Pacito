Pattern changes caused by commit: 78446d67ac40ac3ba39c181a6c41587482c18c42

From: Facade-1
To:   Facade-0


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-5171.txt 

commit 78446d67ac40ac3ba39c181a6c41587482c18c42
Author: Jonathan Ellis <jbellis@apache.org>

    run compaction and hinted handoff threads at MIN_PRIORITY
    patch by jbellis; reviewed by brandonwilliams for CASSANDRA-3308



==================================
 Issue CASSANDRA-3308 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-3308] Add compaction_thread_priority back
-----------------

-----------------
Summary: Add compaction_thread_priority back
-----------------

-----------------
Issue type: Improvement
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Tue, 4 Oct 2011 19:44:44 +0000
-----------------

-----------------
Resolved at: Fri, 7 Oct 2011 03:52:13 +0000
-----------------

-----------------
Assigned to: Jonathan Ellis
-----------------

-----------------
Description: 

In <a href="https://issues.apache.org/jira/browse/CASSANDRA-3104" title="remove
compaction_thread_priority setting" class="issue-link"
data-issue-key="CASSANDRA-3104"><del>CASSANDRA-3104</del></a>, this was removed with the
following reasoning:
<blockquote>
compaction_throughput_mb_per_sec is a more effective
throttle on compaction.
</blockquote>
This turns out to be false in the majority of
deployments.  In many (if not most) situations, compaction is actually CPU bound, not IO
bound, so multithreaded compaction is generally helpful, but the priority needs to be
lowered in order to prevent it from stealing CPU used for reads/writes.

Compaction is
always CPU bound on both real hardware (sw raid0 with two SATA disks) and on a rackspace
cloud server (though my understanding is they are back by a raid10 array underneath)
however I suspect even a single drive is fast enough to handle the ~20MB/s that compaction
is currently performing when unthrottled.
 

-----------------

-----------------
Comments: 

New Comment: 
<blockquote>compaction is actually CPU bound, not IO bound</blockquote>Even so, I think
mbps is a easier tuning handle than thread priority (which is notorious for becoming a
no-op depending on scheduler/platform). 


New Comment: 
<blockquote>Even so, I think mbps is a easier tuning handle than thread priority (which is
notorious for becoming a no-op depending on scheduler/platform).</blockquote>Actually,
it's not, you have to experiment to know where to set it, and it's hardware-specific.  If
I have a platform where I can just lower the priority, I'd like to at least have the knob
to turn. 


New Comment: 
patch to use MIN_PRIORITY for compaction and HH threads.  (users who don't want this can
disable it by removing the UseThreadPriorities JVM option from cassandra-env.sh) 


New Comment: 
+1 


