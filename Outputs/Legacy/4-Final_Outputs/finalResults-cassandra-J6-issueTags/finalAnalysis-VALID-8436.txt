Pattern changes caused by commit: 713bba5af085273650b8202b4a7c225b5a094b5f

From: Abstract Factory-1
To:   Abstract Factory-2

From: Factory Method-1
To:   Factory Method-2

From: Decorator-2
To:   Decorator-1

From: Facade-0
To:   Facade-1

From: Flyweight-2
To:   Flyweight-1

From: Mediator-3
To:   Mediator-1

From: Strategy-0
To:   Strategy-1


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-8436.txt 

commit 713bba5af085273650b8202b4a7c225b5a094b5f
Author: Brandon Williams <brandonwilliams@apache.org>

    Calculate pending ranges asynchronously.
    Patch by brandonwilliams, reviewed by jbellis for CASSANDRA-5135



==================================
 Issue CASSANDRA-5135 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-5135] calculatePendingRanges could be asynchronous
-----------------

-----------------
Summary: calculatePendingRanges could be asynchronous
-----------------

-----------------
Issue type: Improvement
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Wed, 9 Jan 2013 14:57:35 +0000
-----------------

-----------------
Resolved at: Mon, 14 Jan 2013 12:27:37 +0000
-----------------

-----------------
Assigned to: Brandon Williams
-----------------

-----------------
Description: 

In the vein of <a href="https://issues.apache.org/jira/browse/CASSANDRA-3881"
title="reduce computational complexity of processing topology changes" class="issue-link"
data-issue-key="CASSANDRA-3881"><del>CASSANDRA-3881</del></a>, cPR is expensive and can
end up dominating the gossip thread, causing all sorts of havoc.  One simple way we can
triage this is to simply give it it<br/>s own executor with a queue size of 1 (since we
don't actually need to recalculate for every host we see if we suddenly see many of them)
and do the calculation asynchronously, freeing up the gossiper.
 

-----------------

-----------------
Comments: 

New Comment: 
Patch to signal the executor to recalculate in handleState* and then wait for it in places
where we expect it to be completed. 


New Comment: 
I think you want a DTPE not a JMXETPE.  You'll still need to
setRejectedExecutionHandler(DiscardPolicy) but you won't get the extra onInitialRejection
baggage from JMXETPE.Do we need to update RING_DELAY to accomodate long cPR times?Nit:
just use List.size instead of counting the tables processed 


New Comment: 
(I note for the record that <a href="https://issues.apache.org/jira/browse/CASSANDRA-3881"
title="reduce computational complexity of processing topology changes" class="issue-link"
data-issue-key="CASSANDRA-3881"><del>CASSANDRA-3881</del></a> is too complex to risk
destabilizing 1.1 with, but a band-aid like this may be reasonable.) 


New Comment: 
<blockquote>I think you want a DTPE not a JMXETPE.</blockquote>Actually I think being able
to see the progress via JMX is useful, especially if you're encountering this
problem.<blockquote>You'll still need to
setRejectedExecutionHandler(DiscardPolicy)</blockquote>Oops, totally missed
that.<blockquote>Do we need to update RING_DELAY to accomodate long cPR
times?</blockquote>RING_DELAY is orthogonal, that is just how long we wait until we're
sure we've seen the ring accurately.  Once divorced from gossip, cPR can theoretically
takes as long as it wants, since a bootstrapping node can just sit there and be a fat
client until it's ready.v2 fixes the handler and the nit. 


New Comment: 
You might want to extend the handler to count rejection stats the way our default one
does, but either way +1 from me. 


