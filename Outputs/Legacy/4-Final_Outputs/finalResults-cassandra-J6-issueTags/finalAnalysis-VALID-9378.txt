Pattern changes caused by commit: 7d2ce5f957b1fb392617c1ff05a561571eccd593

From: Abstract Factory-1
To:   Abstract Factory-2

From: Factory Method-1
To:   Factory Method-2

From: Decorator-2
To:   Decorator-1

From: Facade-0
To:   Facade-1

From: Flyweight-2
To:   Flyweight-1

From: Mediator-3
To:   Mediator-1


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-9378.txt 

commit 7d2ce5f957b1fb392617c1ff05a561571eccd593
Author: Brandon Williams <brandonwilliams@apache.org>

    Fix NPE in Pig's widerow mode.
    Patch by Sheetal Gorsani and Jeremy Hanna, reviewed by brandonwilliams
    for CASSANDRA-5488



==================================
 Issue CASSANDRA-5488 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-5488] CassandraStorage throws NullPointerException (NPE) when widerows is set to 'true'
-----------------

-----------------
Summary: CassandraStorage throws NullPointerException (NPE) when widerows is set to 'true'
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Wed, 17 Apr 2013 19:51:45 +0000
-----------------

-----------------
Resolved at: Wed, 22 May 2013 16:21:42 +0000
-----------------

-----------------
Assigned to: Sheetal Gosrani
-----------------

-----------------
Description: 

CassandraStorage throws NPE when widerows is set to 'true'. 

2 problems in
getNextWide:<br/>1. Creation of tuple without specifying size<br/>2. Calling addKeyToTuple
on lastKey instead of key

java.lang.NullPointerException<br/>    at
org.apache.cassandra.utils.ByteBufferUtil.string(ByteBufferUtil.java:167)<br/>    at
org.apache.cassandra.utils.ByteBufferUtil.string(ByteBufferUtil.java:124)<br/>    at
org.apache.cassandra.cql.jdbc.JdbcUTF8.getString(JdbcUTF8.java:73)<br/>    at
org.apache.cassandra.cql.jdbc.JdbcUTF8.compose(JdbcUTF8.java:93)<br/>    at
org.apache.cassandra.db.marshal.UTF8Type.compose(UTF8Type.java:34)<br/>    at
org.apache.cassandra.db.marshal.UTF8Type.compose(UTF8Type.java:26)<br/>    at
org.apache.cassandra.hadoop.pig.CassandraStorage.addKeyToTuple(CassandraStorage.java:313)<br/>
   at
org.apache.cassandra.hadoop.pig.CassandraStorage.getNextWide(CassandraStorage.java:196)<br/>
   at
org.apache.cassandra.hadoop.pig.CassandraStorage.getNext(CassandraStorage.java:224)<br/>  
 at
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigRecordReader.nextKeyValue(PigRecordReader.java:194)<br/>
   at
org.apache.hadoop.mapred.MapTask$NewTrackingRecordReader.nextKeyValue(MapTask.java:532)<br/>
   at org.apache.hadoop.mapreduce.MapContext.nextKeyValue(MapContext.java:67)<br/>    at
org.apache.hadoop.mapreduce.Mapper.run(Mapper.java:143)<br/>    at
org.apache.hadoop.mapred.MapTask.runNewMapper(MapTask.java:764)<br/>    at
org.apache.hadoop.mapred.MapTask.run(MapTask.java:370)<br/>    at
org.apache.hadoop.mapred.Child$4.run(Child.java:255)<br/>    at
java.security.AccessController.doPrivileged(Native Method)<br/>    at
javax.security.auth.Subject.doAs(Subject.java:415)<br/>    at
org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1121)<br/> 
  at org.apache.hadoop.mapred.Child.main(Child.java:249)<br/>2013-04-16 12:28:03,671 INFO
org.apache.hadoop.mapred.Task: Runnning cleanup for the task
 

-----------------

-----------------
Comments: 

New Comment: 
This patch (5488.txt) fixes the issue. 


New Comment: 
Can you add a test to examples/pig/test/test_storage.pig that demonstrates the problem? 


New Comment: 
I've reproduced this with 1.1.9 as well. 


New Comment: 
Looks like it's from <a href="https://issues.apache.org/jira/browse/CASSANDRA-5098"
title="CassandraStorage doesn&#39;t decode name in widerow mode" class="issue-link"
data-issue-key="CASSANDRA-5098"><del>CASSANDRA-5098</del></a> 


New Comment: 
An alternative way to do it with consolidating the two methods and checking for null in
that method. 


New Comment: 
Committed v2, and also flipped the copy test to use widerow mode as a smoke test. 


New Comment: 
There ended up being a secondary problem that was hidden by the first NPE.  It seems to be
related to getting the AbstractType.  The NPE was for this line: <a
href="https://github.com/apache/cassandra/blob/cassandra-1.1/src/java/org/apache/cassandra/hadoop/pig/CassandraStorage.java#L307"
class="external-link"
rel="nofollow">https://github.com/apache/cassandra/blob/cassandra-1.1/src/java/org/apache/cassandra/hadoop/pig/CassandraStorage.java#L307</a>
which I decomposed to find out what it was NPEing on, and got this:<div class="code panel"
style="border-width: 1px;"><div class="codeContent panelContent"><pre class="code-java">  
         List&lt;AbstractType&gt; atList = getDefaultMarshallers(cfDef);           
AbstractType at = atList.get(2);            <span class="code-object">Object</span> o =
at.compose(key); <span class="code-comment">//NPE from <span
class="code-keyword">this</span> line</span>            setTupleValue(tuple, 0, o);       
    <span class="code-comment">//setTupleValue(tuple, 0,
getDefaultMarshallers(cfDef).get(2).compose(key));</span></pre></div></div>So it seems
unrelated to the original NPE, but still matches the description of this ticket.To
reproduce, here is my schema:<div class="code panel" style="border-width: 1px;"><div
class="codeContent panelContent"><pre class="code-java">CREATE KEYSPACE circuswith
placement_strategy = <span class="code-quote">'SimpleStrategy'</span>and strategy_options
= {replication_factor:1};use circus;CREATE COLUMN FAMILY acrobatsWITH comparator =
UTF8TypeAND key_validation_class=UTF8TypeAND default_validation_class =
UTF8Type;</pre></div></div>Here is a pycassa script to create the data:<div class="code
panel" style="border-width: 1px;"><div class="codeContent panelContent"><pre
class="code-java">from pycassa.pool <span class="code-keyword">import</span>
ConnectionPoolfrom pycassa.columnfamily <span class="code-keyword">import</span>
ColumnFamilypool = ConnectionPool(<span class="code-quote">'circus'</span>)col_fam =
pycassa.ColumnFamily(pool, <span class="code-quote">'acrobats'</span>)<span
class="code-keyword">for</span> i in range(1, 10):    <span
class="code-keyword">for</span> j in range(1, 200000):        col_fam.insert(<span
class="code-quote">'row_key'</span> + str(i), {str(j): <span
class="code-quote">'val'</span>})</pre></div></div>Here is the pig (0.9.2) that I'm
running in local mode:<div class="code panel" style="border-width: 1px;"><div
class="codeContent panelContent"><pre class="code-java">rows = LOAD <span
class="code-quote">'cassandra:<span class="code-comment">//circus/acrobats?widerows=<span
class="code-keyword">true</span>&amp;limit=200000'</span> USING
CassandraStorage();</span>filtered = filter rows by key == <span
class="code-quote">'row_key1'</span>;columns = foreach filtered generate
flatten(columns);counted = foreach (group columns all) generate COUNT($1);dump
counted;</pre></div></div> 


