Pattern changes caused by commit: 14d62ab115001be9dfa872fb59e60ea532372d4f

From: Abstract Factory-1
To:   Abstract Factory-2

From: Factory Method-1
To:   Factory Method-2


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-8328.txt 

commit 14d62ab115001be9dfa872fb59e60ea532372d4f
Author: Aleksey Yeschenko <aleksey@apache.org>

    cqlsh: add unit tests;
    patch by Paul Cannon with minor changes by Aleksey Yeschenko, reviewed
    by Aleksey Yeschenko for CASSANDRA-3920



==================================
 Issue CASSANDRA-3920 Description 
=======================================

Project: Cassandra
-----------------

-----------------
Title: [CASSANDRA-3920] tests for cqlsh
-----------------

-----------------
Summary: tests for cqlsh
-----------------

-----------------
Issue type: Improvement
-----------------

-----------------
Current status: Resolved
-----------------

-----------------
Created at: Wed, 15 Feb 2012 19:55:21 +0000
-----------------

-----------------
Resolved at: Thu, 27 Dec 2012 23:46:57 +0000
-----------------

-----------------
Assigned to: paul cannon
-----------------

-----------------
Description: 

Cqlsh has become big enough and tries to cover enough situations that it's time to start
acting like a responsible adult and make this bugger some unit tests to guard against
regressions.
 

-----------------

-----------------
Comments: 

New Comment: 
Here's what I had so far. It's a pretty good start and has enough framework for easily
testing some fairly complicated things like tab-completion, output formatting, and value
coloring. The suite requires nosetests.<a
href="https://github.com/thepaul/cassandra/commit/a5aedeb40" class="external-link"
rel="nofollow">https://github.com/thepaul/cassandra/commit/a5aedeb40</a>let me know if I
can explain any of it. 


New Comment: 
I want to apply there changes by Paul before merging 4488. I've fixed some (minor) things
but I'm still getting FAILED (errors=3, failures=1) when running the
suite:======================================================================<br/>FAIL:
test_timestamp_output
(cqlshlib.test.test_cqlsh_output.TestCqlshOutput)<br/>----------------------------------------------------------------------<br/>Traceback
(most recent call last):<br/>  File
"/home/aleksey/Work/DataStax/cassandra/pylib/cqlshlib/test/test_cqlsh_output.py", line
444, in test_timestamp_output<br/>    ), env={'TZ': 'EST'})<br/>  File
"/home/aleksey/Work/DataStax/cassandra/pylib/cqlshlib/test/test_cqlsh_output.py", line 99,
in assertQueriesGiveColoredOutput<br/>    self.assertEqual(outputline.plain().rstrip(),
plain)<br/>AssertionError: ' 2012-05-14 07:53:20+0000' != ' 2012-05-14 07:53:20-0500'(this
one is caused by Ubuntu's strftime not supporting %z, or Ubuntu's python not supporting
%z. the same test passes on Max OS X. I'll open a separate issue later. Doesn't need
addressing
here.)======================================================================<br/>ERROR:
test_exit_prints_no_newline
(cqlshlib.test.test_cqlsh_output.TestCqlshOutput)<br/>----------------------------------------------------------------------<br/>Traceback
(most recent call last):<br/>  File
"/home/aleksey/Work/DataStax/cassandra/pylib/cqlshlib/test/test_cqlsh_output.py", line
929, in test_exit_prints_no_newline<br/>    self.assertRaises(EOFError, c.read_lines,
1)<br/>  File "/usr/lib/python2.7/unittest/case.py", line 471, in assertRaises<br/>   
callableObj(*args, **kwargs)<br/>  File
"/home/aleksey/Work/DataStax/cassandra/pylib/cqlshlib/test/run_cqlsh.py", line 185, in
read_lines<br/>    lines.append(self.read_until('\n', blksize=blksize))<br/>  File
"/home/aleksey/Work/DataStax/cassandra/pylib/cqlshlib/test/run_cqlsh.py", line 170, in
read_until<br/>    val = self.read(blksize)<br/>  File
"/home/aleksey/Work/DataStax/cassandra/pylib/cqlshlib/test/run_cqlsh.py", line 158, in
read_tty<br/>    return os.read(self.childpty, blksize)<br/>OSError: <span
class="error">&#91;Errno 5&#93;</span> Input/output error(I won't be surprised if this is
another Ubuntu vs. Max OS X difference and this os.read call throws EOFError on Mac OS X
but OSError on Ubuntu. Can you please run it
again?)======================================================================<br/>ERROR:
test_eof_prints_newline
(cqlshlib.test.test_cqlsh_output.TestCqlshOutput)<br/>----------------------------------------------------------------------<br/>Traceback
(most recent call last):<br/>  File
"/home/aleksey/Work/DataStax/cassandra/pylib/cqlshlib/test/test_cqlsh_output.py", line
920, in test_eof_prints_newline<br/>    self.assertRaises(EOFError, c.read_lines, 1)<br/> 
File "/usr/lib/python2.7/unittest/case.py", line 471, in assertRaises<br/>   
callableObj(*args, **kwargs)<br/>  File
"/home/aleksey/Work/DataStax/cassandra/pylib/cqlshlib/test/run_cqlsh.py", line 185, in
read_lines<br/>    lines.append(self.read_until('\n', blksize=blksize))<br/>  File
"/home/aleksey/Work/DataStax/cassandra/pylib/cqlshlib/test/run_cqlsh.py", line 170, in
read_until<br/>    val = self.read(blksize)<br/>  File
"/home/aleksey/Work/DataStax/cassandra/pylib/cqlshlib/test/run_cqlsh.py", line 158, in
read_tty<br/>    return os.read(self.childpty, blksize)<br/>OSError: <span
class="error">&#91;Errno 5&#93;</span> Input/output error(same as
above)======================================================================<br/>ERROR:
test_describe_keyspace_output
(cqlshlib.test.test_cqlsh_output.TestCqlshOutput)<br/>----------------------------------------------------------------------<br/>Traceback
(most recent call last):<br/>  File
"/home/aleksey/Work/DataStax/cassandra/pylib/cqlshlib/test/test_cqlsh_output.py", line
717, in test_describe_keyspace_output<br/>    self.check_describe_keyspace(v)<br/>  File
"/home/aleksey/Work/DataStax/cassandra/pylib/cqlshlib/test/test_cqlsh_output.py", line
680, in check_describe_keyspace<br/>    statements = split_cql_commands(copy_desc,
cqlver=fullcqlver)<br/>  File
"/home/aleksey/Work/DataStax/cassandra/pylib/cqlshlib/test/cassconnect.py", line 61, in
split_cql_commands<br/>    statements, in_batch =
ruleset.cql_split_statements(source)<br/>  File
"/home/aleksey/Work/DataStax/cassandra/pylib/cqlshlib/cqlhandling.py", line 170, in
cql_split_statements<br/>    tokens = self.lex(text)<br/>  File
"/home/aleksey/Work/DataStax/cassandra/pylib/cqlshlib/pylexotron.py", line 428, in
lex<br/>    raise LexingError.from_text(text, unmatched, 'text could not be lexed')<br/> 
File "/home/aleksey/Work/DataStax/cassandra/pylib/cqlshlib/pylexotron.py", line 27, in
from_text<br/>    raise cls(linenum, charnum, msg)<br/>LexingError: text could not be
lexed at line 20, char 1(this one is caused by
"/home/aleksey/Work/DataStax/cassandra/bin/../pylib/cqlshlib/cql3handling.py:866:
UnexpectedTableStructure: Unexpected table structure; may not translate correctly to CQL.
Compact storage CF dynamic_columns has no column aliases, but comparator is not UTF8Type."
line in DESCRIBE KEYSPACE output.)Please let me know if you can look at these failing
tests or if I should deal with the rest myself. Thanks. 


