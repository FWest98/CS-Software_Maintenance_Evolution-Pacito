Pattern changes caused by commit: 1a092a38d79058266cbb8c0ec860fc32f29c976e

From: Flyweight-19
To:   Flyweight-20

From: Mediator-70
To:   Mediator-71

From: Strategy-33
To:   Strategy-35


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-141.txt 

commit 1a092a38d79058266cbb8c0ec860fc32f29c976e
Author: Trustin Lee <trustin@apache.org>

    Resolved issue: DIRMINA-187 (Support IoHandler per IoSession (SingleSessionIoHandler))
    * Applied Simon's patch.
    ** classes are moved to org.apache.min.handler.multiton
    ** fixed some JavaDoc errors



==================================
 Issue DIRMINA-187 Description 
=======================================

Project: MINA
-----------------

-----------------
Title: [DIRMINA-187] Support IoHandler per IoSession (SingleSessionIoHandler)
-----------------

-----------------
Summary: Support IoHandler per IoSession (SingleSessionIoHandler)
-----------------

-----------------
Issue type: New Feature
-----------------

-----------------
Current status: Closed
-----------------

-----------------
Created at: Thu, 9 Mar 2006 05:50:34 +0000
-----------------

-----------------
Resolved at: Thu, 23 Mar 2006 16:29:41 +0000
-----------------

-----------------
Assigned to: Trustin Lee
-----------------

-----------------
Description: 

Currently, when binding an IoAcceptor a single IoHandler is specified that is shared
among all sessions. This shared IoHandler cannot use instance variables (without proper
synchronization), because it is accessed concurrently by multiple threads. The handler
state has to be stored as session attributes. However, if there was one IoHandler per
IoSession, state stored in instance variables of the IoHandler could be used safely.

The
attached zip file contains an implemented solution (as suggested by Niklas Therning) for
this idea. See the following post in the mailing list archive for a detailed
description:

<a
href="http://mail-archives.apache.org/mod_mbox/directory-mina-dev/200603.mbox/%3c440D9FDE.9010701@trillian.se%3e"
class="external-link"
rel="nofollow">http://mail-archives.apache.org/mod_mbox/directory-mina-dev/200603.mbox/%3c440D9FDE.9010701@trillian.se%3e</a>

What
do you think?
 

-----------------

-----------------
Comments: 

New Comment: 
This solution looks a little bit complicated IMHO.  What do you think about this:interface
IoHandlerFactory<br/>{<br/>    IoHandler getHandler( IoSession session );<br/>}interface
IoAcceptor<br/>{<br/>    void bind( SocketAddress address, IoHandler handler ); // one
handler handles multiple sessions<br/>    void bind( SocketAddress address,
IoHandlerFactory handlerFactory ); // multiple handler handler multiple sessions<br/>   
void bind( SocketAddress address, Class&lt;IoHandler&gt; handlerClass ); // multiple
handler multiple sessions, handlerClass is instantiated whenever a new session is
created.<br/>}&lt;usage 1&gt;class MyHandlerFactory implements IoHandlerFactory<br/>{<br/>
   IoHandler getHandler( IoSession session )    {        return new MyHandler();  //
MyHandler implements IoHandler    }}acceptor.bind( ..., new MyHandlerFactory() );&lt;usage
2&gt;<br/>acceptor.bind(..., MyHandler.class);This will seamlessly integrate per-session
handlers retaining backward compatibility. 


New Comment: 
The third option that takes a class should be an IoHandlerFactory that the project
supplies, not a separate method. 


New Comment: 
If I would ever want each session to be handled by a seperate handler I would prefer
having something like the SingleSessionIoHandler. My own code will be cleaner and easier
to understand when the session isn't passed into each and every method. That's why I think
something like the new SingleSessionIoHandler interface is needed.I agree with Pete on the
third bind()-method. It shouldn't be a seperate method. 


New Comment: 
peter&gt; Why?  We can implement the first and the third one to call the second one very
easily in BaseIoAcceptor, so a transport-type implementor is OK to implement only the
second one.niklas&gt; If a session is passed as a parameter, it is very convenient to
program because it is always available as a local variable, though we can set it via a
setter or a constructor, too.Providing two ways (per-session and per-service) for one
interface (IoHandler) might confuse users.  Therefore, my suggestion might be bad! <img
class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/biggrin.png"
height="16" width="16" align="absmiddle" alt="" border="0"/> 


New Comment: 
Looking closer, I prefer the solution provided in the patch.I think the question is, what
is the common case? A shared IoHandler on the server, or per-session filters? In my
(limited) experience, I have been using shared IoHandlers on the server w/o problems. So
I'll agree with Niklas . 


New Comment: 
Applied Simon's patch after a little modifications:<a
href="http://svn.apache.org/viewcvs?rev=388103&amp;view=rev" class="external-link"
rel="nofollow">http://svn.apache.org/viewcvs?rev=388103&amp;view=rev</a>Please review the
fix and close this issue.  The patch was very high-quality.  Thank you, Simon! <img
class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/biggrin.png"
height="16" width="16" align="absmiddle" alt="" border="0"/> 


New Comment: 
I'm a bit confused about the following code inside SingleSessionIoHandlerAdapter class:   
public void sessionClosed() throws Exception     {        SessionUtil.initialize(
getSession() );    }Shouldn't this code be placed inside the sessionCreated() method? 


