Pattern changes caused by commit: 520ebc495d1410069fa7b36966a335cff204efdd

From: Mediator-73
To:   Mediator-75


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-163.txt 

commit 520ebc495d1410069fa7b36966a335cff204efdd
Author: Trustin Lee <trustin@apache.org>

    Fixed issue: DIRMINA-200 (IBM iSeries throws unexpected SocketException)
    * Socket/DatagramSessionConfigImpl now pre-calculates default values and availability of socket options



==================================
 Issue DIRMINA-200 Description 
=======================================

Project: MINA
-----------------

-----------------
Title: [DIRMINA-200] IBM iSeries throws unexpected SocketException
-----------------

-----------------
Summary: IBM iSeries throws unexpected SocketException
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Closed
-----------------

-----------------
Created at: Tue, 4 Apr 2006 22:33:51 +0000
-----------------

-----------------
Resolved at: Wed, 9 Aug 2006 07:33:17 +0000
-----------------

-----------------
Assigned to: Trustin Lee
-----------------

-----------------
Description: 

Proposal of a change to nio SocketSessionImpl.

I'd like the calls
to:

	getTrafficClass<br/>	setTrafficClass<br/>	setSendBufferSize<br/>	setReceiveBufferSize

to
not throw RuntimeIOException when a SocketException is caught.

My reasoning is based on
the Socket class javadoc:

E.g.  setTrafficClass

"As the underlying network
implementation may ignore this value applications should consider it a
hint."

and

"Setting bits in the precedence field may result in a SocketException
indicating that the operation is not permitted."

The other getter/setter method javadoc
also refer to 'hints' and a 'if there is an error obtaining' condition.

Some operating
systems (OS/400 in my case <img class="emoticon"
src="https://issues.apache.org/jira/images/icons/emoticons/wink.png" height="16"
width="16" align="absmiddle" alt="" border="0"/> ), do not allow the trafficClass value to
be read or written.  I think this may also be the case as reported here on Linux:

<a
href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4709474" class="external-link"
rel="nofollow">http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4709474</a>

By ignoring
the SocketException thrown by these methods (perhaps issuing a log4j WARN instead?  Or
hooking up with an appropriate monitor?), socket sessions can be established without error
on an IBM iSeries.

Example stack trace:

2006-04-03 17:26:26,343 WARN  <span
class="error">&#91;org.apache.mina.common.support.DefaultExceptionMonitor&#93;</span>(SocketAcceptor-0)
Unexpected exception.<br/>org.apache.mina.common.RuntimeIOException:
java.net.SocketException<br/>	at
java.lang.Throwable.&lt;init&gt;(Throwable.java:240)<br/>	at
java.lang.Exception.&lt;init&gt;(Exception.java:77)<br/>	at
java.lang.RuntimeException.&lt;init&gt;(RuntimeException.java:77)<br/>	at
org.apache.mina.common.RuntimeIOException.&lt;init&gt;(RuntimeIOException.java:48)<br/>	at
org.apache.mina.transport.socket.nio.support.SocketSessionImpl$SocketSessionConfigImpl.setTrafficClass(SocketSessionImpl.java:342)<br/>	at
org.apache.mina.transport.socket.nio.support.SocketSessionImpl.&lt;init&gt;(SocketSessionImpl.java:71)<br/>	at
org.apache.mina.transport.socket.nio.support.SocketAcceptorDelegate$Worker.processSessions(SocketAcceptorDelegate.java:379)<br/>	at
org.apache.mina.transport.socket.nio.support.SocketAcceptorDelegate$Worker.run(SocketAcceptorDelegate.java:326)<br/>Caused
by: java.net.SocketException<br/>	at
java.lang.Throwable.&lt;init&gt;(Throwable.java:180)<br/>	at
java.lang.Exception.&lt;init&gt;(Exception.java:29)<br/>	at
java.io.IOException.&lt;init&gt;(IOException.java:28)<br/>	at
java.net.SocketException.&lt;init&gt;(SocketException.java:35)<br/>	at
sun.nio.ch.Net.setIntOption(Net.java:156)<br/>	at
sun.nio.ch.SocketChannelImpl$1.setInt(SocketChannelImpl.java:398)<br/>	at
sun.nio.ch.SocketOptsImpl.setInt(SocketOptsImpl.java:46)<br/>	at
sun.nio.ch.SocketOptsImpl$IP.typeOfService(SocketOptsImpl.java:249)<br/>	at
sun.nio.ch.OptionAdaptor.setTrafficClass(OptionAdaptor.java:158)<br/>	at
sun.nio.ch.SocketAdaptor.setTrafficClass(SocketAdaptor.java:320)<br/>	... 4 more

I have
attached a proposed patch and welcome any comments.

SimonT
 

-----------------

-----------------
Comments: 

New Comment: 
This is an example patch I have used to fix the nio socket connection problem on IBM
iSeries 


New Comment: 
I think we could just return false for setter methods instead of logging.Is it fine for us
to patch these four methods only? 


New Comment: 
We're using MINA via DS RC1.  If returning false does not cause the socket connection to
be rejected then your suggestion is fine.I think the 'four methods' may occur in other
classes: DatagramSessionImpl.java, for example.It may be best to grep the whole source
tree for occurences...? 


New Comment: 
I checked in the fix to the trunk and deployed 0.9.4-SNAPSHOT.  Please let me know if it
fixes this issue. 


New Comment: 
Sorry for the delay Trustin...We just upgraded our production systems to 0.9.4 release and
noticed the patch was not included.I realise it is my fault for not getting back to you...
sorry.Could you patch the current trunk so we can work towards a fix in your next
release?ThanksSimonT 


New Comment: 
Well, I fixed this issue AFAIK though I didn't apply your patch directly.  Here's the
change I've made:<a href="http://svn.apache.org/viewvc?view=rev&amp;revision=394852"
class="external-link"
rel="nofollow">http://svn.apache.org/viewvc?view=rev&amp;revision=394852</a>Did you try to
run with 0.9.4?  If it didn't work, please try with the trunk.  It should work fine. 
Otherwise, please reopen this issue. 


New Comment: 
We are running 0.9.4 (Release)It looks like:           
SocketSessionConfigImpl.isGetTrafficClassAvailable() is returning true...but...2006-06-20
09:44:59,315 WARN  <span
class="error">&#91;org.apache.mina.common.support.DefaultExceptionMonitor&#93;</span>(SocketAcceptor-0)
Unexpected exception.<br/>org.apache.mina.common.RuntimeIOException:
java.net.SocketException<br/>	at
java.lang.Throwable.&lt;init&gt;(Throwable.java:240)<br/>	at
java.lang.Exception.&lt;init&gt;(Exception.java:77)<br/>	at
java.lang.RuntimeException.&lt;init&gt;(RuntimeException.java:77)Sock<br/>	at
org.apache.mina.common.RuntimeIOException.&lt;init&gt;(RuntimeIOException.java:48)<br/>	at
org.apache.mina.transport.socket.nio.SocketSessionImpl$SessionConfigImpl.getTrafficClass(SocketSessionImpl.java:348)<br/>	at
org.apache.mina.transport.socket.nio.SocketSessionImpl.&lt;init&gt;(SocketSessionImpl.java:96)<br/>	at
org.apache.mina.transport.socket.nio.SocketAcceptor$Worker.processSessions(SocketAcceptor.java:435)<br/>	at
org.apache.mina.transport.socket.nio.SocketAcceptor$Worker.run(SocketAcceptor.java:362)<br/>Caused
by: java.net.SocketException<br/>	at
java.lang.Throwable.&lt;init&gt;(Throwable.java:180)<br/>	at
java.lang.Exception.&lt;init&gt;(Exception.java:29)<br/>	at
java.io.IOException.&lt;init&gt;(IOException.java:28)<br/>	at
java.net.SocketException.&lt;init&gt;(SocketException.java:35)<br/>	at
sun.nio.ch.Net.getIntOption(Net.java:145)<br/>	at
sun.nio.ch.SocketChannelImpl$1.getInt(SocketChannelImpl.java:393)<br/>	at
sun.nio.ch.SocketOptsImpl.getInt(SocketOptsImpl.java:42)<br/>	at
sun.nio.ch.SocketOptsImpl$IP.typeOfService(SocketOptsImpl.java:245)<br/>	at
sun.nio.ch.OptionAdaptor.getTrafficClass(OptionAdaptor.java:166)<br/>	at
sun.nio.ch.SocketAdaptor.getTrafficClass(etAdaptor.java:325)<br/>	at
org.apache.mina.transport.socket.nio.SocketSessionImpl$SessionConfigImpl.getTrafficClass(SocketSessionImpl.java:344)<br/>	...
3 more 


New Comment: 
It seems like my fix didn't work because getTrafficClass() doesn't always throw an
exception.  It would be nice if I have a machine which can reproduce this issue. 


New Comment: 
I checked in the candidate for fixing this issue.  Simon, could you try again with the
trunk? 


New Comment: 
Sorry I can't deploy and test a trunk build without rebuilding all other DS related JARs
(due to refactoring changes since V1RC3)I tried patching a couple of files in 0.9.3 but
classes have moved between:    org\apache\mina\transport\socket\nio\support<br/>and<br/>  
 org\apache\mina\transport\socket\niothe class SocketConnectorDelegate.java also looks
like its gone and... Bottom line is I'm struggling with the trunk patch.  Can you supply a
patch for 0.9.4 or 0.9.3?Thanks 


New Comment: 
SocketAcceptor/ConnectorDelegate has been replaced with SocketAcceptor/Connector in 0.9.5.
 Unfortunately, you'll have to patch it manually for now though the next RC of ApacheDS
will use MINA 0.9.5 or above.The following URL shows all changes made for this issue:<a
href="http://issues.apache.org/jira/browse/DIRMINA-200?page=com.atlassian.jira.plugin.ext.subversion:subversion-commits-tabpanel"
class="external-link"
rel="nofollow">http://issues.apache.org/jira/browse/DIRMINA-200?page=com.atlassian.jira.plugin.ext.subversion:subversion-commits-tabpanel</a> 


New Comment: 
And other missing files in socket.nio.support package should exist in socket.nio package. 
Please lt me any other missing files. 


New Comment: 
(X) Please lt me any other missing files.<br/>(O) Please let me know any other missing
files.Sorry for flooding comments! 


New Comment: 
There has been no feed back since my last fix.  I will mark this issue as resolved for now
and reopen it when someone reports the problem again. 


