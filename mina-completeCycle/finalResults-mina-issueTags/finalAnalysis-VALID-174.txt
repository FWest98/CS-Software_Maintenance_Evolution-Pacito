Pattern changes caused by commit: b8acf1011ddecf64a72cb37e7338ac56c1577ead

From: Singleton-2
To:   Singleton-1

From: Decorator-3
To:   Decorator-4

From: Flyweight-20
To:   Flyweight-19


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-174.txt 

commit b8acf1011ddecf64a72cb37e7338ac56c1577ead
Author: Peter A Royal Jr <proyal@apache.org>

    DIRMINA-185 - Reference-counting based init/destroy of IoFilters has been moved into a wrapper class that can be used when users desire that behavior. By default, MINA will not init/destroy IoFilter instances.



==================================
 Issue DIRMINA-185 Description 
=======================================

Project: MINA
-----------------

-----------------
Title: [DIRMINA-185] Refactor IoFilter life cycle management
-----------------

-----------------
Summary: Refactor IoFilter life cycle management
-----------------

-----------------
Issue type: Improvement
-----------------

-----------------
Current status: Closed
-----------------

-----------------
Created at: Sun, 5 Mar 2006 19:02:26 +0000
-----------------

-----------------
Resolved at: Sat, 29 Apr 2006 23:45:40 +0000
-----------------

-----------------
Assigned to: Unassigned
-----------------

-----------------
Description: 

I thought it would be good to have this discussion in JIRA. Please add your thoughs to
this issue. Below I'll try to give a background to the problem.

Recently, a discussion on
IoFilter life cycle management has been going on on the MINA mailing list. Questions have
been raised whether MINA should provide life cycle management (LCM) for all filters (the
current situation), if it should be optional (either on by default or off by default) or
if it shouldn't be supported at all.

In version 0.9.2 of MINA IoFilter has six LCM
methods:

init, onPreAdd, onPostAdd, onPreRemove, onPostRemove and destroy

The LCM is
handled by AbstractIoFilterChain and the singleton IoFilterLifeCycleManager.
IoFilterLifeCycleManager uses reference counting to determine whether init/destroy should
be called when a filter is added to/removed from a filter chain. 

In MINA 0.8 filter
chains were typically shared among sessions. This meant that init/destroy would only be
called once (or at least very few times) in the lifetime of an application. However, in
MINA 0.9 filter chains are always per session which means that in some circumstances
init/destroy will be called very frequently.

The discussion on LCM forked from the
discussion on <a href="https://issues.apache.org/jira/browse/DIRMINA-169" title="Deadlock
in ThreadPoolFilter" class="issue-link"
data-issue-key="DIRMINA-169"><del>DIRMINA-169</del></a>. The LCM described above causes a
deadlock in the current implementation of ThreadPoolFilter.

How do you think MINA should
handle LCM?
 
