Pattern changes caused by commit: 19a9be0e18ed6c68ada9bae2ea6e21a8bdc17ad5

From: Composite-3
To:   Composite-2

From: Facade-26
To:   Facade-27

From: Flyweight-20
To:   Flyweight-21

From: Mediator-68
To:   Mediator-66


=========================
       NEW GIT LOG
=========================

This commit refers to file: VALID-294.txt 

commit 19a9be0e18ed6c68ada9bae2ea6e21a8bdc17ad5
Author: Trustin Lee <trustin@apache.org>

    Resolved issue: DIRMINA-162 (datagram session management fails)
    * Added IoSessionRecycler
    * Moved common logic related with sessionCreated/Opened/Closed to IoServiceListenerSupport to reduce duplication
    * Added ExpiringSessionRecycler and its required classes
    * Fixed that IoServiceListener doesn't work with VM-pipe



==================================
 Issue DIRMINA-162 Description 
=======================================

Project: MINA
-----------------

-----------------
Title: [DIRMINA-162] datagram session management fails
-----------------

-----------------
Summary: datagram session management fails
-----------------

-----------------
Issue type: Bug
-----------------

-----------------
Current status: Closed
-----------------

-----------------
Created at: Wed, 11 Jan 2006 07:55:53 +0000
-----------------

-----------------
Resolved at: Tue, 12 Sep 2006 09:27:30 +0000
-----------------

-----------------
Assigned to: Trustin Lee
-----------------

-----------------
Description: 

As of mina 0.9.0 the session management does not work in various ways:
<ul
class="alternate" type="square">	<li>a new session is created per received package. The
worker thread does not cache created session but only assign the select key to the session
and drops it after processing the package. It would be better to attach the session to the
RegistrationRequest and check it while processing the received package.</li>	<li>the
provided IoFilterChainBuilder does get applied to the created datagram session. It is
cached in the RegistrationRequest but not used on the session</li>	<li>The sessionClose
lifecycle event is not applied on the session either.</li></ul> 
